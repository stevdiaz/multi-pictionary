{"ast":null,"code":"//CoffeeScript generated from main/screen-position/leap.screen-position.coffee\n\n/*\nAdds the \"screenPosition\" method by default to hands and pointables.  This returns a vec3 (an array of length 3)\nwith [x,y,z] screen coordinates indicating where the hand is, originating from the bottom left.\nThis method can accept an optional vec3, allowing it to convert any arbitrary vec3 of coordinates.\n\nCustom positioning methods can be passed in, allowing different scaling techniques,\ne.g., http://msdn.microsoft.com/en-us/library/windows/hardware/gg463319.aspx (Pointer Ballistics)\nHere we scale based upon the interaction box and screen size:\n\noptions:\n  scale, scaleX, and scaleY.  They all default to 1.\n  verticalOffset: in pixels.  This number is added to the returned Y value.  Defaults to 0.\n\n\n\ncontroller.use 'screenPosition', {\n  method: (positionVec3)->\n    Arguments for Leap.vec3 are (out, a, b)\n    [\n      Leap.vec3.subtract(positionVec3, positionVec3, @frame.interactionBox.center)\n      Leap.vec3.divide(positionVec3, positionVec3, @frame.interactionBox.size)\n      Leap.vec3.multiply(positionVec3, positionVec3, [document.body.offsetWidth, document.body.offsetHeight, 0])\n    ]\n}\nMore info on vec3 can be found, here: http://glmatrix.net/docs/2.2.0/symbols/vec3.html\n*/\n(function () {\n  var screenPosition;\n\n  screenPosition = function (options) {\n    var baseScale, baseVerticalOffset, position, positioningMethods;\n\n    if (options == null) {\n      options = {};\n    }\n\n    options.positioning || (options.positioning = 'absolute');\n    options.scale || (options.scale = 1);\n    options.scaleX || (options.scaleX = 1);\n    options.scaleY || (options.scaleY = 1);\n    options.scaleZ || (options.scaleZ = 1);\n    options.verticalOffset || (options.verticalOffset = 0);\n    baseScale = 6;\n    baseVerticalOffset = -100;\n    positioningMethods = {\n      absolute: function (positionVec3) {\n        return [window.innerWidth / 2 + positionVec3[0] * baseScale * options.scale * options.scaleX, window.innerHeight + baseVerticalOffset + options.verticalOffset - positionVec3[1] * baseScale * options.scale * options.scaleY, positionVec3[2] * baseScale * options.scale * options.scaleZ];\n      }\n    };\n\n    position = function (vec3, memoize) {\n      var screenPositionVec3;\n\n      if (memoize == null) {\n        memoize = false;\n      }\n\n      screenPositionVec3 = typeof options.positioning === 'function' ? options.positioning.call(this, vec3) : positioningMethods[options.positioning].call(this, vec3);\n\n      if (memoize) {\n        this.screenPositionVec3 = screenPositionVec3;\n      }\n\n      return screenPositionVec3;\n    };\n\n    return {\n      hand: {\n        screenPosition: function (vec3) {\n          return position.call(this, vec3 || this.palmPosition, !vec3);\n        }\n      },\n      pointable: {\n        screenPosition: function (vec3) {\n          return position.call(this, vec3 || this.tipPosition, !vec3);\n        }\n      }\n    };\n  };\n\n  if (typeof Leap !== 'undefined' && Leap.Controller) {\n    Leap.Controller.plugin('screenPosition', screenPosition);\n  } else if (typeof module !== 'undefined') {\n    module.exports.screenPosition = screenPosition;\n  } else {\n    throw 'leap.js not included';\n  }\n}).call(this);","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/node_modules/leapjs-plugins/main/screen-position/leap.screen-position.js"],"names":["screenPosition","options","baseScale","baseVerticalOffset","position","positioningMethods","positioning","scale","scaleX","scaleY","scaleZ","verticalOffset","absolute","positionVec3","window","innerWidth","innerHeight","vec3","memoize","screenPositionVec3","call","hand","palmPosition","pointable","tipPosition","Leap","Controller","plugin","module","exports"],"mappings":"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","sourcesContent":["//CoffeeScript generated from main/screen-position/leap.screen-position.coffee\n/*\nAdds the \"screenPosition\" method by default to hands and pointables.  This returns a vec3 (an array of length 3)\nwith [x,y,z] screen coordinates indicating where the hand is, originating from the bottom left.\nThis method can accept an optional vec3, allowing it to convert any arbitrary vec3 of coordinates.\n\nCustom positioning methods can be passed in, allowing different scaling techniques,\ne.g., http://msdn.microsoft.com/en-us/library/windows/hardware/gg463319.aspx (Pointer Ballistics)\nHere we scale based upon the interaction box and screen size:\n\noptions:\n  scale, scaleX, and scaleY.  They all default to 1.\n  verticalOffset: in pixels.  This number is added to the returned Y value.  Defaults to 0.\n\n\n\ncontroller.use 'screenPosition', {\n  method: (positionVec3)->\n    Arguments for Leap.vec3 are (out, a, b)\n    [\n      Leap.vec3.subtract(positionVec3, positionVec3, @frame.interactionBox.center)\n      Leap.vec3.divide(positionVec3, positionVec3, @frame.interactionBox.size)\n      Leap.vec3.multiply(positionVec3, positionVec3, [document.body.offsetWidth, document.body.offsetHeight, 0])\n    ]\n}\nMore info on vec3 can be found, here: http://glmatrix.net/docs/2.2.0/symbols/vec3.html\n*/\n\n\n(function() {\n  var screenPosition;\n\n  screenPosition = function(options) {\n    var baseScale, baseVerticalOffset, position, positioningMethods;\n    if (options == null) {\n      options = {};\n    }\n    options.positioning || (options.positioning = 'absolute');\n    options.scale || (options.scale = 1);\n    options.scaleX || (options.scaleX = 1);\n    options.scaleY || (options.scaleY = 1);\n    options.scaleZ || (options.scaleZ = 1);\n    options.verticalOffset || (options.verticalOffset = 0);\n    baseScale = 6;\n    baseVerticalOffset = -100;\n    positioningMethods = {\n      absolute: function(positionVec3) {\n        return [(window.innerWidth / 2) + (positionVec3[0] * baseScale * options.scale * options.scaleX), window.innerHeight + baseVerticalOffset + options.verticalOffset - (positionVec3[1] * baseScale * options.scale * options.scaleY), positionVec3[2] * baseScale * options.scale * options.scaleZ];\n      }\n    };\n    position = function(vec3, memoize) {\n      var screenPositionVec3;\n      if (memoize == null) {\n        memoize = false;\n      }\n      screenPositionVec3 = typeof options.positioning === 'function' ? options.positioning.call(this, vec3) : positioningMethods[options.positioning].call(this, vec3);\n      if (memoize) {\n        this.screenPositionVec3 = screenPositionVec3;\n      }\n      return screenPositionVec3;\n    };\n    return {\n      hand: {\n        screenPosition: function(vec3) {\n          return position.call(this, vec3 || this.palmPosition, !vec3);\n        }\n      },\n      pointable: {\n        screenPosition: function(vec3) {\n          return position.call(this, vec3 || this.tipPosition, !vec3);\n        }\n      }\n    };\n  };\n\n  if ((typeof Leap !== 'undefined') && Leap.Controller) {\n    Leap.Controller.plugin('screenPosition', screenPosition);\n  } else if (typeof module !== 'undefined') {\n    module.exports.screenPosition = screenPosition;\n  } else {\n    throw 'leap.js not included';\n  }\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}