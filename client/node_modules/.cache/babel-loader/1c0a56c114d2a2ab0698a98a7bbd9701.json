{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/DrawCard.js\";\nimport React, { Component } from 'react';\nimport './DrawCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class DrawCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      didStartDrawing: false\n    };\n    this.options = ['cat', 'dog', 'car', 'bus', 'house', 'tree', 'pool', 'star', 'plane', 'computer'];\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isDrawing && !this.state.didStartDrawing) {\n      this.setState({\n        didStartDrawing: true\n      });\n    }\n\n    if (this.props.isSwipe && !prevProps.isSwipe && !this.state.didStartDrawing) {\n      this.setState(prevState => ({\n        index: prevState.index === this.options.length - 1 ? 0 : prevState.index + 1\n      }));\n    }\n  }\n\n  render() {\n    let card = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"DrawCard-card\",\n      children: this.options[this.state.index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this);\n\n    let text = this.state.didStartDrawing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Drawing a \", card]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Choosing a \", card]\n    }, void 0, true);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DrawCard-container\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/DrawCard.js"],"names":["React","Component","DrawCard","constructor","props","state","index","didStartDrawing","options","componentDidMount","componentDidUpdate","prevProps","isDrawing","setState","isSwipe","prevState","length","render","card","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,eAAe,EAAE;AAFR,KAAb;AAIA,SAAKC,OAAL,GAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,OAA7B,EAAsC,MAAtC,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,UAAvE,CAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKP,KAAL,CAAWQ,SAAX,IAAwB,CAAC,KAAKP,KAAL,CAAWE,eAAxC,EAAyD;AACrD,WAAKM,QAAL,CAAc;AACVN,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH;;AAAC,QAAI,KAAKH,KAAL,CAAWU,OAAX,IAAsB,CAACH,SAAS,CAACG,OAAjC,IAA4C,CAAC,KAAKT,KAAL,CAAWE,eAA5D,EAA6E;AAC3E,WAAKM,QAAL,CAAcE,SAAS,KAAK;AACxBT,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,KAAoB,KAAKE,OAAL,CAAaQ,MAAb,GAAsB,CAA1C,GAA8C,CAA9C,GAAkDD,SAAS,CAACT,KAAV,GAAkB;AADnD,OAAL,CAAvB;AAGH;AACJ;;AACDW,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,gBAAI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,gBAAiC,KAAKV,OAAL,CAAa,KAAKH,KAAL,CAAWC,KAAxB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAZ;;AACA,QAAIa,IAAI,GAAG,KAAKd,KAAL,CAAWE,eAAX,gBAEP;AAAA,+BACeW,IADf;AAAA,oBAFO,gBAMP;AAAA,gCACgBA,IADhB;AAAA,oBANJ;AAWA,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzCiD","sourcesContent":["import React, { Component } from 'react';\nimport './DrawCard.css';\n\nexport default class DrawCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0,\n            didStartDrawing: false,\n        };\n        this.options = ['cat', 'dog', 'car', 'bus', 'house', 'tree', 'pool', 'star', 'plane', 'computer'];\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.isDrawing && !this.state.didStartDrawing) {\n            this.setState({\n                didStartDrawing: true,\n            });\n        } if (this.props.isSwipe && !prevProps.isSwipe && !this.state.didStartDrawing) {\n            this.setState(prevState => ({\n                index: prevState.index === this.options.length - 1 ? 0 : prevState.index + 1, \n            }));\n        }\n    }\n    render() {\n        let card = (<span className='DrawCard-card'>{this.options[this.state.index]}</span>);\n        let text = this.state.didStartDrawing ? \n        (\n            <>\n                Drawing a {card}\n            </>\n        ) : (\n            <>\n                Choosing a {card}\n            </>\n        );\n\n        return (\n            <div className='DrawCard-container'>\n                {text}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}