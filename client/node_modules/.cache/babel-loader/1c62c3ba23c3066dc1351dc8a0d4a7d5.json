{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Canvas.js\";\nimport React, { Component } from 'react';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    let ref = /*#__PURE__*/React.createRef();\n    this.state = {\n      isPainting: false,\n      prevPos: {\n        offsetX: 0,\n        offsetY: 0\n      },\n      line: [],\n      ref: ref\n    };\n    this.canvasWidth = 270;\n    this.canvasHeight = 270;\n  }\n\n  componentDidMount() {\n    this.state.ref.current.width = this.canvasWidth;\n    this.state.ref.current.height = this.canvasHeight;\n    const ctx = this.state.ref.current.getContext('2d');\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 5;\n  }\n\n  componentDidUpdate() {}\n\n  onMouseDown({\n    nativeEvent\n  }) {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const offsetData = {\n      offsetX,\n      offsetY\n    };\n    this.setState({\n      isPainting: true,\n      prevPos: offsetData\n    });\n  }\n\n  onMouseMove({\n    nativeEvent\n  }) {\n    if (this.state.isPainting) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      const offsetData = {\n        offsetX,\n        offsetY\n      };\n      const positionData = {\n        start: { ...this.state.prevPos\n        },\n        stop: { ...offsetData\n        }\n      };\n      this.setState(prevState => ({\n        line: prevState.line.concat(positionData)\n      }), () => this.paint(this.state.prevPos, offsetData));\n    }\n  }\n\n  endPaintEvent() {\n    this.setState({\n      isPainting: false\n    });\n  }\n\n  paint(prevPos, currPos) {\n    const {\n      offsetX,\n      offsetY\n    } = currPos;\n    const {\n      offsetX: x,\n      offsetY: y\n    } = prevPos;\n    const ctx = this.state.ref.current.getContext('2d');\n    ctx.beginPath();\n    ctx.strokeStyle = 'black';\n    ctx.moveTo(x, y);\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n    this.setState({\n      prevPos: {\n        offsetX,\n        offsetY\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Canvas-instructions\",\n        children: \"Draw Below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Canvas-canvas\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"Canvas\",\n          ref: this.state.ref,\n          style: {\n            background: 'var(--offwhite)'\n          },\n          onMouseDown: evt => this.onMouseDown(evt),\n          onMouseLeave: () => this.endPaintEvent(),\n          onMouseUp: () => this.endPaintEvent(),\n          onMouseMove: evt => this.onMouseMove(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Canvas.js"],"names":["React","Component","Canvas","constructor","props","ref","createRef","state","isPainting","prevPos","offsetX","offsetY","line","canvasWidth","canvasHeight","componentDidMount","current","width","height","ctx","getContext","lineJoin","lineCap","lineWidth","componentDidUpdate","onMouseDown","nativeEvent","offsetData","setState","onMouseMove","positionData","start","stop","prevState","concat","paint","endPaintEvent","currPos","x","y","beginPath","strokeStyle","moveTo","lineTo","stroke","render","background","evt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACC,SAA3B,CAAqC;AAChDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,QAAIC,GAAG,gBAAGL,KAAK,CAACM,SAAN,EAAV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE,CADJ;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAFA;AAMTC,MAAAA,IAAI,EAAE,EANG;AAOTP,MAAAA,GAAG,EAAEA;AAPI,KAAb;AASA,SAAKQ,WAAL,GAAmB,GAAnB;AACA,SAAKC,YAAL,GAAoB,GAApB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWF,GAAX,CAAeW,OAAf,CAAuBC,KAAvB,GAA+B,KAAKJ,WAApC;AACA,SAAKN,KAAL,CAAWF,GAAX,CAAeW,OAAf,CAAuBE,MAAvB,GAAgC,KAAKJ,YAArC;AACA,UAAMK,GAAG,GAAG,KAAKZ,KAAL,CAAWF,GAAX,CAAeW,OAAf,CAAuBI,UAAvB,CAAkC,IAAlC,CAAZ;AACAD,IAAAA,GAAG,CAACE,QAAJ,GAAe,OAAf;AACAF,IAAAA,GAAG,CAACG,OAAJ,GAAc,OAAd;AACAH,IAAAA,GAAG,CAACI,SAAJ,GAAgB,CAAhB;AACH;;AACDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAkB;AACzB,UAAM;AAAEhB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBe,WAA7B;AACA,UAAMC,UAAU,GAAG;AAACjB,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAAnB;AACA,SAAKiB,QAAL,CAAc;AACVpB,MAAAA,UAAU,EAAE,IADF;AAEVC,MAAAA,OAAO,EAAEkB;AAFC,KAAd;AAIH;;AACDE,EAAAA,WAAW,CAAC;AAAEH,IAAAA;AAAF,GAAD,EAAkB;AACzB,QAAI,KAAKnB,KAAL,CAAWC,UAAf,EAA2B;AACvB,YAAM;AAAEE,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuBe,WAA7B;AACA,YAAMC,UAAU,GAAG;AAAEjB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAnB;AACA,YAAMmB,YAAY,GAAG;AACjBC,QAAAA,KAAK,EAAE,EAAE,GAAG,KAAKxB,KAAL,CAAWE;AAAhB,SADU;AAEjBuB,QAAAA,IAAI,EAAE,EAAE,GAAGL;AAAL;AAFW,OAArB;AAIA,WAAKC,QAAL,CAAcK,SAAS,KAAK;AACxBrB,QAAAA,IAAI,EAAEqB,SAAS,CAACrB,IAAV,CAAesB,MAAf,CAAsBJ,YAAtB;AADkB,OAAL,CAAvB,EAEI,MAAM,KAAKK,KAAL,CAAW,KAAK5B,KAAL,CAAWE,OAAtB,EAA+BkB,UAA/B,CAFV;AAGH;AACJ;;AACDS,EAAAA,aAAa,GAAG;AACZ,SAAKR,QAAL,CAAc;AACVpB,MAAAA,UAAU,EAAE;AADF,KAAd;AAGH;;AACD2B,EAAAA,KAAK,CAAC1B,OAAD,EAAU4B,OAAV,EAAmB;AACpB,UAAM;AAAE3B,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB0B,OAA7B;AACA,UAAM;AAAE3B,MAAAA,OAAO,EAAE4B,CAAX;AAAc3B,MAAAA,OAAO,EAAE4B;AAAvB,QAA6B9B,OAAnC;AAEA,UAAMU,GAAG,GAAG,KAAKZ,KAAL,CAAWF,GAAX,CAAeW,OAAf,CAAuBI,UAAvB,CAAkC,IAAlC,CAAZ;AACAD,IAAAA,GAAG,CAACqB,SAAJ;AACArB,IAAAA,GAAG,CAACsB,WAAJ,GAAkB,OAAlB;AACAtB,IAAAA,GAAG,CAACuB,MAAJ,CAAWJ,CAAX,EAAcC,CAAd;AACApB,IAAAA,GAAG,CAACwB,MAAJ,CAAWjC,OAAX,EAAoBC,OAApB;AACAQ,IAAAA,GAAG,CAACyB,MAAJ;AACA,SAAKhB,QAAL,CAAc;AACVnB,MAAAA,OAAO,EAAE;AACLC,QAAAA,OADK;AAELC,QAAAA;AAFK;AADC,KAAd;AAMH;;AACDkC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AACI,UAAA,EAAE,EAAC,QADP;AAEI,UAAA,GAAG,EAAE,KAAKtC,KAAL,CAAWF,GAFpB;AAGI,UAAA,KAAK,EAAE;AAAEyC,YAAAA,UAAU,EAAE;AAAd,WAHX;AAII,UAAA,WAAW,EAAGC,GAAD,IAAS,KAAKtB,WAAL,CAAiBsB,GAAjB,CAJ1B;AAKI,UAAA,YAAY,EAAE,MAAM,KAAKX,aAAL,EALxB;AAMI,UAAA,SAAS,EAAE,MAAM,KAAKA,aAAL,EANrB;AAOI,UAAA,WAAW,EAAGW,GAAD,IAAS,KAAKlB,WAAL,CAAiBkB,GAAjB;AAP1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAzF+C","sourcesContent":["import React, { Component } from 'react';\nimport './Canvas.css';\n\nexport default class Canvas extends React.Component {\n    constructor(props) {\n        super(props);\n        let ref = React.createRef();\n        this.state = {\n            isPainting: false,\n            prevPos: {\n                offsetX: 0,\n                offsetY: 0,\n            },\n            line: [],\n            ref: ref,\n        };\n        this.canvasWidth = 270;\n        this.canvasHeight = 270;\n    }\n    componentDidMount() {\n        this.state.ref.current.width = this.canvasWidth;\n        this.state.ref.current.height = this.canvasHeight;\n        const ctx = this.state.ref.current.getContext('2d');\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.lineWidth = 5; \n    }\n    componentDidUpdate() {\n\n    }\n    onMouseDown({ nativeEvent }) {\n        const { offsetX, offsetY } = nativeEvent;\n        const offsetData = {offsetX, offsetY};\n        this.setState({\n            isPainting: true,\n            prevPos: offsetData,\n        });\n    }\n    onMouseMove({ nativeEvent }) {\n        if (this.state.isPainting) {\n            const { offsetX, offsetY } = nativeEvent;\n            const offsetData = { offsetX, offsetY };\n            const positionData = {\n                start: { ...this.state.prevPos },\n                stop: { ...offsetData },\n            };\n            this.setState(prevState => ({\n                line: prevState.line.concat(positionData),\n            }), () => this.paint(this.state.prevPos, offsetData));\n        }\n    }\n    endPaintEvent() {\n        this.setState({\n            isPainting: false,\n        });\n    }\n    paint(prevPos, currPos) {\n        const { offsetX, offsetY } = currPos;\n        const { offsetX: x, offsetY: y } = prevPos;\n\n        const ctx = this.state.ref.current.getContext('2d');\n        ctx.beginPath();\n        ctx.strokeStyle = 'black';\n        ctx.moveTo(x, y);\n        ctx.lineTo(offsetX, offsetY);\n        ctx.stroke();\n        this.setState({\n            prevPos: {\n                offsetX,\n                offsetY\n            },\n        });\n    }\n    render() {\n        return (\n            <div className='Canvas-container'>\n                <div className='Canvas-instructions'>\n                    Draw Below\n                </div>\n                <div className='Canvas-canvas'>\n                    <canvas\n                        id='Canvas'\n                        ref={this.state.ref}\n                        style={{ background: 'var(--offwhite)' }}\n                        onMouseDown={(evt) => this.onMouseDown(evt)}\n                        onMouseLeave={() => this.endPaintEvent()}\n                        onMouseUp={() => this.endPaintEvent()}\n                        onMouseMove={(evt) => this.onMouseMove(evt)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}