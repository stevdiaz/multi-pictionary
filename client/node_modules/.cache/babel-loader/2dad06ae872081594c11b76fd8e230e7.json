{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Cursor.js\";\nimport React, { Component } from 'react';\nimport Leap from 'leapjs';\nimport 'leapjs-plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cursor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    // this.leapController = new Leap.Controller();\n    // this.leapController.use('screenPosition', {scale: 0.6, positioning: 'absolute'});\n    // this.leapController.on('frame', (frame) => this.onLeapFrame(frame));\n    // this.leapController.connect();\n    console.log('mounting...');\n    Leap.loop({\n      hand: function (hand) {\n        console.log(hand.screenPosition());\n      }\n    }).use('screenPosition');\n  }\n\n  componentDidUpdate() {}\n\n  onLeapFrame(frame) {\n    if (frame.hands.length > 0) {\n      const hand = frame.hands[0];\n      const handPosition = hand.screenPosition();\n      console.log(handPosition); // const newPosition = {x: handPosition[0] - 300, y: handPosition[1]}\n      // this.setState({position: newPosition,});\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cursor-cursor\",\n      style: {\n        left: this.state.position.x,\n        top: this.state.position.y\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Cursor.js"],"names":["React","Component","Leap","Cursor","constructor","props","state","position","x","y","componentDidMount","console","log","loop","hand","screenPosition","use","componentDidUpdate","onLeapFrame","frame","hands","length","handPosition","render","left","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACC,SAA3B,CAAqC;AAChDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,CAAC,EAAE,CADG;AAENC,QAAAA,CAAC,EAAE;AAFG;AADD,KAAb;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAV,IAAAA,IAAI,CAACW,IAAL,CAAU;AACNC,MAAAA,IAAI,EAAE,UAASA,IAAT,EAAe;AACjBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,cAAL,EAAZ;AACH;AAHK,KAAV,EAIGC,GAJH,CAIO,gBAJP;AAKH;;AACDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,QAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,YAAMP,IAAI,GAAGK,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAb;AACA,YAAME,YAAY,GAAGR,IAAI,CAACC,cAAL,EAArB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ,EAHwB,CAIxB;AACA;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBC,CAA3B;AAA8BiB,QAAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWC,QAAX,CAAoBE;AAAvD;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxC+C","sourcesContent":["import React, { Component } from 'react';\n\nimport Leap from 'leapjs';\nimport 'leapjs-plugins'\n\nexport default class Cursor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    componentDidMount() {\n        // this.leapController = new Leap.Controller();\n        // this.leapController.use('screenPosition', {scale: 0.6, positioning: 'absolute'});\n        // this.leapController.on('frame', (frame) => this.onLeapFrame(frame));\n        // this.leapController.connect();\n        console.log('mounting...');\n        Leap.loop({\n            hand: function(hand) {\n                console.log(hand.screenPosition());\n            }\n        }).use('screenPosition');\n    }\n    componentDidUpdate() {\n\n    }\n    onLeapFrame(frame) {\n        if (frame.hands.length > 0) {\n            const hand = frame.hands[0];\n            const handPosition = hand.screenPosition();\n            console.log(handPosition);\n            // const newPosition = {x: handPosition[0] - 300, y: handPosition[1]}\n            // this.setState({position: newPosition,});\n        }\n    }\n    render() {\n        return (\n            <div className='Cursor-cursor' style={{left: this.state.position.x, top: this.state.position.y}}>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}