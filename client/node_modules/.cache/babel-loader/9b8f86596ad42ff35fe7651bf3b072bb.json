{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/components/JoinCreate.js\";\nimport React, { Component } from 'react';\nimport './JoinCreate.css';\nimport SmallButton from './SmallButton';\nimport SmallText from './SmallText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class JoinCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomName: \"\",\n      isError: false,\n      status: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  onChooseCreate() {\n    console.log(\"did choose create\");\n\n    if (this.state.roomName.length === 0) {\n      this.setState({\n        isError: true,\n        status: \"Cannot create an empty room name\"\n      });\n    } else {\n      this.setState({\n        isError: false,\n        status: \"Creating...\"\n      }, () => {\n        this.props.socket.emit(\"createRoom\", this.state.roomName, response => {\n          if (response.error) {\n            this.setState({\n              isError: true,\n              status: \"Room name already in use; choose another name\"\n            });\n          } else {\n            // successfully created room\n            this.props.onJoinCreate(this.state.roomName, 1, true);\n          }\n        });\n      });\n    }\n  }\n\n  onChooseJoin() {\n    console.log(\"did choose join\");\n\n    if (this.state.roomName.length === 0) {\n      this.setState({\n        isError: true,\n        status: \"Cannot join an empty room name\"\n      });\n    } else {\n      this.setState({\n        isError: false,\n        status: \"Joining...\"\n      }, () => {\n        this.props.socket.emit(\"joinRoom\", this.state.roomName, response => {\n          if (response.error) {\n            this.setState({\n              isError: true,\n              status: \"Room name does not exist\"\n            });\n          } else {\n            // successfully joined room\n            this.props.onJoinCreate(this.state.roomName, response.roomSize, false);\n          }\n        });\n      });\n    }\n  }\n\n  onChangeRoomName(roomName) {\n    this.setState({\n      roomName: roomName\n    });\n  }\n\n  render() {\n    const widthPercent = '35%';\n    const statusClassName = 'JoinCreate-status' + (this.state.isError ? ' JoinCreate-error' : '');\n    const status = this.state.status.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 58\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: statusClassName,\n      children: this.state.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 74\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JoinCreate-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"JoinCreate-description\",\n        children: \"Create a new room or join a room created by your friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), error, /*#__PURE__*/_jsxDEV(SmallText, {\n        onChangeRoomName: roomName => this.onChangeRoomName(roomName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"JoinCreate-row\",\n        children: [/*#__PURE__*/_jsxDEV(SmallButton, {\n          buttonText: \"Create Room\",\n          onButtonClick: () => this.onChooseCreate(),\n          isGrabbing: this.props.isGrabbing,\n          handPos: this.props.handPos,\n          widthPercent: widthPercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SmallButton, {\n          buttonText: \"Join Room\",\n          onButtonClick: () => this.onChooseJoin(),\n          isGrabbing: this.props.isGrabbing,\n          handPos: this.props.handPos,\n          widthPercent: widthPercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/components/JoinCreate.js"],"names":["React","Component","SmallButton","SmallText","JoinCreate","constructor","props","state","roomName","isError","status","componentDidMount","componentDidUpdate","onChooseCreate","console","log","length","setState","socket","emit","response","error","onJoinCreate","onChooseJoin","roomSize","onChangeRoomName","render","widthPercent","statusClassName","isGrabbing","handPos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './JoinCreate.css';\n\nimport SmallButton from './SmallButton';\nimport SmallText from './SmallText';\n\nexport default class JoinCreate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roomName: \"\",\n            isError: false,\n            status: \"\",\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate() {\n\n    }\n    onChooseCreate() {\n        console.log(\"did choose create\");\n        if (this.state.roomName.length === 0) {\n            this.setState({\n                isError: true,\n                status: \"Cannot create an empty room name\",\n            });\n        } else {\n            this.setState({\n                isError: false,\n                status: \"Creating...\",\n            }, () => {\n                this.props.socket.emit(\"createRoom\", this.state.roomName, response => {\n                    if (response.error) {\n                        this.setState({\n                            isError: true,\n                            status: \"Room name already in use; choose another name\",\n                        });\n                    } else {\n                        // successfully created room\n                        this.props.onJoinCreate(this.state.roomName, 1, true);\n                    }\n                });\n            });\n        }\n    }\n    onChooseJoin() {\n        console.log(\"did choose join\");\n        if (this.state.roomName.length === 0) {\n            this.setState({\n                isError: true,\n                status: \"Cannot join an empty room name\",\n            });\n        } else {\n            this.setState({\n                isError: false,\n                status: \"Joining...\",\n            }, () => {\n                this.props.socket.emit(\"joinRoom\", this.state.roomName, (response) => {\n                    if (response.error) {\n                        this.setState({\n                            isError: true,\n                            status: \"Room name does not exist\",\n                        });\n                    } else {\n                        // successfully joined room\n                        this.props.onJoinCreate(this.state.roomName, response.roomSize, false);\n                    }\n                });\n            });\n        }\n    }\n    onChangeRoomName(roomName) {\n        this.setState({\n            roomName: roomName,\n        });\n    }\n    render() {\n        const widthPercent = '35%';\n        const statusClassName = 'JoinCreate-status' + (this.state.isError ? ' JoinCreate-error' : '');\n        const status = this.state.status.length === 0 ? (<div></div>) : (<div className={statusClassName}>{this.state.status}</div>);\n        return (\n            <div className='JoinCreate-container'>\n                <div className='JoinCreate-description'>\n                    Create a new room or join a room created by your friends\n                </div>\n                {error}\n                <SmallText onChangeRoomName={(roomName) => this.onChangeRoomName(roomName)}/>\n                <div className='JoinCreate-row'>\n                    <SmallButton buttonText='Create Room' \n                                onButtonClick={() => this.onChooseCreate()} \n                                isGrabbing={this.props.isGrabbing}\n                                handPos={this.props.handPos} \n                                widthPercent={widthPercent}/>\n                    <SmallButton buttonText='Join Room' \n                                onButtonClick={() => this.onChooseJoin()} \n                                isGrabbing={this.props.isGrabbing}\n                                handPos={this.props.handPos} \n                                widthPercent={widthPercent}/>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}