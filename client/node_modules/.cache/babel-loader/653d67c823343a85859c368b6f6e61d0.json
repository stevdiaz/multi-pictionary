{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/ColorPalette.js\";\nimport React, { Component } from 'react';\nimport './ColorPalette.css';\nimport { colors, defaultColor } from '../helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ColorPalette extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: defaultColor\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {\n    if (this.props.isGrabbing) {\n      this.onHandGrab(this.props.handPos);\n    }\n  }\n\n  onHandGrab(handPos) {\n    Object.keys(colors).forEach(color => {\n      console.log(color);\n      const intersects = this.doesIntersect(handPos, document.getElementById(color).getBoundingClientRect());\n\n      if (intersects && this.state.selectedColor !== colors[color]) {\n        this.setState({\n          selectedColor: colors[color]\n        }, () => this.props.onSelectColor(this.state.selectedColor));\n      }\n    });\n  }\n\n  doesIntersect(handPos, rectangle) {\n    // console.log(handPos);\n    // console.log(rectangle);\n    return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom;\n  }\n\n  render() {\n    const colorDivs = Object.keys(colors).map(color => {\n      const className = 'ColorPalette-color' + (colors[color] === this.state.selectedColor ? ' ColorPalette-colorSelected' : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        id: color,\n        style: {\n          backgroundColor: colors[color]\n        }\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    });\n    const colorRows = colorDivs.filter((color, index) => index % 2 == 0).map((firsColor, index) => {\n      const secondColor = colorDivs[2 * index + 1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-row\",\n        children: [firsColor, secondColor]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ColorPalette-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-title\",\n        children: \"Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-column\",\n        children: colorRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/ColorPalette.js"],"names":["React","Component","colors","defaultColor","ColorPalette","constructor","props","state","selectedColor","componentDidMount","componentDidUpdate","isGrabbing","onHandGrab","handPos","Object","keys","forEach","color","console","log","intersects","doesIntersect","document","getElementById","getBoundingClientRect","setState","onSelectColor","rectangle","left","x","right","top","y","bottom","render","colorDivs","map","className","backgroundColor","colorRows","filter","index","firsColor","secondColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ColorPalette.css';\n\nimport {colors, defaultColor} from '../helpers/constants';\n\nexport default class ColorPalette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedColor: defaultColor,\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate() {\n        if (this.props.isGrabbing) {\n            this.onHandGrab(this.props.handPos);\n        }\n    }\n    onHandGrab(handPos) {\n        Object.keys(colors).forEach(color => {\n            console.log(color);\n            const intersects = this.doesIntersect(handPos, document.getElementById(color).getBoundingClientRect());\n            if (intersects && this.state.selectedColor !== colors[color]) {\n                this.setState({\n                    selectedColor: colors[color],\n                }, () => this.props.onSelectColor(this.state.selectedColor));\n            }\n        })\n    }\n    doesIntersect(handPos, rectangle) {\n        // console.log(handPos);\n        // console.log(rectangle);\n        return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom; \n    }\n    render() {\n        const colorDivs = Object.keys(colors).map(color => {\n            const className = 'ColorPalette-color' + (colors[color] === this.state.selectedColor ? ' ColorPalette-colorSelected' : '');\n            return (\n                <div className={className} id={color} key={color} style={{backgroundColor: colors[color]}}/>\n            );\n        });\n        const colorRows = colorDivs.filter((color, index) => index % 2 == 0).map((firsColor, index) => {\n            const secondColor = colorDivs[2*index+1];\n            return (<div className='ColorPalette-row' key={index}>\n                {firsColor}\n                {secondColor}\n            </div>);\n        });\n        return (\n            <div className='ColorPalette-container'>\n                <div className='ColorPalette-title'>\n                    Colors:\n                </div>\n                <div className='ColorPalette-column'>\n                    {colorRows}\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}