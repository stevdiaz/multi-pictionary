{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Cursor from './components/Cursor';\nimport Entry from './components/Entry';\nimport Canvas from './components/Canvas';\nimport Drawer from './components/Drawer';\nimport ColorPalette from './components/ColorPalette';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didTransitionToDraw: false,\n      isIndexPoint: false,\n      handPos: {\n        x: 0,\n        y: 0\n      },\n      isGrabbing: false,\n      isCircular: false,\n      swipeObject: {\n        isSwipe: false,\n        isRight: false\n      },\n      message: \"Loading...\"\n    };\n    fetch(\"/api\").then(res => res.json()).then(data => this.setState({\n      message: data.message\n    }));\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  onPointUpdate(isIndexPoint, handPos) {\n    this.setState({\n      isIndexPoint: isIndexPoint,\n      handPos: handPos\n    });\n  }\n\n  onHandGrabUpdate(isGrabbing) {\n    this.setState({\n      isGrabbing: isGrabbing\n    });\n  }\n\n  onCircularUpdate(isCircular) {\n    this.setState({\n      isCircular: isCircular\n    });\n  }\n\n  onSwipeUpdate(swipeObject) {\n    this.setState({\n      swipeObject: swipeObject\n    });\n  }\n\n  render() {\n    let content = /*#__PURE__*/_jsxDEV(Entry, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this);\n\n    if (this.state.isGrabbing && !this.state.didTransitionToDraw) {\n      this.setState({\n        didTransitionToDraw: true\n      });\n    }\n\n    if (this.state.didTransitionToDraw) {\n      content = /*#__PURE__*/_jsxDEV(Drawer, {\n        isIndexPoint: this.state.isIndexPoint,\n        handPos: this.state.handPos,\n        swipeObject: this.state.swipeObject,\n        isGrabbing: this.state.isGrabbing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/App.js"],"names":["React","Component","Cursor","Entry","Canvas","Drawer","ColorPalette","App","constructor","props","state","didTransitionToDraw","isIndexPoint","handPos","x","y","isGrabbing","isCircular","swipeObject","isSwipe","isRight","message","fetch","then","res","json","data","setState","componentDidMount","componentDidUpdate","onPointUpdate","onHandGrabUpdate","onCircularUpdate","onSwipeUpdate","render","content"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACC,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,KADV;AAEXC,MAAAA,YAAY,EAAE,KAFH;AAGXC,MAAAA,OAAO,EAAE;AAACC,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE;AAAV,OAHE;AAIXC,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,UAAU,EAAE,KALD;AAMXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE,KADE;AAEXC,QAAAA,OAAO,EAAE;AAFE,OANF;AAUXC,MAAAA,OAAO,EAAE;AAVE,KAAb;AAYAC,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA1B,EAAsCF,IAAtC,CAA2CG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEK,IAAI,CAACL;AAAf,KAAd,CAAnD;AACD;;AAEDO,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,aAAa,CAAClB,YAAD,EAAeC,OAAf,EAAwB;AACnC,SAAKc,QAAL,CAAc;AACZf,MAAAA,YAAY,EAAEA,YADF;AAEZC,MAAAA,OAAO,EAAEA;AAFG,KAAd;AAID;;AACDkB,EAAAA,gBAAgB,CAACf,UAAD,EAAa;AAC3B,SAAKW,QAAL,CAAc;AACZX,MAAAA,UAAU,EAAEA;AADA,KAAd;AAGD;;AACDgB,EAAAA,gBAAgB,CAACf,UAAD,EAAa;AAC3B,SAAKU,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAEA;AADA,KAAd;AAGD;;AACDgB,EAAAA,aAAa,CAACf,WAAD,EAAc;AACzB,SAAKS,QAAL,CAAc;AACZT,MAAAA,WAAW,EAAEA;AADD,KAAd;AAGD;;AACDgB,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,gBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAf;;AACA,QAAI,KAAKzB,KAAL,CAAWM,UAAX,IAAyB,CAAC,KAAKN,KAAL,CAAWC,mBAAzC,EAA8D;AAC5D,WAAKgB,QAAL,CAAc;AACZhB,QAAAA,mBAAmB,EAAE;AADT,OAAd;AAGD;;AACD,QAAI,KAAKD,KAAL,CAAWC,mBAAf,EAAoC;AAClCwB,MAAAA,OAAO,gBAAI,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKzB,KAAL,CAAWE,YAAjC;AACS,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAD7B;AAES,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWQ,WAFjC;AAGS,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWM;AAHhC;AAAA;AAAA;AAAA;AAAA,cAAX;AAID;;AACD,wBACE;AAAA,gBAMG,KAAKN,KAAL,CAAWW;AANd;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApE8C","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport Cursor from './components/Cursor';\nimport Entry from './components/Entry';\nimport Canvas from './components/Canvas';\nimport Drawer from './components/Drawer';\nimport ColorPalette from './components/ColorPalette';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didTransitionToDraw: false,\n      isIndexPoint: false,\n      handPos: {x: 0, y: 0},\n      isGrabbing: false,\n      isCircular: false,\n      swipeObject: {\n        isSwipe: false,\n        isRight: false,\n      },\n      message: \"Loading...\",\n    };\n    fetch(\"/api\").then(res => res.json()).then(data => this.setState({message: data.message}));\n  }\n\n  componentDidMount() {\n  \n  }\n  componentDidUpdate() {\n\n  }\n  onPointUpdate(isIndexPoint, handPos) {\n    this.setState({\n      isIndexPoint: isIndexPoint,\n      handPos: handPos,\n    });\n  }\n  onHandGrabUpdate(isGrabbing) {\n    this.setState({\n      isGrabbing: isGrabbing,\n    });\n  }\n  onCircularUpdate(isCircular) {\n    this.setState({\n      isCircular: isCircular,\n    });\n  }\n  onSwipeUpdate(swipeObject) {\n    this.setState({\n      swipeObject: swipeObject,\n    });\n  }\n  render() {\n    let content = (<Entry />);\n    if (this.state.isGrabbing && !this.state.didTransitionToDraw) {\n      this.setState({\n        didTransitionToDraw: true,\n      });\n    }\n    if (this.state.didTransitionToDraw) {\n      content = (<Drawer isIndexPoint={this.state.isIndexPoint} \n                          handPos={this.state.handPos} \n                          swipeObject={this.state.swipeObject}\n                          isGrabbing={this.state.isGrabbing}/>);\n    }\n    return (\n      <div>\n        {/* <Cursor onHandGrabUpdate={(isGrabbing) => this.onHandGrabUpdate(isGrabbing)} \n                onPointUpdate={(isIndexPoint, handPos) => this.onPointUpdate(isIndexPoint, handPos)}\n                onCircularUpdate={(isCircular) => this.onCircularUpdate(isCircular)}\n                onSwipeUpdate={(swipeObject) => this.onSwipeUpdate(swipeObject)}/>\n        {content} */}\n        {this.state.message}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}