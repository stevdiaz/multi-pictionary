{"ast":null,"code":"//CoffeeScript generated from main/hand-entry/leap.hand-entry.coffee\n\n/*\nEmits controller events when a hand enters of leaves the frame\n\"handLost\" and \"handFound\"\nEach event also includes the hand object, which will be invalid for the handLost event.\n*/\n(function () {\n  var handEntry;\n\n  handEntry = function () {\n    var activeHandIds;\n    activeHandIds = [];\n\n    if (Leap.version.major === 0 && Leap.version.minor < 5) {\n      console.warn(\"The hand entry plugin requires LeapJS 0.5.0 or newer.\");\n    }\n\n    this.on(\"deviceStopped\", function () {\n      for (var i = 0, len = activeHandIds.length; i < len; i++) {\n        id = activeHandIds[i];\n        activeHandIds.splice(i, 1); // this gets executed before the current frame is added to the history.\n\n        this.emit('handLost', this.lastConnectionFrame.hand(id));\n        i--;\n        len--;\n      }\n\n      ;\n    });\n    return {\n      frame: function (frame) {\n        var id, newValidHandIds, _i, _len, _results;\n\n        newValidHandIds = frame.hands.map(function (hand) {\n          return hand.id;\n        });\n\n        for (var i = 0, len = activeHandIds.length; i < len; i++) {\n          id = activeHandIds[i];\n\n          if (newValidHandIds.indexOf(id) == -1) {\n            activeHandIds.splice(i, 1); // this gets executed before the current frame is added to the history.\n\n            this.emit('handLost', this.frame(1).hand(id));\n            i--;\n            len--;\n          }\n        }\n\n        ;\n        _results = [];\n\n        for (_i = 0, _len = newValidHandIds.length; _i < _len; _i++) {\n          id = newValidHandIds[_i];\n\n          if (activeHandIds.indexOf(id) === -1) {\n            activeHandIds.push(id);\n\n            _results.push(this.emit('handFound', frame.hand(id)));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      }\n    };\n  };\n\n  if (typeof Leap !== 'undefined' && Leap.Controller) {\n    Leap.Controller.plugin('handEntry', handEntry);\n  } else if (typeof module !== 'undefined') {\n    module.exports.handEntry = handEntry;\n  } else {\n    throw 'leap.js not included';\n  }\n}).call(this);","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/node_modules/leapjs-plugins/main/hand-entry/leap.hand-entry.js"],"names":["handEntry","activeHandIds","Leap","version","major","minor","console","warn","on","i","len","length","id","splice","emit","lastConnectionFrame","hand","frame","newValidHandIds","_i","_len","_results","hands","map","indexOf","push","Controller","plugin","module","exports","call"],"mappings":"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","sourcesContent":["//CoffeeScript generated from main/hand-entry/leap.hand-entry.coffee\n/*\nEmits controller events when a hand enters of leaves the frame\n\"handLost\" and \"handFound\"\nEach event also includes the hand object, which will be invalid for the handLost event.\n*/\n\n\n(function() {\n  var handEntry;\n\n  handEntry = function() {\n    var activeHandIds;\n    activeHandIds = [];\n    if (Leap.version.major === 0 && Leap.version.minor < 5) {\n      console.warn(\"The hand entry plugin requires LeapJS 0.5.0 or newer.\");\n    }\n    this.on(\"deviceStopped\", function() {\n      for (var i = 0, len = activeHandIds.length; i < len; i++){\n      id = activeHandIds[i];\n      activeHandIds.splice(i, 1);\n      // this gets executed before the current frame is added to the history.\n      this.emit('handLost', this.lastConnectionFrame.hand(id))\n      i--;\n      len--;\n    };\n    });\n    return {\n      frame: function(frame) {\n        var id, newValidHandIds, _i, _len, _results;\n        newValidHandIds = frame.hands.map(function(hand) {\n          return hand.id;\n        });\n        for (var i = 0, len = activeHandIds.length; i < len; i++){\n        id = activeHandIds[i];\n        if(  newValidHandIds.indexOf(id) == -1){\n          activeHandIds.splice(i, 1);\n          // this gets executed before the current frame is added to the history.\n          this.emit('handLost', this.frame(1).hand(id));\n          i--;\n          len--;\n        }\n      };\n        _results = [];\n        for (_i = 0, _len = newValidHandIds.length; _i < _len; _i++) {\n          id = newValidHandIds[_i];\n          if (activeHandIds.indexOf(id) === -1) {\n            activeHandIds.push(id);\n            _results.push(this.emit('handFound', frame.hand(id)));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      }\n    };\n  };\n\n  if ((typeof Leap !== 'undefined') && Leap.Controller) {\n    Leap.Controller.plugin('handEntry', handEntry);\n  } else if (typeof module !== 'undefined') {\n    module.exports.handEntry = handEntry;\n  } else {\n    throw 'leap.js not included';\n  }\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}