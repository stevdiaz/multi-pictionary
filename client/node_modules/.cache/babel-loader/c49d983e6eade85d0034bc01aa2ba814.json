{"ast":null,"code":"var BaseConnection = module.exports = require('./base');\n\nvar BrowserConnection = module.exports = function (opts) {\n  BaseConnection.call(this, opts);\n  var connection = this;\n  this.on('ready', function () {\n    connection.startFocusLoop();\n  });\n  this.on('disconnect', function () {\n    connection.stopFocusLoop();\n  });\n};\n\nObject.assign(BrowserConnection.prototype, BaseConnection.prototype);\nBrowserConnection.__proto__ = BaseConnection;\n\nBrowserConnection.prototype.useSecure = function () {\n  return location.protocol === 'https:';\n};\n\nBrowserConnection.prototype.getScheme = function () {\n  return this.useSecure() ? 'wss:' : 'ws:';\n};\n\nBrowserConnection.prototype.getPort = function () {\n  return this.useSecure() ? 6436 : 6437;\n};\n\nBrowserConnection.prototype.setupSocket = function () {\n  var connection = this;\n  var socket = new WebSocket(this.getUrl());\n\n  socket.onopen = function () {\n    connection.handleOpen();\n  };\n\n  socket.onclose = function (data) {\n    connection.handleClose(data['code'], data['reason']);\n  };\n\n  socket.onmessage = function (message) {\n    connection.handleData(message.data);\n  };\n\n  socket.onerror = function (error) {\n    // attempt to degrade to ws: after one failed attempt for older Leap Service installations.\n    if (connection.useSecure() && connection.scheme === 'wss:') {\n      connection.scheme = 'ws:';\n      connection.port = 6437;\n      connection.disconnect();\n      connection.connect();\n    }\n  };\n\n  return socket;\n};\n\nBrowserConnection.prototype.startFocusLoop = function () {\n  if (this.focusDetectorTimer) return;\n  var connection = this;\n  var propertyName = null;\n\n  if (typeof document.hidden !== \"undefined\") {\n    propertyName = \"hidden\";\n  } else if (typeof document.mozHidden !== \"undefined\") {\n    propertyName = \"mozHidden\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    propertyName = \"msHidden\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    propertyName = \"webkitHidden\";\n  } else {\n    propertyName = undefined;\n  }\n\n  if (connection.windowVisible === undefined) {\n    connection.windowVisible = propertyName === undefined ? true : document[propertyName] === false;\n  }\n\n  var focusListener = window.addEventListener('focus', function (e) {\n    connection.windowVisible = true;\n    updateFocusState();\n  });\n  var blurListener = window.addEventListener('blur', function (e) {\n    connection.windowVisible = false;\n    updateFocusState();\n  });\n  this.on('disconnect', function () {\n    window.removeEventListener('focus', focusListener);\n    window.removeEventListener('blur', blurListener);\n  });\n\n  var updateFocusState = function () {\n    var isVisible = propertyName === undefined ? true : document[propertyName] === false;\n    connection.reportFocus(isVisible && connection.windowVisible);\n  }; // save 100ms when resuming focus\n\n\n  updateFocusState();\n  this.focusDetectorTimer = setInterval(updateFocusState, 100);\n};\n\nBrowserConnection.prototype.stopFocusLoop = function () {\n  if (!this.focusDetectorTimer) return;\n  clearTimeout(this.focusDetectorTimer);\n  delete this.focusDetectorTimer;\n};","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/node_modules/leapjs/lib/connection/browser.js"],"names":["BaseConnection","module","exports","require","BrowserConnection","opts","call","connection","on","startFocusLoop","stopFocusLoop","Object","assign","prototype","__proto__","useSecure","location","protocol","getScheme","getPort","setupSocket","socket","WebSocket","getUrl","onopen","handleOpen","onclose","data","handleClose","onmessage","message","handleData","onerror","error","scheme","port","disconnect","connect","focusDetectorTimer","propertyName","document","hidden","mozHidden","msHidden","webkitHidden","undefined","windowVisible","focusListener","window","addEventListener","e","updateFocusState","blurListener","removeEventListener","isVisible","reportFocus","setInterval","clearTimeout"],"mappings":"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","sourcesContent":["var BaseConnection = module.exports = require('./base');\n\n\nvar BrowserConnection = module.exports = function(opts) {\n  BaseConnection.call(this, opts);\n  var connection = this;\n  this.on('ready', function() { connection.startFocusLoop(); })\n  this.on('disconnect', function() { connection.stopFocusLoop(); })\n}\n\nObject.assign(BrowserConnection.prototype, BaseConnection.prototype);\n\nBrowserConnection.__proto__ = BaseConnection;\n\nBrowserConnection.prototype.useSecure = function(){\n  return location.protocol === 'https:'\n}\n\nBrowserConnection.prototype.getScheme = function(){\n  return this.useSecure() ? 'wss:' : 'ws:'\n}\n\nBrowserConnection.prototype.getPort = function(){\n  return this.useSecure() ? 6436 : 6437\n}\n\nBrowserConnection.prototype.setupSocket = function() {\n  var connection = this;\n  var socket = new WebSocket(this.getUrl());\n  socket.onopen = function() { connection.handleOpen(); };\n  socket.onclose = function(data) { connection.handleClose(data['code'], data['reason']); };\n  socket.onmessage = function(message) { connection.handleData(message.data) };\n  socket.onerror = function(error) {\n\n    // attempt to degrade to ws: after one failed attempt for older Leap Service installations.\n    if (connection.useSecure() && connection.scheme === 'wss:'){\n      connection.scheme = 'ws:';\n      connection.port = 6437;\n      connection.disconnect();\n      connection.connect();\n    }\n\n  };\n  return socket;\n}\n\nBrowserConnection.prototype.startFocusLoop = function() {\n  if (this.focusDetectorTimer) return;\n  var connection = this;\n  var propertyName = null;\n  if (typeof document.hidden !== \"undefined\") {\n    propertyName = \"hidden\";\n  } else if (typeof document.mozHidden !== \"undefined\") {\n    propertyName = \"mozHidden\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    propertyName = \"msHidden\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    propertyName = \"webkitHidden\";\n  } else {\n    propertyName = undefined;\n  }\n\n  if (connection.windowVisible === undefined) {\n    connection.windowVisible = propertyName === undefined ? true : document[propertyName] === false;\n  }\n\n  var focusListener = window.addEventListener('focus', function(e) {\n    connection.windowVisible = true;\n    updateFocusState();\n  });\n\n  var blurListener = window.addEventListener('blur', function(e) {\n    connection.windowVisible = false;\n    updateFocusState();\n  });\n\n  this.on('disconnect', function() {\n    window.removeEventListener('focus', focusListener);\n    window.removeEventListener('blur', blurListener);\n  });\n\n  var updateFocusState = function() {\n    var isVisible = propertyName === undefined ? true : document[propertyName] === false;\n    connection.reportFocus(isVisible && connection.windowVisible);\n  }\n\n  // save 100ms when resuming focus\n  updateFocusState();\n\n  this.focusDetectorTimer = setInterval(updateFocusState, 100);\n}\n\nBrowserConnection.prototype.stopFocusLoop = function() {\n  if (!this.focusDetectorTimer) return;\n  clearTimeout(this.focusDetectorTimer);\n  delete this.focusDetectorTimer;\n}\n"]},"metadata":{},"sourceType":"script"}