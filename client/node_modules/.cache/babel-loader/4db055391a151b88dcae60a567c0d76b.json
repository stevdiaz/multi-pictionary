{"ast":null,"code":"var self = self || {}; // File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = {\n  REVISION: '69'\n}; // browserify support\n\nif (typeof module === 'object') {\n  module.exports = THREE;\n} // polyfills\n\n\nif (Math.sign === undefined) {\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : 0;\n  };\n} // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\nTHREE.MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n}; // GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1; // SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2; // MATERIAL CONSTANTS\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2; // shading\n\nTHREE.NoShading = 0;\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2; // colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2; // blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5; // custom blending equations\n// (numbers start from 100 not to clash with other\n//  mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104; // custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207; // custom blending source factors\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\n\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210; // TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2; // Mapping modes\n\nTHREE.UVMapping = function () {};\n\nTHREE.CubeReflectionMapping = function () {};\n\nTHREE.CubeRefractionMapping = function () {};\n\nTHREE.SphericalReflectionMapping = function () {};\n\nTHREE.SphericalRefractionMapping = function () {}; // Wrapping modes\n\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002; // Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008; // Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015; // Pixel types\n//THREE.UnsignedByteType = 1009;\n\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018; // Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023; // DDS / ST3C Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004; // PVRTC compressed texture formats\n\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103; // File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function (color) {\n  if (arguments.length === 3) {\n    return this.setRGB(arguments[0], arguments[1], arguments[2]);\n  }\n\n  return this.set(color);\n};\n\nTHREE.Color.prototype = {\n  constructor: THREE.Color,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value instanceof THREE.Color) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function (h, s, l) {\n    // h,s,l ranges are in 0.0 - 1.0\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      var hue2rgb = function (p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n        return p;\n      };\n\n      var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n      var q = 2 * l - p;\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n\n    return this;\n  },\n  setStyle: function (style) {\n    // rgb(255,0,0)\n    if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(style)) {\n      var color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(style);\n      this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n      this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n      this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n      return this;\n    } // rgb(100%,0%,0%)\n\n\n    if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(style)) {\n      var color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(style);\n      this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n      this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n      this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n      return this;\n    } // #ff0000\n\n\n    if (/^\\#([0-9a-f]{6})$/i.test(style)) {\n      var color = /^\\#([0-9a-f]{6})$/i.exec(style);\n      this.setHex(parseInt(color[1], 16));\n      return this;\n    } // #f00\n\n\n    if (/^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(style)) {\n      var color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(style);\n      this.setHex(parseInt(color[1] + color[1] + color[2] + color[2] + color[3] + color[3], 16));\n      return this;\n    } // red\n\n\n    if (/^(\\w+)$/i.test(style)) {\n      this.setHex(THREE.ColorKeywords[style]);\n      return this;\n    }\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color) {\n    this.r = color.r * color.r;\n    this.g = color.g * color.g;\n    this.b = color.b * color.b;\n    return this;\n  },\n  copyLinearToGamma: function (color) {\n    this.r = Math.sqrt(color.r);\n    this.g = Math.sqrt(color.g);\n    this.b = Math.sqrt(color.b);\n    return this;\n  },\n  convertGammaToLinear: function () {\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    this.r = r * r;\n    this.g = g * g;\n    this.b = b * b;\n    return this;\n  },\n  convertLinearToGamma: function () {\n    this.r = Math.sqrt(this.r);\n    this.g = Math.sqrt(this.g);\n    this.b = Math.sqrt(this.b);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (optionalTarget) {\n    // h,s,l ranges are in 0.0 - 1.0\n    var hsl = optionalTarget || {\n      h: 0,\n      s: 0,\n      l: 0\n    };\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    hsl.h = hue;\n    hsl.s = saturation;\n    hsl.l = lightness;\n    return hsl;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function (h, s, l) {\n    var hsl = this.getHSL();\n    hsl.h += h;\n    hsl.s += s;\n    hsl.l += l;\n    this.setHSL(hsl.h, hsl.s, hsl.l);\n    return this;\n  },\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array) {\n    this.r = array[0];\n    this.g = array[1];\n    this.b = array[2];\n    return this;\n  },\n  toArray: function () {\n    return [this.r, this.g, this.b];\n  },\n  clone: function () {\n    return new THREE.Color().setRGB(this.r, this.g, this.b);\n  }\n};\nTHREE.ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n}; // File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Quaternion = function (x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n};\n\nTHREE.Quaternion.prototype = {\n  constructor: THREE.Quaternion,\n  _x: 0,\n  _y: 0,\n  _z: 0,\n  _w: 0,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get w() {\n    return this._w;\n  },\n\n  set w(value) {\n    this._w = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (euler instanceof THREE.Euler === false) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    } // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n\n    var c1 = Math.cos(euler._x / 2);\n    var c2 = Math.cos(euler._y / 2);\n    var c3 = Math.cos(euler._z / 2);\n    var s1 = Math.sin(euler._x / 2);\n    var s2 = Math.sin(euler._y / 2);\n    var s3 = Math.sin(euler._z / 2);\n\n    if (euler.order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (euler.order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (euler.order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (euler.order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (euler.order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (euler.order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      this.normalize();\n      return this;\n    };\n  }(),\n  inverse: function () {\n    this.conjugate().normalize();\n    return this;\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var halfTheta = Math.acos(cosHalfTheta);\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this._w = 0.5 * (w + this._w);\n      this._x = 0.5 * (x + this._x);\n      this._y = 0.5 * (y + this._y);\n      this._z = 0.5 * (z + this._z);\n      return this;\n    }\n\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {},\n  clone: function () {\n    return new THREE.Quaternion(this._x, this._y, this._z, this._w);\n  }\n};\n\nTHREE.Quaternion.slerp = function (qa, qb, qm, t) {\n  return qm.copy(qa).slerp(qb, t);\n}; // File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\n\nTHREE.Vector2 = function (x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n};\n\nTHREE.Vector2.prototype = {\n  constructor: THREE.Vector2,\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.x *= s;\n    this.y *= s;\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function (minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector2();\n        max = new THREE.Vector2();\n      }\n\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  clone: function () {\n    return new THREE.Vector2(this.x, this.y);\n  }\n}; // File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function (x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nTHREE.Vector3.prototype = {\n  constructor: THREE.Vector3,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion;\n    return function (euler) {\n      if (euler instanceof THREE.Euler === false) {\n        console.error('THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromEuler(euler));\n      return this;\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion;\n    return function (axis, angle) {\n      if (quaternion === undefined) quaternion = new THREE.Quaternion();\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      return this;\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n    return this;\n  },\n  applyProjection: function (m) {\n    // input: THREE.Matrix4 projection matrix\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix;\n    return function (camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix;\n    return function (camera) {\n      if (matrix === undefined) matrix = new THREE.Matrix4();\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyProjection(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    this.normalize();\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n      this.z = min.z;\n    } else if (this.z > max.z) {\n      this.z = max.z;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function (minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector3();\n        max = new THREE.Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n    return this;\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function () {\n    var v1, dot;\n    return function (vector) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(vector).normalize();\n      dot = this.dot(v1);\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n  projectOnPlane: function () {\n    var v1;\n    return function (planeNormal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1;\n    return function (normal) {\n      if (v1 === undefined) v1 = new THREE.Vector3();\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / (this.length() * v.length()); // clamp, to handle numerical problems\n\n    return Math.acos(THREE.Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setEulerFromRotationMatrix: function (m, order) {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function (q, order) {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(index, matrix);\n  },\n  setFromMatrixPosition: function (m) {\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n    return this;\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    var sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    var sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (index, matrix) {\n    var offset = index * 4;\n    var me = matrix.elements;\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  clone: function () {\n    return new THREE.Vector3(this.x, this.y, this.z);\n  }\n}; // File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nTHREE.Vector4.prototype = {\n  constructor: THREE.Vector4,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n      this.w *= invScalar;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    }\n\n    return this;\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    if (this.x > v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n      this.z = v.z;\n    }\n\n    if (this.w > v.w) {\n      this.w = v.w;\n    }\n\n    return this;\n  },\n  max: function (v) {\n    if (this.x < v.x) {\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n      this.z = v.z;\n    }\n\n    if (this.w < v.w) {\n      this.w = v.w;\n    }\n\n    return this;\n  },\n  clamp: function (min, max) {\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n    if (this.x < min.x) {\n      this.x = min.x;\n    } else if (this.x > max.x) {\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n      this.y = min.y;\n    } else if (this.y > max.y) {\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n      this.z = min.z;\n    } else if (this.z > max.z) {\n      this.z = max.z;\n    }\n\n    if (this.w < min.w) {\n      this.w = min.w;\n    } else if (this.w > max.w) {\n      this.w = max.w;\n    }\n\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function (minVal, maxVal) {\n      if (min === undefined) {\n        min = new THREE.Vector4();\n        max = new THREE.Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  lengthManhattan: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length());\n  },\n  setLength: function (l) {\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  clone: function () {\n    return new THREE.Vector4(this.x, this.y, this.z, this.w);\n  }\n}; // File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Euler = function (x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || THREE.Euler.DefaultOrder;\n};\n\nTHREE.Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nTHREE.Euler.DefaultOrder = 'XYZ';\nTHREE.Euler.prototype = {\n  constructor: THREE.Euler,\n  _x: 0,\n  _y: 0,\n  _z: 0,\n  _order: THREE.Euler.DefaultOrder,\n\n  get x() {\n    return this._x;\n  },\n\n  set x(value) {\n    this._x = value;\n    this.onChangeCallback();\n  },\n\n  get y() {\n    return this._y;\n  },\n\n  set y(value) {\n    this._y = value;\n    this.onChangeCallback();\n  },\n\n  get z() {\n    return this._z;\n  },\n\n  set z(value) {\n    this._z = value;\n    this.onChangeCallback();\n  },\n\n  get order() {\n    return this._order;\n  },\n\n  set order(value) {\n    this._order = value;\n    this.onChangeCallback();\n  },\n\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order) {\n    var clamp = THREE.Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function (q, order, update) {\n    var clamp = THREE.Math.clamp; // q is assumed to be normalized\n    // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n    var sqx = q.x * q.x;\n    var sqy = q.y * q.y;\n    var sqz = q.z * q.z;\n    var sqw = q.w * q.w;\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._x = Math.atan2(2 * (q.x * q.w - q.y * q.z), sqw - sqx - sqy + sqz);\n      this._y = Math.asin(clamp(2 * (q.x * q.z + q.y * q.w), -1, 1));\n      this._z = Math.atan2(2 * (q.z * q.w - q.x * q.y), sqw + sqx - sqy - sqz);\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(clamp(2 * (q.x * q.w - q.y * q.z), -1, 1));\n      this._y = Math.atan2(2 * (q.x * q.z + q.y * q.w), sqw - sqx - sqy + sqz);\n      this._z = Math.atan2(2 * (q.x * q.y + q.z * q.w), sqw - sqx + sqy - sqz);\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(2 * (q.x * q.w + q.y * q.z), -1, 1));\n      this._y = Math.atan2(2 * (q.y * q.w - q.z * q.x), sqw - sqx - sqy + sqz);\n      this._z = Math.atan2(2 * (q.z * q.w - q.x * q.y), sqw - sqx + sqy - sqz);\n    } else if (order === 'ZYX') {\n      this._x = Math.atan2(2 * (q.x * q.w + q.z * q.y), sqw - sqx - sqy + sqz);\n      this._y = Math.asin(clamp(2 * (q.y * q.w - q.x * q.z), -1, 1));\n      this._z = Math.atan2(2 * (q.x * q.y + q.z * q.w), sqw + sqx - sqy - sqz);\n    } else if (order === 'YZX') {\n      this._x = Math.atan2(2 * (q.x * q.w - q.z * q.y), sqw - sqx + sqy - sqz);\n      this._y = Math.atan2(2 * (q.y * q.w - q.x * q.z), sqw + sqx - sqy - sqz);\n      this._z = Math.asin(clamp(2 * (q.x * q.y + q.z * q.w), -1, 1));\n    } else if (order === 'XZY') {\n      this._x = Math.atan2(2 * (q.x * q.w + q.y * q.z), sqw - sqx + sqy - sqz);\n      this._y = Math.atan2(2 * (q.x * q.z + q.y * q.w), sqw + sqx - sqy - sqz);\n      this._z = Math.asin(clamp(2 * (q.z * q.w - q.x * q.y), -1, 1));\n    } else {\n      console.warn('THREE.Euler: .setFromQuaternion() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new THREE.Quaternion();\n    return function (newOrder) {\n      q.setFromEuler(this);\n      this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function () {\n    return [this._x, this._y, this._z, this._order];\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {},\n  clone: function () {\n    return new THREE.Euler(this._x, this._y, this._z, this._order);\n  }\n}; // File:src/math/Line3.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Line3 = function (start, end) {\n  this.start = start !== undefined ? start : new THREE.Vector3();\n  this.end = end !== undefined ? end : new THREE.Vector3();\n};\n\nTHREE.Line3.prototype = {\n  constructor: THREE.Line3,\n  set: function (start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  copy: function (line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.end, this.start);\n  },\n  distanceSq: function () {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function () {\n    return this.start.distanceTo(this.end);\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new THREE.Vector3();\n    var startEnd = new THREE.Vector3();\n    return function (point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = THREE.Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function (point, clampToLine, optionalTarget) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n    var result = optionalTarget || new THREE.Vector3();\n    return this.delta(result).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function (matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function (line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  },\n  clone: function () {\n    return new THREE.Line3().copy(this);\n  }\n}; // File:src/math/Box2.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Box2 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector2(Infinity, Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector2(-Infinity, -Infinity);\n};\n\nTHREE.Box2.prototype = {\n  constructor: THREE.Box2,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector2();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  empty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector2();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  isIntersectionBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector2();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector2();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  },\n  clone: function () {\n    return new THREE.Box2().copy(this);\n  }\n}; // File:src/math/Box3.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function (min, max) {\n  this.min = min !== undefined ? min : new THREE.Vector3(Infinity, Infinity, Infinity);\n  this.max = max !== undefined ? max : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\n\nTHREE.Box3.prototype = {\n  constructor: THREE.Box3,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new THREE.Vector3();\n    return function (center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and childrens', world transforms\n    var v1 = new THREE.Vector3();\n    return function (object) {\n      var scope = this;\n      object.updateMatrixWorld(true);\n      this.makeEmpty();\n      object.traverse(function (node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry instanceof THREE.Geometry) {\n            var vertices = geometry.vertices;\n\n            for (var i = 0, il = vertices.length; i < il; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry instanceof THREE.BufferGeometry && geometry.attributes['position'] !== undefined) {\n            var positions = geometry.attributes['position'].array;\n\n            for (var i = 0, il = positions.length; i < il; i += 3) {\n              v1.set(positions[i], positions[i + 1], positions[i + 2]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      });\n      return this;\n    };\n  }(),\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  empty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  center: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  size: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    if (point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  containsBox: function (box) {\n    if (this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z) {\n      return true;\n    }\n\n    return false;\n  },\n  getParameter: function (point, optionalTarget) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    var result = optionalTarget || new THREE.Vector3();\n    return result.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  isIntersectionBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    if (box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z) {\n      return false;\n    }\n\n    return true;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Sphere();\n      result.center = this.center();\n      result.radius = this.size(v1).length() * 0.5;\n      return result;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function () {\n    var points = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    return function (matrix) {\n      // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n      points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n      points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n      points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n      points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n      points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n      points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n      points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n      points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n      this.makeEmpty();\n      this.setFromPoints(points);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  },\n  clone: function () {\n    return new THREE.Box3().copy(this);\n  }\n}; // File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Matrix3 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix3.prototype = {\n  constructor: THREE.Matrix3,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[3] = n12;\n    te[6] = n13;\n    te[1] = n21;\n    te[4] = n22;\n    te[7] = n23;\n    te[2] = n31;\n    te[5] = n32;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  copy: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  applyToVector3Array: function () {\n    var v1 = new THREE.Vector3();\n    return function (array, offset, length) {\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset, il; i < length; i += 3, j += 3) {\n        v1.x = array[j];\n        v1.y = array[j + 1];\n        v1.z = array[j + 2];\n        v1.applyMatrix3(this);\n        array[j] = v1.x;\n        array[j + 1] = v1.y;\n        array[j + 2] = v1.z;\n      }\n\n      return array;\n    };\n  }(),\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnInvertible) {\n    // input: THREE.Matrix4\n    // ( based on http://code.google.com/p/webgl-mjs/ )\n    var me = matrix.elements;\n    var te = this.elements;\n    te[0] = me[10] * me[5] - me[6] * me[9];\n    te[1] = -me[10] * me[1] + me[2] * me[9];\n    te[2] = me[6] * me[1] - me[2] * me[5];\n    te[3] = -me[10] * me[4] + me[6] * me[8];\n    te[4] = me[10] * me[0] - me[2] * me[8];\n    te[5] = -me[6] * me[0] + me[2] * me[4];\n    te[6] = me[9] * me[4] - me[5] * me[8];\n    te[7] = -me[9] * me[0] + me[1] * me[8];\n    te[8] = me[5] * me[0] - me[1] * me[4];\n    var det = me[0] * te[0] + me[1] * te[3] + me[2] * te[6]; // no inverse\n\n    if (det === 0) {\n      var msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n      return this;\n    }\n\n    this.multiplyScalar(1.0 / det);\n    return this;\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  },\n  getNormalMatrix: function (m) {\n    // input: THREE.Matrix4\n    this.getInverse(m).transpose();\n    return this;\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8]];\n  },\n  clone: function () {\n    return new THREE.Matrix3().fromArray(this.elements);\n  }\n}; // File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Matrix4 = function () {\n  this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n};\n\nTHREE.Matrix4.prototype = {\n  constructor: THREE.Matrix4,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  copy: function (m) {\n    this.elements.set(m.elements);\n    return this;\n  },\n  extractPosition: function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  copyPosition: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractRotation: function () {\n    var v1 = new THREE.Vector3();\n    return function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.set(me[0], me[1], me[2]).length();\n      var scaleY = 1 / v1.set(me[4], me[5], me[6]).length();\n      var scaleZ = 1 / v1.set(me[8], me[9], me[10]).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    if (euler instanceof THREE.Euler === false) {\n      console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // last column\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  setRotationFromQuaternion: function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  makeRotationFromQuaternion: function (q) {\n    var te = this.elements;\n    var x = q.x,\n        y = q.y,\n        z = q.z,\n        w = q.w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy); // last column\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // bottom row\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  lookAt: function () {\n    var x = new THREE.Vector3();\n    var y = new THREE.Vector3();\n    var z = new THREE.Vector3();\n    return function (eye, target, up) {\n      var te = this.elements;\n      z.subVectors(eye, target).normalize();\n\n      if (z.length() === 0) {\n        z.z = 1;\n      }\n\n      x.crossVectors(up, z).normalize();\n\n      if (x.length() === 0) {\n        z.x += 0.0001;\n        x.crossVectors(up, z).normalize();\n      }\n\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyToArray: function (a, b, r) {\n    var te = this.elements;\n    this.multiplyMatrices(a, b);\n    r[0] = te[0];\n    r[1] = te[1];\n    r[2] = te[2];\n    r[3] = te[3];\n    r[4] = te[4];\n    r[5] = te[5];\n    r[6] = te[6];\n    r[7] = te[7];\n    r[8] = te[8];\n    r[9] = te[9];\n    r[10] = te[10];\n    r[11] = te[11];\n    r[12] = te[12];\n    r[13] = te[13];\n    r[14] = te[14];\n    r[15] = te[15];\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.');\n    return vector.applyProjection(this);\n  },\n  multiplyVector4: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function (a) {\n    console.warn('THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.');\n    return this.applyToVector3Array(a);\n  },\n  applyToVector3Array: function () {\n    var v1 = new THREE.Vector3();\n    return function (array, offset, length) {\n      if (offset === undefined) offset = 0;\n      if (length === undefined) length = array.length;\n\n      for (var i = 0, j = offset, il; i < length; i += 3, j += 3) {\n        v1.x = array[j];\n        v1.y = array[j + 1];\n        v1.z = array[j + 2];\n        v1.applyMatrix4(this);\n        array[j] = v1.x;\n        array[j + 1] = v1.y;\n        array[j + 2] = v1.z;\n      }\n\n      return array;\n    };\n  }(),\n  rotateAxis: function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  flattenToArrayOffset: function (array, offset) {\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  },\n  getPosition: function () {\n    var v1 = new THREE.Vector3();\n    return function () {\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      var te = this.elements;\n      return v1.set(te[12], te[13], te[14]);\n    };\n  }(),\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnInvertible) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements;\n    var me = m.elements;\n    var n11 = me[0],\n        n12 = me[4],\n        n13 = me[8],\n        n14 = me[12];\n    var n21 = me[1],\n        n22 = me[5],\n        n23 = me[9],\n        n24 = me[13];\n    var n31 = me[2],\n        n32 = me[6],\n        n33 = me[10],\n        n34 = me[14];\n    var n41 = me[3],\n        n42 = me[7],\n        n43 = me[11],\n        n44 = me[15];\n    te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n    te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n    te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n    te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n    te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n    te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n    te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n    te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n    te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n    te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n    te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n    te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n    te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n    te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n    te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n    var det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n    if (det == 0) {\n      var msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n      return this;\n    }\n\n    this.multiplyScalar(1 / det);\n    return this;\n  },\n  translate: function (v) {\n    console.warn('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function (angle) {\n    console.warn('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function (angle) {\n    console.warn('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function (angle) {\n    console.warn('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function (axis, angle) {\n    console.warn('THREE.Matrix4: .rotateByAxis() has been removed.');\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, Math.max(scaleYSq, scaleZSq)));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    this.makeRotationFromQuaternion(quaternion);\n    this.scale(scale);\n    this.setPosition(position);\n    return this;\n  },\n  decompose: function () {\n    var vector = new THREE.Vector3();\n    var matrix = new THREE.Matrix4();\n    return function (position, quaternion, scale) {\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.elements.set(this.elements); // at this point matrix is incomplete so we can't use .copy()\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makePerspective: function (fov, aspect, near, far) {\n    var ymax = near * Math.tan(THREE.Math.degToRad(fov * 0.5));\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = right - left;\n    var h = top - bottom;\n    var p = far - near;\n    var x = (right + left) / w;\n    var y = (top + bottom) / h;\n    var z = (far + near) / p;\n    te[0] = 2 / w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 / h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 / p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  fromArray: function (array) {\n    this.elements.set(array);\n    return this;\n  },\n  toArray: function () {\n    var te = this.elements;\n    return [te[0], te[1], te[2], te[3], te[4], te[5], te[6], te[7], te[8], te[9], te[10], te[11], te[12], te[13], te[14], te[15]];\n  },\n  clone: function () {\n    return new THREE.Matrix4().fromArray(this.elements);\n  }\n}; // File:src/math/Ray.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Ray = function (origin, direction) {\n  this.origin = origin !== undefined ? origin : new THREE.Vector3();\n  this.direction = direction !== undefined ? direction : new THREE.Vector3();\n};\n\nTHREE.Ray.prototype = {\n  constructor: THREE.Ray,\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  recast: function () {\n    var v1 = new THREE.Vector3();\n    return function (t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(point, this.origin);\n    var directionDistance = result.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return result.copy(this.origin);\n    }\n\n    return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function () {\n    var v1 = new THREE.Vector3();\n    return function (point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceTo(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceTo(point);\n    };\n  }(),\n  distanceSqToSegment: function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n    // from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n    // It returns the min distance between the ray and the segment\n    // defined by v0 and v1\n    // It can also set two optional targets :\n    // - The closest point on the ray\n    // - The closest point on the segment\n    var segCenter = v0.clone().add(v1).multiplyScalar(0.5);\n    var segDir = v1.clone().sub(v0).normalize();\n    var segExtent = v0.distanceTo(v1) * 0.5;\n    var diff = this.origin.clone().sub(segCenter);\n    var a01 = -this.direction.dot(segDir);\n    var b0 = diff.dot(this.direction);\n    var b1 = -diff.dot(segDir);\n    var c = diff.lengthSq();\n    var det = Math.abs(1 - a01 * a01);\n    var s0, s1, sqrDist, extDet;\n\n    if (det >= 0) {\n      // The ray and segment are not parallel.\n      s0 = a01 * b1 - b0;\n      s1 = a01 * b0 - b1;\n      extDet = segExtent * det;\n\n      if (s0 >= 0) {\n        if (s1 >= -extDet) {\n          if (s1 <= extDet) {\n            // region 0\n            // Minimum at interior points of ray and segment.\n            var invDet = 1 / det;\n            s0 *= invDet;\n            s1 *= invDet;\n            sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n          } else {\n            // region 1\n            s1 = segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          // region 5\n          s1 = -segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      } else {\n        if (s1 <= -extDet) {\n          // region 4\n          s0 = Math.max(0, -(-a01 * segExtent + b0));\n          s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        } else if (s1 <= extDet) {\n          // region 3\n          s0 = 0;\n          s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = s1 * (s1 + 2 * b1) + c;\n        } else {\n          // region 2\n          s0 = Math.max(0, -(a01 * segExtent + b0));\n          s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n      }\n    } else {\n      // Ray and segment are parallel.\n      s1 = a01 > 0 ? -segExtent : segExtent;\n      s0 = Math.max(0, -(a01 * s1 + b0));\n      sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n    }\n\n    if (optionalPointOnRay) {\n      optionalPointOnRay.copy(this.direction.clone().multiplyScalar(s0).add(this.origin));\n    }\n\n    if (optionalPointOnSegment) {\n      optionalPointOnSegment.copy(segDir.clone().multiplyScalar(s1).add(segCenter));\n    }\n\n    return sqrDist;\n  },\n  isIntersectionSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  intersectSphere: function () {\n    // from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\n    var v1 = new THREE.Vector3();\n    return function (sphere, optionalTarget) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, optionalTarget); // else t0 is in front of the ray, so return the first collision point scaled by t0 \n\n      return this.at(t0, optionalTarget);\n    };\n  }(),\n  isIntersectionPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator == 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) == 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, optionalTarget) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, optionalTarget);\n  },\n  isIntersectionBox: function () {\n    var v = new THREE.Vector3();\n    return function (box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectBox: function (box, optionalTarget) {\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, optionalTarget);\n  },\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new THREE.Vector3();\n    var edge1 = new THREE.Vector3();\n    var edge2 = new THREE.Vector3();\n    var normal = new THREE.Vector3();\n    return function (a, b, c, backfaceCulling, optionalTarget) {\n      // from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, optionalTarget);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n    this.direction.normalize();\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  },\n  clone: function () {\n    return new THREE.Ray().copy(this);\n  }\n}; // File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function (center, radius) {\n  this.center = center !== undefined ? center : new THREE.Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n};\n\nTHREE.Sphere.prototype = {\n  constructor: THREE.Sphere,\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new THREE.Box3();\n    return function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).center(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  clampPoint: function (point, optionalTarget) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n    var result = optionalTarget || new THREE.Vector3();\n    result.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      result.sub(this.center).normalize();\n      result.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return result;\n  },\n  getBoundingBox: function (optionalTarget) {\n    var box = optionalTarget || new THREE.Box3();\n    box.set(this.center, this.center);\n    box.expandByScalar(this.radius);\n    return box;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  },\n  clone: function () {\n    return new THREE.Sphere().copy(this);\n  }\n}; // File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Frustum = function (p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new THREE.Plane(), p1 !== undefined ? p1 : new THREE.Plane(), p2 !== undefined ? p2 : new THREE.Plane(), p3 !== undefined ? p3 : new THREE.Plane(), p4 !== undefined ? p4 : new THREE.Plane(), p5 !== undefined ? p5 : new THREE.Plane()];\n};\n\nTHREE.Frustum.prototype = {\n  constructor: THREE.Frustum,\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new THREE.Sphere();\n    return function (object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new THREE.Vector3(),\n        p2 = new THREE.Vector3();\n    return function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  clone: function () {\n    return new THREE.Frustum().copy(this);\n  }\n}; // File:src/math/Plane.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Plane = function (normal, constant) {\n  this.normal = normal !== undefined ? normal : new THREE.Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nTHREE.Plane.prototype = {\n  constructor: THREE.Plane,\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    return function (a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, optionalTarget) {\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function (point, optionalTarget) {\n    var perpendicularMagnitude = this.distanceToPoint(point);\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  isIntersectionLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectLine: function () {\n    var v1 = new THREE.Vector3();\n    return function (line, optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator == 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) == 0) {\n          return result.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  coplanarPoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new THREE.Vector3();\n    var v2 = new THREE.Vector3();\n    var m1 = new THREE.Matrix3();\n    return function (matrix, optionalNormalMatrix) {\n      // compute new normal based on theory here:\n      // http://www.songho.ca/opengl/gl_normaltransform.html\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var newNormal = v1.copy(this.normal).applyMatrix3(normalMatrix);\n      var newCoplanarPoint = this.coplanarPoint(v2);\n      newCoplanarPoint.applyMatrix4(matrix);\n      this.setFromNormalAndCoplanarPoint(newNormal, newCoplanarPoint);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant = this.constant - offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant == this.constant;\n  },\n  clone: function () {\n    return new THREE.Plane().copy(this);\n  }\n}; // File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n  generateUUID: function () {\n    // http://www.broofa.com/Tools/Math.uuid.htm\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    var uuid = new Array(36);\n    var rnd = 0,\n        r;\n    return function () {\n      for (var i = 0; i < 36; i++) {\n        if (i == 8 || i == 13 || i == 18 || i == 23) {\n          uuid[i] = '-';\n        } else if (i == 14) {\n          uuid[i] = '4';\n        } else {\n          if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n          r = rnd & 0xf;\n          rnd = rnd >> 4;\n          uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];\n        }\n      }\n\n      return uuid.join('');\n    };\n  }(),\n  // Clamp value to range <a, b>\n  clamp: function (x, a, b) {\n    return x < a ? a : x > b ? b : x;\n  },\n  // Clamp value to range <a, inf)\n  clampBottom: function (x, a) {\n    return x < a ? a : x;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  // Random float from <0, 1> with 16 bits of randomness\n  // (standard Math.random() creates repetitive patterns when applied over larger space)\n  random16: function () {\n    return (65280 * Math.random() + 255 * Math.random()) / 65535;\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function () {\n    var degreeToRadiansFactor = Math.PI / 180;\n    return function (degrees) {\n      return degrees * degreeToRadiansFactor;\n    };\n  }(),\n  radToDeg: function () {\n    var radianToDegreesFactor = 180 / Math.PI;\n    return function (radians) {\n      return radians * radianToDegreesFactor;\n    };\n  }(),\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  }\n}; // File:src/math/Spline.js\n\n/**\n * Spline from Tween.js, slightly optimized (and trashed)\n * http://sole.github.com/tween.js/examples/05_spline.html\n *\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Spline = function (points) {\n  this.points = points;\n  var c = [],\n      v3 = {\n    x: 0,\n    y: 0,\n    z: 0\n  },\n      point,\n      intPoint,\n      weight,\n      w2,\n      w3,\n      pa,\n      pb,\n      pc,\n      pd;\n\n  this.initFromArray = function (a) {\n    this.points = [];\n\n    for (var i = 0; i < a.length; i++) {\n      this.points[i] = {\n        x: a[i][0],\n        y: a[i][1],\n        z: a[i][2]\n      };\n    }\n  };\n\n  this.getPoint = function (k) {\n    point = (this.points.length - 1) * k;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    c[3] = intPoint > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n    pa = this.points[c[0]];\n    pb = this.points[c[1]];\n    pc = this.points[c[2]];\n    pd = this.points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3.x = interpolate(pa.x, pb.x, pc.x, pd.x, weight, w2, w3);\n    v3.y = interpolate(pa.y, pb.y, pc.y, pd.y, weight, w2, w3);\n    v3.z = interpolate(pa.z, pb.z, pc.z, pd.z, weight, w2, w3);\n    return v3;\n  };\n\n  this.getControlPointsArray = function () {\n    var i,\n        p,\n        l = this.points.length,\n        coords = [];\n\n    for (i = 0; i < l; i++) {\n      p = this.points[i];\n      coords[i] = [p.x, p.y, p.z];\n    }\n\n    return coords;\n  }; // approximate length by summing linear segments\n\n\n  this.getLength = function (nSubDivisions) {\n    var i,\n        index,\n        nSamples,\n        position,\n        point = 0,\n        intPoint = 0,\n        oldIntPoint = 0,\n        oldPosition = new THREE.Vector3(),\n        tmpVec = new THREE.Vector3(),\n        chunkLengths = [],\n        totalLength = 0; // first point has 0 length\n\n    chunkLengths[0] = 0;\n    if (!nSubDivisions) nSubDivisions = 100;\n    nSamples = this.points.length * nSubDivisions;\n    oldPosition.copy(this.points[0]);\n\n    for (i = 1; i < nSamples; i++) {\n      index = i / nSamples;\n      position = this.getPoint(index);\n      tmpVec.copy(position);\n      totalLength += tmpVec.distanceTo(oldPosition);\n      oldPosition.copy(position);\n      point = (this.points.length - 1) * index;\n      intPoint = Math.floor(point);\n\n      if (intPoint != oldIntPoint) {\n        chunkLengths[intPoint] = totalLength;\n        oldIntPoint = intPoint;\n      }\n    } // last point ends with total length\n\n\n    chunkLengths[chunkLengths.length] = totalLength;\n    return {\n      chunks: chunkLengths,\n      total: totalLength\n    };\n  };\n\n  this.reparametrizeByArcLength = function (samplingCoef) {\n    var i,\n        j,\n        index,\n        indexCurrent,\n        indexNext,\n        linearDistance,\n        realDistance,\n        sampling,\n        position,\n        newpoints = [],\n        tmpVec = new THREE.Vector3(),\n        sl = this.getLength();\n    newpoints.push(tmpVec.copy(this.points[0]).clone());\n\n    for (i = 1; i < this.points.length; i++) {\n      //tmpVec.copy( this.points[ i - 1 ] );\n      //linearDistance = tmpVec.distanceTo( this.points[ i ] );\n      realDistance = sl.chunks[i] - sl.chunks[i - 1];\n      sampling = Math.ceil(samplingCoef * realDistance / sl.total);\n      indexCurrent = (i - 1) / (this.points.length - 1);\n      indexNext = i / (this.points.length - 1);\n\n      for (j = 1; j < sampling - 1; j++) {\n        index = indexCurrent + j * (1 / sampling) * (indexNext - indexCurrent);\n        position = this.getPoint(index);\n        newpoints.push(tmpVec.copy(position).clone());\n      }\n\n      newpoints.push(tmpVec.copy(this.points[i]).clone());\n    }\n\n    this.points = newpoints;\n  }; // Catmull-Rom\n\n\n  function interpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5,\n        v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n\n  ;\n}; // File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Triangle = function (a, b, c) {\n  this.a = a !== undefined ? a : new THREE.Vector3();\n  this.b = b !== undefined ? b : new THREE.Vector3();\n  this.c = c !== undefined ? c : new THREE.Vector3();\n};\n\nTHREE.Triangle.normal = function () {\n  var v0 = new THREE.Vector3();\n  return function (a, b, c, optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    result.subVectors(c, b);\n    v0.subVectors(a, b);\n    result.cross(v0);\n    var resultLengthSq = result.lengthSq();\n\n    if (resultLengthSq > 0) {\n      return result.multiplyScalar(1 / Math.sqrt(resultLengthSq));\n    }\n\n    return result.set(0, 0, 0);\n  };\n}(); // static/instance method to calculate barycoordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\nTHREE.Triangle.barycoordFromPoint = function () {\n  var v0 = new THREE.Vector3();\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (point, a, b, c, optionalTarget) {\n    v0.subVectors(c, a);\n    v1.subVectors(b, a);\n    v2.subVectors(point, a);\n    var dot00 = v0.dot(v0);\n    var dot01 = v0.dot(v1);\n    var dot02 = v0.dot(v2);\n    var dot11 = v1.dot(v1);\n    var dot12 = v1.dot(v2);\n    var denom = dot00 * dot11 - dot01 * dot01;\n    var result = optionalTarget || new THREE.Vector3(); // colinear or singular triangle\n\n    if (denom == 0) {\n      // arbitrary location outside of triangle?\n      // not sure if this is the best idea, maybe should be returning undefined\n      return result.set(-2, -1, -1);\n    }\n\n    var invDenom = 1 / denom;\n    var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n    var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycoordinates must always sum to 1\n\n    return result.set(1 - u - v, v, u);\n  };\n}();\n\nTHREE.Triangle.containsPoint = function () {\n  var v1 = new THREE.Vector3();\n  return function (point, a, b, c) {\n    var result = THREE.Triangle.barycoordFromPoint(point, a, b, c, v1);\n    return result.x >= 0 && result.y >= 0 && result.x + result.y <= 1;\n  };\n}();\n\nTHREE.Triangle.prototype = {\n  constructor: THREE.Triangle,\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  area: function () {\n    var v0 = new THREE.Vector3();\n    var v1 = new THREE.Vector3();\n    return function () {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  midpoint: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    return result.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  normal: function (optionalTarget) {\n    return THREE.Triangle.normal(this.a, this.b, this.c, optionalTarget);\n  },\n  plane: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Plane();\n    return result.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  barycoordFromPoint: function (point, optionalTarget) {\n    return THREE.Triangle.barycoordFromPoint(point, this.a, this.b, this.c, optionalTarget);\n  },\n  containsPoint: function (point) {\n    return THREE.Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  },\n  clone: function () {\n    return new THREE.Triangle().copy(this);\n  }\n}; // File:src/core/Clock.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Clock = function (autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n};\n\nTHREE.Clock.prototype = {\n  constructor: THREE.Clock,\n  start: function () {\n    this.startTime = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();\n    this.oldTime = this.startTime;\n    this.running = true;\n  },\n  stop: function () {\n    this.getElapsedTime();\n    this.running = false;\n  },\n  getElapsedTime: function () {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function () {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n    }\n\n    if (this.running) {\n      var newTime = self.performance !== undefined && self.performance.now !== undefined ? self.performance.now() : Date.now();\n      diff = 0.001 * (newTime - this.oldTime);\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n}; // File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {};\n\nTHREE.EventDispatcher.prototype = {\n  constructor: THREE.EventDispatcher,\n  apply: function (object) {\n    object.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n    object.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n    object.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n    object.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n  },\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = [];\n      var length = listenerArray.length;\n\n      for (var i = 0; i < length; i++) {\n        array[i] = listenerArray[i];\n      }\n\n      for (var i = 0; i < length; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n}; // File:src/core/Raycaster.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://exocortex.com/\n * @author stephomi / http://stephaneginier.com/\n */\n\n(function (THREE) {\n  THREE.Raycaster = function (origin, direction, near, far) {\n    this.ray = new THREE.Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Sprite: {},\n      Mesh: {},\n      PointCloud: {\n        threshold: 1\n      },\n      LOD: {},\n      Line: {}\n    };\n  };\n\n  var descSort = function (a, b) {\n    return a.distance - b.distance;\n  };\n\n  var intersectObject = function (object, raycaster, intersects, recursive) {\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }; //\n\n\n  THREE.Raycaster.prototype = {\n    constructor: THREE.Raycaster,\n    precision: 0.0001,\n    linePrecision: 1,\n    set: function (origin, direction) {\n      this.ray.set(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n    },\n    intersectObject: function (object, recursive) {\n      var intersects = [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(descSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive) {\n      var intersects = [];\n\n      if (objects instanceof Array === false) {\n        console.log('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(descSort);\n      return intersects;\n    }\n  };\n})(THREE); // File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nTHREE.Object3D = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.Object3DIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = undefined;\n  this.children = [];\n  this.up = THREE.Object3D.DefaultUp.clone();\n  var scope = this;\n  var position = new THREE.Vector3();\n  var rotation = new THREE.Euler();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3(1, 1, 1);\n\n  var onRotationChange = function () {\n    quaternion.setFromEuler(rotation, false);\n  };\n\n  var onQuaternionChange = function () {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  };\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    }\n  });\n  this.renderDepth = null;\n  this.rotationAutoUpdate = true;\n  this.matrix = new THREE.Matrix4();\n  this.matrixWorld = new THREE.Matrix4();\n  this.matrixAutoUpdate = true;\n  this.matrixWorldNeedsUpdate = false;\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.userData = {};\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.prototype = {\n  constructor: THREE.Object3D,\n\n  get eulerOrder() {\n    console.warn('THREE.Object3D: .eulerOrder has been moved to .rotation.order.');\n    return this.rotation.order;\n  },\n\n  set eulerOrder(value) {\n    console.warn('THREE.Object3D: .eulerOrder has been moved to .rotation.order.');\n    this.rotation.order = value;\n  },\n\n  get useQuaternion() {\n    console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n  },\n\n  set useQuaternion(value) {\n    console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n  },\n\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new THREE.Quaternion();\n    return function (axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new THREE.Vector3();\n    return function (axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translate: function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  },\n  translateX: function () {\n    var v1 = new THREE.Vector3(1, 0, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new THREE.Vector3(0, 1, 0);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new THREE.Vector3(0, 0, 1);\n    return function (distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This routine does not support objects with rotated and/or translated parent(s)\n    var m1 = new THREE.Matrix4();\n    return function (vector) {\n      m1.lookAt(vector, this.position, this.up);\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    ;\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add:\", object, \"can't be added as a child of itself.\");\n      return this;\n    }\n\n    if (object instanceof THREE.Object3D) {\n      if (object.parent !== undefined) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add:\", object, \"is not an instance of THREE.Object3D.\");\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n    }\n\n    ;\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = undefined;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n  },\n  getChildByName: function (name, recursive) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name, recursive);\n  },\n  getObjectById: function (id, recursive) {\n    if (this.id === id) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectById(id, recursive);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getObjectByName: function (name, recursive) {\n    if (this.name === name) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByName(name, recursive);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.updateMatrixWorld(true);\n    return result.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Quaternion();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, result, scale);\n      return result;\n    };\n  }(),\n  getWorldRotation: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Euler();\n      this.getWorldQuaternion(quaternion);\n      return result.setFromQuaternion(quaternion, this.rotation.order, false);\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, result);\n      return result;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new THREE.Quaternion();\n    return function (optionalTarget) {\n      var result = optionalTarget || new THREE.Vector3();\n      this.getWorldQuaternion(quaternion);\n      return result.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].traverseVisible(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === undefined) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.3,\n        type: 'Object',\n        generator: 'ObjectExporter'\n      }\n    }; //\n\n    var geometries = {};\n\n    var parseGeometry = function (geometry) {\n      if (output.geometries === undefined) {\n        output.geometries = [];\n      }\n\n      if (geometries[geometry.uuid] === undefined) {\n        var json = geometry.toJSON();\n        delete json.metadata;\n        geometries[geometry.uuid] = json;\n        output.geometries.push(json);\n      }\n\n      return geometry.uuid;\n    }; //\n\n\n    var materials = {};\n\n    var parseMaterial = function (material) {\n      if (output.materials === undefined) {\n        output.materials = [];\n      }\n\n      if (materials[material.uuid] === undefined) {\n        var json = material.toJSON();\n        delete json.metadata;\n        materials[material.uuid] = json;\n        output.materials.push(json);\n      }\n\n      return material.uuid;\n    }; //\n\n\n    var parseObject = function (object) {\n      var data = {};\n      data.uuid = object.uuid;\n      data.type = object.type;\n      if (object.name !== '') data.name = object.name;\n      if (JSON.stringify(object.userData) !== '{}') data.userData = object.userData;\n      if (object.visible !== true) data.visible = object.visible;\n\n      if (object instanceof THREE.PerspectiveCamera) {\n        data.fov = object.fov;\n        data.aspect = object.aspect;\n        data.near = object.near;\n        data.far = object.far;\n      } else if (object instanceof THREE.OrthographicCamera) {\n        data.left = object.left;\n        data.right = object.right;\n        data.top = object.top;\n        data.bottom = object.bottom;\n        data.near = object.near;\n        data.far = object.far;\n      } else if (object instanceof THREE.AmbientLight) {\n        data.color = object.color.getHex();\n      } else if (object instanceof THREE.DirectionalLight) {\n        data.color = object.color.getHex();\n        data.intensity = object.intensity;\n      } else if (object instanceof THREE.PointLight) {\n        data.color = object.color.getHex();\n        data.intensity = object.intensity;\n        data.distance = object.distance;\n      } else if (object instanceof THREE.SpotLight) {\n        data.color = object.color.getHex();\n        data.intensity = object.intensity;\n        data.distance = object.distance;\n        data.angle = object.angle;\n        data.exponent = object.exponent;\n      } else if (object instanceof THREE.HemisphereLight) {\n        data.color = object.color.getHex();\n        data.groundColor = object.groundColor.getHex();\n      } else if (object instanceof THREE.Mesh) {\n        data.geometry = parseGeometry(object.geometry);\n        data.material = parseMaterial(object.material);\n      } else if (object instanceof THREE.Line) {\n        data.geometry = parseGeometry(object.geometry);\n        data.material = parseMaterial(object.material);\n      } else if (object instanceof THREE.Sprite) {\n        data.material = parseMaterial(object.material);\n      }\n\n      data.matrix = object.matrix.toArray();\n\n      if (object.children.length > 0) {\n        data.children = [];\n\n        for (var i = 0; i < object.children.length; i++) {\n          data.children.push(parseObject(object.children[i]));\n        }\n      }\n\n      return data;\n    };\n\n    output.object = parseObject(this);\n    return output;\n  },\n  clone: function (object, recursive) {\n    if (object === undefined) object = new THREE.Object3D();\n    if (recursive === undefined) recursive = true;\n    object.name = this.name;\n    object.up.copy(this.up);\n    object.position.copy(this.position);\n    object.quaternion.copy(this.quaternion);\n    object.scale.copy(this.scale);\n    object.renderDepth = this.renderDepth;\n    object.rotationAutoUpdate = this.rotationAutoUpdate;\n    object.matrix.copy(this.matrix);\n    object.matrixWorld.copy(this.matrixWorld);\n    object.matrixAutoUpdate = this.matrixAutoUpdate;\n    object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n    object.visible = this.visible;\n    object.castShadow = this.castShadow;\n    object.receiveShadow = this.receiveShadow;\n    object.frustumCulled = this.frustumCulled;\n    object.userData = JSON.parse(JSON.stringify(this.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        object.add(child.clone());\n      }\n    }\n\n    return object;\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\nTHREE.Object3DIdCount = 0; // File:src/core/Projector.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Projector = function () {\n  console.warn('THREE.Projector has been moved to /examples/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function (vector, camera) {\n    console.error('THREE.Projector: .pickingRay() has been removed.');\n  };\n}; // File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Face3 = function (a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n  this.vertexNormals = normal instanceof Array ? normal : [];\n  this.color = color instanceof THREE.Color ? color : new THREE.Color();\n  this.vertexColors = color instanceof Array ? color : [];\n  this.vertexTangents = [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n};\n\nTHREE.Face3.prototype = {\n  constructor: THREE.Face3,\n  clone: function () {\n    var face = new THREE.Face3(this.a, this.b, this.c);\n    face.normal.copy(this.normal);\n    face.color.copy(this.color);\n    face.materialIndex = this.materialIndex;\n\n    for (var i = 0, il = this.vertexNormals.length; i < il; i++) {\n      face.vertexNormals[i] = this.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = this.vertexColors.length; i < il; i++) {\n      face.vertexColors[i] = this.vertexColors[i].clone();\n    }\n\n    for (var i = 0, il = this.vertexTangents.length; i < il; i++) {\n      face.vertexTangents[i] = this.vertexTangents[i].clone();\n    }\n\n    return face;\n  }\n}; // File:src/core/Face4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Face4 = function (a, b, c, d, normal, color, materialIndex) {\n  console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n  return new THREE.Face3(a, b, c, normal, color, materialIndex);\n}; // File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.BufferAttribute = function (array, itemSize) {\n  this.array = array;\n  this.itemSize = itemSize;\n  this.needsUpdate = false;\n};\n\nTHREE.BufferAttribute.prototype = {\n  constructor: THREE.BufferAttribute,\n\n  get length() {\n    return this.array.length;\n  },\n\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n  },\n  set: function (value) {\n    this.array.set(value);\n    return this;\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  clone: function () {\n    return new THREE.BufferAttribute(new this.array.constructor(this.array), this.itemSize);\n  }\n}; //\n\nTHREE.Int8Attribute = function (data, itemSize) {\n  console.warn('THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Uint8Attribute = function (data, itemSize) {\n  console.warn('THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Uint8ClampedAttribute = function (data, itemSize) {\n  console.warn('THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Int16Attribute = function (data, itemSize) {\n  console.warn('THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Uint16Attribute = function (data, itemSize) {\n  console.warn('THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Int32Attribute = function (data, itemSize) {\n  console.warn('THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Uint32Attribute = function (data, itemSize) {\n  console.warn('THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Float32Attribute = function (data, itemSize) {\n  console.warn('THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n};\n\nTHREE.Float64Attribute = function (data, itemSize) {\n  console.warn('THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.');\n  return new THREE.BufferAttribute(data, itemSize);\n}; // File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.BufferGeometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.attributes = {};\n  this.attributesKeys = [];\n  this.drawcalls = [];\n  this.offsets = this.drawcalls; // backwards compatibility\n\n  this.boundingBox = null;\n  this.boundingSphere = null;\n};\n\nTHREE.BufferGeometry.prototype = {\n  constructor: THREE.BufferGeometry,\n  addAttribute: function (name, attribute) {\n    if (attribute instanceof THREE.BufferAttribute === false) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      this.attributes[name] = {\n        array: arguments[1],\n        itemSize: arguments[2]\n      };\n      return;\n    }\n\n    this.attributes[name] = attribute;\n    this.attributesKeys = Object.keys(this.attributes);\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  addDrawCall: function (start, count, indexOffset) {\n    this.drawcalls.push({\n      start: start,\n      count: count,\n      index: indexOffset !== undefined ? indexOffset : 0\n    });\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToVector3Array(position.array);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToVector3Array(normal.array);\n      normal.needsUpdate = true;\n    }\n  },\n  center: function () {// TODO\n  },\n  fromGeometry: function (geometry, settings) {\n    settings = settings || {\n      'vertexColors': THREE.NoColors\n    };\n    var vertices = geometry.vertices;\n    var faces = geometry.faces;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var vertexColors = settings.vertexColors;\n    var hasFaceVertexUv = faceVertexUvs[0].length > 0;\n    var hasFaceVertexNormals = faces[0].vertexNormals.length == 3;\n    var positions = new Float32Array(faces.length * 3 * 3);\n    this.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    var normals = new Float32Array(faces.length * 3 * 3);\n    this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\n    if (vertexColors !== THREE.NoColors) {\n      var colors = new Float32Array(faces.length * 3 * 3);\n      this.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n    }\n\n    if (hasFaceVertexUv === true) {\n      var uvs = new Float32Array(faces.length * 3 * 2);\n      this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n    }\n\n    for (var i = 0, i2 = 0, i3 = 0; i < faces.length; i++, i2 += 6, i3 += 9) {\n      var face = faces[i];\n      var a = vertices[face.a];\n      var b = vertices[face.b];\n      var c = vertices[face.c];\n      positions[i3] = a.x;\n      positions[i3 + 1] = a.y;\n      positions[i3 + 2] = a.z;\n      positions[i3 + 3] = b.x;\n      positions[i3 + 4] = b.y;\n      positions[i3 + 5] = b.z;\n      positions[i3 + 6] = c.x;\n      positions[i3 + 7] = c.y;\n      positions[i3 + 8] = c.z;\n\n      if (hasFaceVertexNormals === true) {\n        var na = face.vertexNormals[0];\n        var nb = face.vertexNormals[1];\n        var nc = face.vertexNormals[2];\n        normals[i3] = na.x;\n        normals[i3 + 1] = na.y;\n        normals[i3 + 2] = na.z;\n        normals[i3 + 3] = nb.x;\n        normals[i3 + 4] = nb.y;\n        normals[i3 + 5] = nb.z;\n        normals[i3 + 6] = nc.x;\n        normals[i3 + 7] = nc.y;\n        normals[i3 + 8] = nc.z;\n      } else {\n        var n = face.normal;\n        normals[i3] = n.x;\n        normals[i3 + 1] = n.y;\n        normals[i3 + 2] = n.z;\n        normals[i3 + 3] = n.x;\n        normals[i3 + 4] = n.y;\n        normals[i3 + 5] = n.z;\n        normals[i3 + 6] = n.x;\n        normals[i3 + 7] = n.y;\n        normals[i3 + 8] = n.z;\n      }\n\n      if (vertexColors === THREE.FaceColors) {\n        var fc = face.color;\n        colors[i3] = fc.r;\n        colors[i3 + 1] = fc.g;\n        colors[i3 + 2] = fc.b;\n        colors[i3 + 3] = fc.r;\n        colors[i3 + 4] = fc.g;\n        colors[i3 + 5] = fc.b;\n        colors[i3 + 6] = fc.r;\n        colors[i3 + 7] = fc.g;\n        colors[i3 + 8] = fc.b;\n      } else if (vertexColors === THREE.VertexColors) {\n        var vca = face.vertexColors[0];\n        var vcb = face.vertexColors[1];\n        var vcc = face.vertexColors[2];\n        colors[i3] = vca.r;\n        colors[i3 + 1] = vca.g;\n        colors[i3 + 2] = vca.b;\n        colors[i3 + 3] = vcb.r;\n        colors[i3 + 4] = vcb.g;\n        colors[i3 + 5] = vcb.b;\n        colors[i3 + 6] = vcc.r;\n        colors[i3 + 7] = vcc.g;\n        colors[i3 + 8] = vcc.b;\n      }\n\n      if (hasFaceVertexUv === true) {\n        var uva = faceVertexUvs[0][i][0];\n        var uvb = faceVertexUvs[0][i][1];\n        var uvc = faceVertexUvs[0][i][2];\n        uvs[i2] = uva.x;\n        uvs[i2 + 1] = uva.y;\n        uvs[i2 + 2] = uvb.x;\n        uvs[i2 + 3] = uvb.y;\n        uvs[i2 + 4] = uvc.x;\n        uvs[i2 + 5] = uvc.y;\n      }\n    }\n\n    this.computeBoundingSphere();\n    return this;\n  },\n  computeBoundingBox: function () {\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new THREE.Box3();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        var bb = this.boundingBox;\n        bb.makeEmpty();\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.set(positions[i], positions[i + 1], positions[i + 2]);\n          bb.expandByPoint(vector);\n        }\n      }\n\n      if (positions === undefined || positions.length === 0) {\n        this.boundingBox.min.set(0, 0, 0);\n        this.boundingBox.max.set(0, 0, 0);\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.');\n      }\n    };\n  }(),\n  computeBoundingSphere: function () {\n    var box = new THREE.Box3();\n    var vector = new THREE.Vector3();\n    return function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new THREE.Sphere();\n      }\n\n      var positions = this.attributes.position.array;\n\n      if (positions) {\n        box.makeEmpty();\n        var center = this.boundingSphere.center;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.set(positions[i], positions[i + 1], positions[i + 2]);\n          box.expandByPoint(vector);\n        }\n\n        box.center(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = positions.length; i < il; i += 3) {\n          vector.set(positions[i], positions[i + 1], positions[i + 2]);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.');\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var attributes = this.attributes;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var normals = attributes.normal.array;\n\n        for (var i = 0, il = normals.length; i < il; i++) {\n          normals[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA,\n          vB,\n          vC,\n          pA = new THREE.Vector3(),\n          pB = new THREE.Vector3(),\n          pC = new THREE.Vector3(),\n          cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(); // indexed elements\n\n      if (attributes.index) {\n        var indices = attributes.index.array;\n        var offsets = this.offsets.length > 0 ? this.offsets : [{\n          start: 0,\n          count: indices.length,\n          index: 0\n        }];\n\n        for (var j = 0, jl = offsets.length; j < jl; ++j) {\n          var start = offsets[j].start;\n          var count = offsets[j].count;\n          var index = offsets[j].index;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = (index + indices[i]) * 3;\n            vB = (index + indices[i + 1]) * 3;\n            vC = (index + indices[i + 2]) * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  computeTangents: function () {\n    // based on http://www.terathon.com/code/tangent.html\n    // (per vertex tangents)\n    if (this.attributes.index === undefined || this.attributes.position === undefined || this.attributes.normal === undefined || this.attributes.uv === undefined) {\n      console.warn('Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()');\n      return;\n    }\n\n    var indices = this.attributes.index.array;\n    var positions = this.attributes.position.array;\n    var normals = this.attributes.normal.array;\n    var uvs = this.attributes.uv.array;\n    var nVertices = positions.length / 3;\n\n    if (this.attributes.tangent === undefined) {\n      this.addAttribute('tangent', new THREE.BufferAttribute(new Float32Array(4 * nVertices), 4));\n    }\n\n    var tangents = this.attributes.tangent.array;\n    var tan1 = [],\n        tan2 = [];\n\n    for (var k = 0; k < nVertices; k++) {\n      tan1[k] = new THREE.Vector3();\n      tan2[k] = new THREE.Vector3();\n    }\n\n    var vA = new THREE.Vector3(),\n        vB = new THREE.Vector3(),\n        vC = new THREE.Vector3(),\n        uvA = new THREE.Vector2(),\n        uvB = new THREE.Vector2(),\n        uvC = new THREE.Vector2(),\n        x1,\n        x2,\n        y1,\n        y2,\n        z1,\n        z2,\n        s1,\n        s2,\n        t1,\n        t2,\n        r;\n    var sdir = new THREE.Vector3(),\n        tdir = new THREE.Vector3();\n\n    function handleTriangle(a, b, c) {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n      uvA.fromArray(uvs, a * 2);\n      uvB.fromArray(uvs, b * 2);\n      uvC.fromArray(uvs, c * 2);\n      x1 = vB.x - vA.x;\n      x2 = vC.x - vA.x;\n      y1 = vB.y - vA.y;\n      y2 = vC.y - vA.y;\n      z1 = vB.z - vA.z;\n      z2 = vC.z - vA.z;\n      s1 = uvB.x - uvA.x;\n      s2 = uvC.x - uvA.x;\n      t1 = uvB.y - uvA.y;\n      t2 = uvC.y - uvA.y;\n      r = 1.0 / (s1 * t2 - s2 * t1);\n      sdir.set((t2 * x1 - t1 * x2) * r, (t2 * y1 - t1 * y2) * r, (t2 * z1 - t1 * z2) * r);\n      tdir.set((s1 * x2 - s2 * x1) * r, (s1 * y2 - s2 * y1) * r, (s1 * z2 - s2 * z1) * r);\n      tan1[a].add(sdir);\n      tan1[b].add(sdir);\n      tan1[c].add(sdir);\n      tan2[a].add(tdir);\n      tan2[b].add(tdir);\n      tan2[c].add(tdir);\n    }\n\n    var i, il;\n    var j, jl;\n    var iA, iB, iC;\n\n    if (this.drawcalls.length === 0) {\n      this.addDrawCall(0, indices.length, 0);\n    }\n\n    var drawcalls = this.drawcalls;\n\n    for (j = 0, jl = drawcalls.length; j < jl; ++j) {\n      var start = drawcalls[j].start;\n      var count = drawcalls[j].count;\n      var index = drawcalls[j].index;\n\n      for (i = start, il = start + count; i < il; i += 3) {\n        iA = index + indices[i];\n        iB = index + indices[i + 1];\n        iC = index + indices[i + 2];\n        handleTriangle(iA, iB, iC);\n      }\n    }\n\n    var tmp = new THREE.Vector3(),\n        tmp2 = new THREE.Vector3();\n    var n = new THREE.Vector3(),\n        n2 = new THREE.Vector3();\n    var w, t, test;\n\n    function handleVertex(v) {\n      n.fromArray(normals, v * 3);\n      n2.copy(n);\n      t = tan1[v]; // Gram-Schmidt orthogonalize\n\n      tmp.copy(t);\n      tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n      tmp2.crossVectors(n2, t);\n      test = tmp2.dot(tan2[v]);\n      w = test < 0.0 ? -1.0 : 1.0;\n      tangents[v * 4] = tmp.x;\n      tangents[v * 4 + 1] = tmp.y;\n      tangents[v * 4 + 2] = tmp.z;\n      tangents[v * 4 + 3] = w;\n    }\n\n    for (j = 0, jl = drawcalls.length; j < jl; ++j) {\n      var start = drawcalls[j].start;\n      var count = drawcalls[j].count;\n      var index = drawcalls[j].index;\n\n      for (i = start, il = start + count; i < il; i += 3) {\n        iA = index + indices[i];\n        iB = index + indices[i + 1];\n        iC = index + indices[i + 2];\n        handleVertex(iA);\n        handleVertex(iB);\n        handleVertex(iC);\n      }\n    }\n  },\n\n  /*\n  \tcomputeOffsets\n  \tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\n  \tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\n  \tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\n  \tindexBufferSize - Defaults to 65535, but allows for larger or smaller chunks.\n  */\n  computeOffsets: function (indexBufferSize) {\n    var size = indexBufferSize;\n    if (indexBufferSize === undefined) size = 65535; //WebGL limits type of index buffer values to 16-bit.\n\n    var s = Date.now();\n    var indices = this.attributes.index.array;\n    var vertices = this.attributes.position.array;\n    var verticesCount = vertices.length / 3;\n    var facesCount = indices.length / 3;\n    /*\n    console.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\n    console.log(\"Faces to process: \"+(indices.length/3));\n    console.log(\"Reordering \"+verticesCount+\" vertices.\");\n    */\n\n    var sortedIndices = new Uint16Array(indices.length); //16-bit buffers\n\n    var indexPtr = 0;\n    var vertexPtr = 0;\n    var offsets = [{\n      start: 0,\n      count: 0,\n      index: 0\n    }];\n    var offset = offsets[0];\n    var duplicatedVertices = 0;\n    var newVerticeMaps = 0;\n    var faceVertices = new Int32Array(6);\n    var vertexMap = new Int32Array(vertices.length);\n    var revVertexMap = new Int32Array(vertices.length);\n\n    for (var j = 0; j < vertices.length; j++) {\n      vertexMap[j] = -1;\n      revVertexMap[j] = -1;\n    }\n    /*\n    \tTraverse every face and reorder vertices in the proper offsets of 65k.\n    \tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\n    */\n\n\n    for (var findex = 0; findex < facesCount; findex++) {\n      newVerticeMaps = 0;\n\n      for (var vo = 0; vo < 3; vo++) {\n        var vid = indices[findex * 3 + vo];\n\n        if (vertexMap[vid] == -1) {\n          //Unmapped vertice\n          faceVertices[vo * 2] = vid;\n          faceVertices[vo * 2 + 1] = -1;\n          newVerticeMaps++;\n        } else if (vertexMap[vid] < offset.index) {\n          //Reused vertices from previous block (duplicate)\n          faceVertices[vo * 2] = vid;\n          faceVertices[vo * 2 + 1] = -1;\n          duplicatedVertices++;\n        } else {\n          //Reused vertice in the current block\n          faceVertices[vo * 2] = vid;\n          faceVertices[vo * 2 + 1] = vertexMap[vid];\n        }\n      }\n\n      var faceMax = vertexPtr + newVerticeMaps;\n\n      if (faceMax > offset.index + size) {\n        var new_offset = {\n          start: indexPtr,\n          count: 0,\n          index: vertexPtr\n        };\n        offsets.push(new_offset);\n        offset = new_offset; //Re-evaluate reused vertices in light of new offset.\n\n        for (var v = 0; v < 6; v += 2) {\n          var new_vid = faceVertices[v + 1];\n          if (new_vid > -1 && new_vid < offset.index) faceVertices[v + 1] = -1;\n        }\n      } //Reindex the face.\n\n\n      for (var v = 0; v < 6; v += 2) {\n        var vid = faceVertices[v];\n        var new_vid = faceVertices[v + 1];\n        if (new_vid === -1) new_vid = vertexPtr++;\n        vertexMap[vid] = new_vid;\n        revVertexMap[new_vid] = vid;\n        sortedIndices[indexPtr++] = new_vid - offset.index; //XXX overflows at 16bit\n\n        offset.count++;\n      }\n    }\n    /* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\n\n\n    this.reorderBuffers(sortedIndices, revVertexMap, vertexPtr);\n    this.offsets = offsets;\n    /*\n    var orderTime = Date.now();\n    console.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\n    console.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\n    console.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\n    console.log(\"Draw offsets: \"+offsets.length);\n    */\n\n    return offsets;\n  },\n  merge: function () {\n    console.log('BufferGeometry.merge(): TODO');\n  },\n  normalizeNormals: function () {\n    var normals = this.attributes.normal.array;\n    var x, y, z, n;\n\n    for (var i = 0, il = normals.length; i < il; i += 3) {\n      x = normals[i];\n      y = normals[i + 1];\n      z = normals[i + 2];\n      n = 1.0 / Math.sqrt(x * x + y * y + z * z);\n      normals[i] *= n;\n      normals[i + 1] *= n;\n      normals[i + 2] *= n;\n    }\n  },\n\n  /*\n  \treoderBuffers:\n  \tReorder attributes based on a new indexBuffer and indexMap.\n  \tindexBuffer - Uint16Array of the new ordered indices.\n  \tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\n  \tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\n  */\n  reorderBuffers: function (indexBuffer, indexMap, vertexCount) {\n    /* Create a copy of all attributes for reordering. */\n    var sortedAttributes = {};\n\n    for (var attr in this.attributes) {\n      if (attr == 'index') continue;\n      var sourceArray = this.attributes[attr].array;\n      sortedAttributes[attr] = new sourceArray.constructor(this.attributes[attr].itemSize * vertexCount);\n    }\n    /* Move attribute positions based on the new index map */\n\n\n    for (var new_vid = 0; new_vid < vertexCount; new_vid++) {\n      var vid = indexMap[new_vid];\n\n      for (var attr in this.attributes) {\n        if (attr == 'index') continue;\n        var attrArray = this.attributes[attr].array;\n        var attrSize = this.attributes[attr].itemSize;\n        var sortedAttr = sortedAttributes[attr];\n\n        for (var k = 0; k < attrSize; k++) sortedAttr[new_vid * attrSize + k] = attrArray[vid * attrSize + k];\n      }\n    }\n    /* Carry the new sorted buffers locally */\n\n\n    this.attributes['index'].array = indexBuffer;\n\n    for (var attr in this.attributes) {\n      if (attr == 'index') continue;\n      this.attributes[attr].array = sortedAttributes[attr];\n      this.attributes[attr].numItems = this.attributes[attr].itemSize * vertexCount;\n    }\n  },\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.0,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometryExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      data: {\n        attributes: {}\n      }\n    };\n    var attributes = this.attributes;\n    var offsets = this.offsets;\n    var boundingSphere = this.boundingSphere;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = [],\n          typeArray = attribute.array;\n\n      for (var i = 0, l = typeArray.length; i < l; i++) {\n        array[i] = typeArray[i];\n      }\n\n      output.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array\n      };\n    }\n\n    if (offsets.length > 0) {\n      output.data.offsets = JSON.parse(JSON.stringify(offsets));\n    }\n\n    if (boundingSphere !== null) {\n      output.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return output;\n  },\n  clone: function () {\n    var geometry = new THREE.BufferGeometry();\n\n    for (var attr in this.attributes) {\n      var sourceAttr = this.attributes[attr];\n      geometry.addAttribute(attr, sourceAttr.clone());\n    }\n\n    for (var i = 0, il = this.offsets.length; i < il; i++) {\n      var offset = this.offsets[i];\n      geometry.offsets.push({\n        start: offset.start,\n        index: offset.index,\n        count: offset.count\n      });\n    }\n\n    return geometry;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype); // File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Geometry = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.GeometryIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = []; // one-to-one vertex colors, used in Points and Line\n\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphColors = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.hasTangents = false;\n  this.dynamic = true; // the intermediate typed arrays will be deleted when set to false\n  // update flags\n\n  this.verticesNeedUpdate = false;\n  this.elementsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.tangentsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n};\n\nTHREE.Geometry.prototype = {\n  constructor: THREE.Geometry,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox instanceof THREE.Box3) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere instanceof THREE.Sphere) {\n      this.computeBoundingSphere();\n    }\n  },\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var attributes = geometry.attributes;\n    var vertices = attributes.position.array;\n    var indices = attributes.index !== undefined ? attributes.index.array : undefined;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var tempNormals = [];\n    var tempUVs = [];\n\n    for (var i = 0, j = 0; i < vertices.length; i += 3, j += 2) {\n      scope.vertices.push(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new THREE.Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new THREE.Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new THREE.Vector2(uvs[j], uvs[j + 1]));\n      }\n    }\n\n    var addFace = function (a, b, c) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      scope.faces.push(new THREE.Face3(a, b, c, vertexNormals, vertexColors));\n      scope.faceVertexUvs[0].push([tempUVs[a], tempUVs[b], tempUVs[c]]);\n    };\n\n    if (indices !== undefined) {\n      for (var i = 0; i < indices.length; i += 3) {\n        addFace(indices[i], indices[i + 1], indices[i + 2]);\n      }\n    } else {\n      for (var i = 0; i < vertices.length / 3; i += 3) {\n        addFace(i, i + 1, i + 2);\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    this.computeBoundingBox();\n    var offset = new THREE.Vector3();\n    offset.addVectors(this.boundingBox.min, this.boundingBox.max);\n    offset.multiplyScalar(-0.5);\n    this.applyMatrix(new THREE.Matrix4().makeTranslation(offset.x, offset.y, offset.z));\n    this.computeBoundingBox();\n    return offset;\n  },\n  computeFaceNormals: function () {\n    var cb = new THREE.Vector3(),\n        ab = new THREE.Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new THREE.Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC, vD;\n      var cb = new THREE.Vector3(),\n          ab = new THREE.Vector3(),\n          db = new THREE.Vector3(),\n          dc = new THREE.Vector3(),\n          bc = new THREE.Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.vertexNormals[0] = vertices[face.a].clone();\n      face.vertexNormals[1] = vertices[face.b].clone();\n      face.vertexNormals[2] = vertices[face.c].clone();\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new THREE.Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new THREE.Vector3();\n          vertexNormals = {\n            a: new THREE.Vector3(),\n            b: new THREE.Vector3(),\n            c: new THREE.Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeTangents: function () {\n    // based on http://www.terathon.com/code/tangent.html\n    // tangents go to vertices\n    var f,\n        fl,\n        v,\n        vl,\n        i,\n        il,\n        vertexIndex,\n        face,\n        uv,\n        vA,\n        vB,\n        vC,\n        uvA,\n        uvB,\n        uvC,\n        x1,\n        x2,\n        y1,\n        y2,\n        z1,\n        z2,\n        s1,\n        s2,\n        t1,\n        t2,\n        r,\n        t,\n        test,\n        tan1 = [],\n        tan2 = [],\n        sdir = new THREE.Vector3(),\n        tdir = new THREE.Vector3(),\n        tmp = new THREE.Vector3(),\n        tmp2 = new THREE.Vector3(),\n        n = new THREE.Vector3(),\n        w;\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      tan1[v] = new THREE.Vector3();\n      tan2[v] = new THREE.Vector3();\n    }\n\n    function handleTriangle(context, a, b, c, ua, ub, uc) {\n      vA = context.vertices[a];\n      vB = context.vertices[b];\n      vC = context.vertices[c];\n      uvA = uv[ua];\n      uvB = uv[ub];\n      uvC = uv[uc];\n      x1 = vB.x - vA.x;\n      x2 = vC.x - vA.x;\n      y1 = vB.y - vA.y;\n      y2 = vC.y - vA.y;\n      z1 = vB.z - vA.z;\n      z2 = vC.z - vA.z;\n      s1 = uvB.x - uvA.x;\n      s2 = uvC.x - uvA.x;\n      t1 = uvB.y - uvA.y;\n      t2 = uvC.y - uvA.y;\n      r = 1.0 / (s1 * t2 - s2 * t1);\n      sdir.set((t2 * x1 - t1 * x2) * r, (t2 * y1 - t1 * y2) * r, (t2 * z1 - t1 * z2) * r);\n      tdir.set((s1 * x2 - s2 * x1) * r, (s1 * y2 - s2 * y1) * r, (s1 * z2 - s2 * z1) * r);\n      tan1[a].add(sdir);\n      tan1[b].add(sdir);\n      tan1[c].add(sdir);\n      tan2[a].add(tdir);\n      tan2[b].add(tdir);\n      tan2[c].add(tdir);\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      uv = this.faceVertexUvs[0][f]; // use UV layer 0 for tangents\n\n      handleTriangle(this, face.a, face.b, face.c, 0, 1, 2);\n    }\n\n    var faceIndex = ['a', 'b', 'c', 'd'];\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      for (i = 0; i < Math.min(face.vertexNormals.length, 3); i++) {\n        n.copy(face.vertexNormals[i]);\n        vertexIndex = face[faceIndex[i]];\n        t = tan1[vertexIndex]; // Gram-Schmidt orthogonalize\n\n        tmp.copy(t);\n        tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n        tmp2.crossVectors(face.vertexNormals[i], t);\n        test = tmp2.dot(tan2[vertexIndex]);\n        w = test < 0.0 ? -1.0 : 1.0;\n        face.vertexTangents[i] = new THREE.Vector4(tmp.x, tmp.y, tmp.z, w);\n      }\n    }\n\n    this.hasTangents = true;\n  },\n  computeLineDistances: function () {\n    var d = 0;\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      if (i > 0) {\n        d += vertices[i].distanceTo(vertices[i - 1]);\n      }\n\n      this.lineDistances[i] = d;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (geometry instanceof THREE.Geometry === false) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0];\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new THREE.Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new THREE.Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(new THREE.Vector2(uv[j].x, uv[j].y));\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, k, j, jl, u;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    }\n\n    ; // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c];\n      var dupIndex = -1; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] == indices[(n + 1) % 3]) {\n          dupIndex = n;\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.0,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometryExporter'\n      },\n      uuid: this.uuid,\n      type: this.type\n    };\n    if (this.name !== \"\") output.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) output[key] = parameters[key];\n      }\n\n      return output;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = false; // face.materialIndex !== undefined;\n\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0);\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      /*\n      if ( hasMaterial ) {\n      \t\tfaces.push( face.materialIndex );\n      \t}\n      */\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    output.data = {};\n    output.data.vertices = vertices;\n    output.data.normals = normals;\n    if (colors.length > 0) output.data.colors = colors;\n    if (uvs.length > 0) output.data.uvs = [uvs]; // temporal backward compatibility\n\n    output.data.faces = faces; //\n\n    return output;\n  },\n  clone: function () {\n    var geometry = new THREE.Geometry();\n    var vertices = this.vertices;\n\n    for (var i = 0, il = vertices.length; i < il; i++) {\n      geometry.vertices.push(vertices[i].clone());\n    }\n\n    var faces = this.faces;\n\n    for (var i = 0, il = faces.length; i < il; i++) {\n      geometry.faces.push(faces[i].clone());\n    }\n\n    var uvs = this.faceVertexUvs[0];\n\n    for (var i = 0, il = uvs.length; i < il; i++) {\n      var uv = uvs[i],\n          uvCopy = [];\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(new THREE.Vector2(uv[j].x, uv[j].y));\n      }\n\n      geometry.faceVertexUvs[0].push(uvCopy);\n    }\n\n    return geometry;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);\nTHREE.GeometryIdCount = 0; // File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new THREE.Matrix4();\n  this.projectionMatrix = new THREE.Matrix4();\n};\n\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n  var quaternion = new THREE.Quaternion();\n  return function (optionalTarget) {\n    var result = optionalTarget || new THREE.Vector3();\n    this.getWorldQuaternion(quaternion);\n    return result.set(0, 0, -1).applyQuaternion(quaternion);\n  };\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n  // This routine does not support cameras with rotated and/or translated parent(s)\n  var m1 = new THREE.Matrix4();\n  return function (vector) {\n    m1.lookAt(this.position, vector, this.up);\n    this.quaternion.setFromRotationMatrix(m1);\n  };\n}();\n\nTHREE.Camera.prototype.clone = function (camera) {\n  if (camera === undefined) camera = new THREE.Camera();\n  THREE.Object3D.prototype.clone.call(this, camera);\n  camera.matrixWorldInverse.copy(this.matrixWorldInverse);\n  camera.projectionMatrix.copy(this.projectionMatrix);\n  return camera;\n}; // File:src/cameras/CubeCamera.js\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.CubeCamera = function (near, far, cubeResolution) {\n  THREE.Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new THREE.Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new THREE.Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new THREE.Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new THREE.Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new THREE.Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new THREE.Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  this.renderTarget = new THREE.WebGLRenderTargetCube(cubeResolution, cubeResolution, {\n    format: THREE.RGBFormat,\n    magFilter: THREE.LinearFilter,\n    minFilter: THREE.LinearFilter\n  });\n\n  this.updateCubeMap = function (renderer, scene) {\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.generateMipmaps;\n    renderTarget.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n  };\n};\n\nTHREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype); // File:src/cameras/OrthographicCamera.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.OrthographicCamera = function (left, right, top, bottom, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype);\n\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\n  var dx = (this.right - this.left) / (2 * this.zoom);\n  var dy = (this.top - this.bottom) / (2 * this.zoom);\n  var cx = (this.right + this.left) / 2;\n  var cy = (this.top + this.bottom) / 2;\n  this.projectionMatrix.makeOrthographic(cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far);\n};\n\nTHREE.OrthographicCamera.prototype.clone = function () {\n  var camera = new THREE.OrthographicCamera();\n  THREE.Camera.prototype.clone.call(this, camera);\n  camera.zoom = this.zoom;\n  camera.left = this.left;\n  camera.right = this.right;\n  camera.top = this.top;\n  camera.bottom = this.bottom;\n  camera.near = this.near;\n  camera.far = this.far;\n  camera.projectionMatrix.copy(this.projectionMatrix);\n  return camera;\n}; // File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\n\nTHREE.PerspectiveCamera = function (fov, aspect, near, far) {\n  THREE.Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.zoom = 1;\n  this.fov = fov !== undefined ? fov : 50;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\n/**\n * Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (fullframe) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function (focalLength, frameHeight) {\n  if (frameHeight === undefined) frameHeight = 24;\n  this.fov = 2 * THREE.Math.radToDeg(Math.atan(frameHeight / (focalLength * 2)));\n  this.updateProjectionMatrix();\n};\n/**\n * Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.\n */\n\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n  this.fullWidth = fullWidth;\n  this.fullHeight = fullHeight;\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n  this.updateProjectionMatrix();\n};\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n  var fov = THREE.Math.radToDeg(2 * Math.atan(Math.tan(THREE.Math.degToRad(this.fov) * 0.5) / this.zoom));\n\n  if (this.fullWidth) {\n    var aspect = this.fullWidth / this.fullHeight;\n    var top = Math.tan(THREE.Math.degToRad(fov * 0.5)) * this.near;\n    var bottom = -top;\n    var left = aspect * bottom;\n    var right = aspect * top;\n    var width = Math.abs(right - left);\n    var height = Math.abs(top - bottom);\n    this.projectionMatrix.makeFrustum(left + this.x * width / this.fullWidth, left + (this.x + this.width) * width / this.fullWidth, top - (this.y + this.height) * height / this.fullHeight, top - this.y * height / this.fullHeight, this.near, this.far);\n  } else {\n    this.projectionMatrix.makePerspective(fov, this.aspect, this.near, this.far);\n  }\n};\n\nTHREE.PerspectiveCamera.prototype.clone = function () {\n  var camera = new THREE.PerspectiveCamera();\n  THREE.Camera.prototype.clone.call(this, camera);\n  camera.zoom = this.zoom;\n  camera.fov = this.fov;\n  camera.aspect = this.aspect;\n  camera.near = this.near;\n  camera.far = this.far;\n  camera.projectionMatrix.copy(this.projectionMatrix);\n  return camera;\n}; // File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Light = function (color) {\n  THREE.Object3D.call(this);\n  this.type = 'Light';\n  this.color = new THREE.Color(color);\n};\n\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Light.prototype.clone = function (light) {\n  if (light === undefined) light = new THREE.Light();\n  THREE.Object3D.prototype.clone.call(this, light);\n  light.color.copy(this.color);\n  return light;\n}; // File:src/lights/AmbientLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.AmbientLight = function (color) {\n  THREE.Light.call(this, color);\n  this.type = 'AmbientLight';\n};\n\nTHREE.AmbientLight.prototype = Object.create(THREE.Light.prototype);\n\nTHREE.AmbientLight.prototype.clone = function () {\n  var light = new THREE.AmbientLight();\n  THREE.Light.prototype.clone.call(this, light);\n  return light;\n}; // File:src/lights/AreaLight.js\n\n/**\n * @author MPanknin / http://www.redplant.de/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.AreaLight = function (color, intensity) {\n  THREE.Light.call(this, color);\n  this.type = 'AreaLight';\n  this.normal = new THREE.Vector3(0, -1, 0);\n  this.right = new THREE.Vector3(1, 0, 0);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.width = 1.0;\n  this.height = 1.0;\n  this.constantAttenuation = 1.5;\n  this.linearAttenuation = 0.5;\n  this.quadraticAttenuation = 0.1;\n};\n\nTHREE.AreaLight.prototype = Object.create(THREE.Light.prototype); // File:src/lights/DirectionalLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DirectionalLight = function (color, intensity) {\n  THREE.Light.call(this, color);\n  this.type = 'DirectionalLight';\n  this.position.set(0, 1, 0);\n  this.target = new THREE.Object3D();\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.castShadow = false;\n  this.onlyShadow = false; //\n\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n  this.shadowCameraLeft = -500;\n  this.shadowCameraRight = 500;\n  this.shadowCameraTop = 500;\n  this.shadowCameraBottom = -500;\n  this.shadowCameraVisible = false;\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512; //\n\n  this.shadowCascade = false;\n  this.shadowCascadeOffset = new THREE.Vector3(0, 0, -1000);\n  this.shadowCascadeCount = 2;\n  this.shadowCascadeBias = [0, 0, 0];\n  this.shadowCascadeWidth = [512, 512, 512];\n  this.shadowCascadeHeight = [512, 512, 512];\n  this.shadowCascadeNearZ = [-1.000, 0.990, 0.998];\n  this.shadowCascadeFarZ = [0.990, 0.998, 1.000];\n  this.shadowCascadeArray = []; //\n\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n};\n\nTHREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype);\n\nTHREE.DirectionalLight.prototype.clone = function () {\n  var light = new THREE.DirectionalLight();\n  THREE.Light.prototype.clone.call(this, light);\n  light.target = this.target.clone();\n  light.intensity = this.intensity;\n  light.castShadow = this.castShadow;\n  light.onlyShadow = this.onlyShadow; //\n\n  light.shadowCameraNear = this.shadowCameraNear;\n  light.shadowCameraFar = this.shadowCameraFar;\n  light.shadowCameraLeft = this.shadowCameraLeft;\n  light.shadowCameraRight = this.shadowCameraRight;\n  light.shadowCameraTop = this.shadowCameraTop;\n  light.shadowCameraBottom = this.shadowCameraBottom;\n  light.shadowCameraVisible = this.shadowCameraVisible;\n  light.shadowBias = this.shadowBias;\n  light.shadowDarkness = this.shadowDarkness;\n  light.shadowMapWidth = this.shadowMapWidth;\n  light.shadowMapHeight = this.shadowMapHeight; //\n\n  light.shadowCascade = this.shadowCascade;\n  light.shadowCascadeOffset.copy(this.shadowCascadeOffset);\n  light.shadowCascadeCount = this.shadowCascadeCount;\n  light.shadowCascadeBias = this.shadowCascadeBias.slice(0);\n  light.shadowCascadeWidth = this.shadowCascadeWidth.slice(0);\n  light.shadowCascadeHeight = this.shadowCascadeHeight.slice(0);\n  light.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0);\n  light.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0);\n  return light;\n}; // File:src/lights/HemisphereLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.HemisphereLight = function (skyColor, groundColor, intensity) {\n  THREE.Light.call(this, skyColor);\n  this.type = 'HemisphereLight';\n  this.position.set(0, 100, 0);\n  this.groundColor = new THREE.Color(groundColor);\n  this.intensity = intensity !== undefined ? intensity : 1;\n};\n\nTHREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype);\n\nTHREE.HemisphereLight.prototype.clone = function () {\n  var light = new THREE.HemisphereLight();\n  THREE.Light.prototype.clone.call(this, light);\n  light.groundColor.copy(this.groundColor);\n  light.intensity = this.intensity;\n  return light;\n}; // File:src/lights/PointLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.PointLight = function (color, intensity, distance) {\n  THREE.Light.call(this, color);\n  this.type = 'PointLight';\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.distance = distance !== undefined ? distance : 0;\n};\n\nTHREE.PointLight.prototype = Object.create(THREE.Light.prototype);\n\nTHREE.PointLight.prototype.clone = function () {\n  var light = new THREE.PointLight();\n  THREE.Light.prototype.clone.call(this, light);\n  light.intensity = this.intensity;\n  light.distance = this.distance;\n  return light;\n}; // File:src/lights/SpotLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.SpotLight = function (color, intensity, distance, angle, exponent) {\n  THREE.Light.call(this, color);\n  this.type = 'SpotLight';\n  this.position.set(0, 1, 0);\n  this.target = new THREE.Object3D();\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.exponent = exponent !== undefined ? exponent : 10;\n  this.castShadow = false;\n  this.onlyShadow = false; //\n\n  this.shadowCameraNear = 50;\n  this.shadowCameraFar = 5000;\n  this.shadowCameraFov = 50;\n  this.shadowCameraVisible = false;\n  this.shadowBias = 0;\n  this.shadowDarkness = 0.5;\n  this.shadowMapWidth = 512;\n  this.shadowMapHeight = 512; //\n\n  this.shadowMap = null;\n  this.shadowMapSize = null;\n  this.shadowCamera = null;\n  this.shadowMatrix = null;\n};\n\nTHREE.SpotLight.prototype = Object.create(THREE.Light.prototype);\n\nTHREE.SpotLight.prototype.clone = function () {\n  var light = new THREE.SpotLight();\n  THREE.Light.prototype.clone.call(this, light);\n  light.target = this.target.clone();\n  light.intensity = this.intensity;\n  light.distance = this.distance;\n  light.angle = this.angle;\n  light.exponent = this.exponent;\n  light.castShadow = this.castShadow;\n  light.onlyShadow = this.onlyShadow; //\n\n  light.shadowCameraNear = this.shadowCameraNear;\n  light.shadowCameraFar = this.shadowCameraFar;\n  light.shadowCameraFov = this.shadowCameraFov;\n  light.shadowCameraVisible = this.shadowCameraVisible;\n  light.shadowBias = this.shadowBias;\n  light.shadowDarkness = this.shadowDarkness;\n  light.shadowMapWidth = this.shadowMapWidth;\n  light.shadowMapHeight = this.shadowMapHeight;\n  return light;\n}; // File:src/loaders/Cache.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Cache = function () {\n  this.files = {};\n};\n\nTHREE.Cache.prototype = {\n  constructor: THREE.Cache,\n  add: function (key, file) {\n    // console.log( 'THREE.Cache', 'Adding key:', key );\n    this.files[key] = file;\n  },\n  get: function (key) {\n    // console.log( 'THREE.Cache', 'Checking key:', key );\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n}; // File:src/loaders/Loader.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Loader = function (showStatus) {\n  this.showStatus = showStatus;\n  this.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\n  this.imageLoader = new THREE.ImageLoader();\n\n  this.onLoadStart = function () {};\n\n  this.onLoadProgress = function () {};\n\n  this.onLoadComplete = function () {};\n};\n\nTHREE.Loader.prototype = {\n  constructor: THREE.Loader,\n  crossOrigin: undefined,\n  addStatusElement: function () {\n    var e = document.createElement('div');\n    e.style.position = 'absolute';\n    e.style.right = '0px';\n    e.style.top = '0px';\n    e.style.fontSize = '0.8em';\n    e.style.textAlign = 'left';\n    e.style.background = 'rgba(0,0,0,0.25)';\n    e.style.color = '#fff';\n    e.style.width = '120px';\n    e.style.padding = '0.5em 0.5em 0.5em 0.5em';\n    e.style.zIndex = 1000;\n    e.innerHTML = 'Loading ...';\n    return e;\n  },\n  updateProgress: function (progress) {\n    var message = 'Loaded ';\n\n    if (progress.total) {\n      message += (100 * progress.loaded / progress.total).toFixed(0) + '%';\n    } else {\n      message += (progress.loaded / 1024).toFixed(2) + ' KB';\n    }\n\n    this.statusDomElement.innerHTML = message;\n  },\n  extractUrlBase: function (url) {\n    var parts = url.split('/');\n    if (parts.length === 1) return './';\n    parts.pop();\n    return parts.join('/') + '/';\n  },\n  initMaterials: function (materials, texturePath) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath);\n    }\n\n    return array;\n  },\n  needsTangents: function (materials) {\n    for (var i = 0, il = materials.length; i < il; i++) {\n      var m = materials[i];\n      if (m instanceof THREE.ShaderMaterial) return true;\n    }\n\n    return false;\n  },\n  createMaterial: function (m, texturePath) {\n    var scope = this;\n\n    function nearest_pow2(n) {\n      var l = Math.log(n) / Math.LN2;\n      return Math.pow(2, Math.round(l));\n    }\n\n    function create_texture(where, name, sourceFile, repeat, offset, wrap, anisotropy) {\n      var fullPath = texturePath + sourceFile;\n      var texture;\n      var loader = THREE.Loader.Handlers.get(fullPath);\n\n      if (loader !== null) {\n        texture = loader.load(fullPath);\n      } else {\n        texture = new THREE.Texture();\n        loader = scope.imageLoader;\n        loader.crossOrigin = scope.crossOrigin;\n        loader.load(fullPath, function (image) {\n          if (THREE.Math.isPowerOfTwo(image.width) === false || THREE.Math.isPowerOfTwo(image.height) === false) {\n            var width = nearest_pow2(image.width);\n            var height = nearest_pow2(image.height);\n            var canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            var context = canvas.getContext('2d');\n            context.drawImage(image, 0, 0, width, height);\n            texture.image = canvas;\n          } else {\n            texture.image = image;\n          }\n\n          texture.needsUpdate = true;\n        });\n      }\n\n      texture.sourceFile = sourceFile;\n\n      if (repeat) {\n        texture.repeat.set(repeat[0], repeat[1]);\n        if (repeat[0] !== 1) texture.wrapS = THREE.RepeatWrapping;\n        if (repeat[1] !== 1) texture.wrapT = THREE.RepeatWrapping;\n      }\n\n      if (offset) {\n        texture.offset.set(offset[0], offset[1]);\n      }\n\n      if (wrap) {\n        var wrapMap = {\n          'repeat': THREE.RepeatWrapping,\n          'mirror': THREE.MirroredRepeatWrapping\n        };\n        if (wrapMap[wrap[0]] !== undefined) texture.wrapS = wrapMap[wrap[0]];\n        if (wrapMap[wrap[1]] !== undefined) texture.wrapT = wrapMap[wrap[1]];\n      }\n\n      if (anisotropy) {\n        texture.anisotropy = anisotropy;\n      }\n\n      where[name] = texture;\n    }\n\n    function rgb2hex(rgb) {\n      return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + rgb[2] * 255;\n    } // defaults\n\n\n    var mtype = 'MeshLambertMaterial';\n    var mpars = {\n      color: 0xeeeeee,\n      opacity: 1.0,\n      map: null,\n      lightMap: null,\n      normalMap: null,\n      bumpMap: null,\n      wireframe: false\n    }; // parameters from model file\n\n    if (m.shading) {\n      var shading = m.shading.toLowerCase();\n      if (shading === 'phong') mtype = 'MeshPhongMaterial';else if (shading === 'basic') mtype = 'MeshBasicMaterial';\n    }\n\n    if (m.blending !== undefined && THREE[m.blending] !== undefined) {\n      mpars.blending = THREE[m.blending];\n    }\n\n    if (m.transparent !== undefined || m.opacity < 1.0) {\n      mpars.transparent = m.transparent;\n    }\n\n    if (m.depthTest !== undefined) {\n      mpars.depthTest = m.depthTest;\n    }\n\n    if (m.depthWrite !== undefined) {\n      mpars.depthWrite = m.depthWrite;\n    }\n\n    if (m.visible !== undefined) {\n      mpars.visible = m.visible;\n    }\n\n    if (m.flipSided !== undefined) {\n      mpars.side = THREE.BackSide;\n    }\n\n    if (m.doubleSided !== undefined) {\n      mpars.side = THREE.DoubleSide;\n    }\n\n    if (m.wireframe !== undefined) {\n      mpars.wireframe = m.wireframe;\n    }\n\n    if (m.vertexColors !== undefined) {\n      if (m.vertexColors === 'face') {\n        mpars.vertexColors = THREE.FaceColors;\n      } else if (m.vertexColors) {\n        mpars.vertexColors = THREE.VertexColors;\n      }\n    } // colors\n\n\n    if (m.colorDiffuse) {\n      mpars.color = rgb2hex(m.colorDiffuse);\n    } else if (m.DbgColor) {\n      mpars.color = m.DbgColor;\n    }\n\n    if (m.colorSpecular) {\n      mpars.specular = rgb2hex(m.colorSpecular);\n    }\n\n    if (m.colorAmbient) {\n      mpars.ambient = rgb2hex(m.colorAmbient);\n    }\n\n    if (m.colorEmissive) {\n      mpars.emissive = rgb2hex(m.colorEmissive);\n    } // modifiers\n\n\n    if (m.transparency) {\n      mpars.opacity = m.transparency;\n    }\n\n    if (m.specularCoef) {\n      mpars.shininess = m.specularCoef;\n    } // textures\n\n\n    if (m.mapDiffuse && texturePath) {\n      create_texture(mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n    }\n\n    if (m.mapLight && texturePath) {\n      create_texture(mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n    }\n\n    if (m.mapBump && texturePath) {\n      create_texture(mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n    }\n\n    if (m.mapNormal && texturePath) {\n      create_texture(mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n    }\n\n    if (m.mapSpecular && texturePath) {\n      create_texture(mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n    }\n\n    if (m.mapAlpha && texturePath) {\n      create_texture(mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n    } //\n\n\n    if (m.mapBumpScale) {\n      mpars.bumpScale = m.mapBumpScale;\n    } // special case for normal mapped material\n\n\n    if (m.mapNormal) {\n      var shader = THREE.ShaderLib['normalmap'];\n      var uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n      uniforms['tNormal'].value = mpars.normalMap;\n\n      if (m.mapNormalFactor) {\n        uniforms['uNormalScale'].value.set(m.mapNormalFactor, m.mapNormalFactor);\n      }\n\n      if (mpars.map) {\n        uniforms['tDiffuse'].value = mpars.map;\n        uniforms['enableDiffuse'].value = true;\n      }\n\n      if (mpars.specularMap) {\n        uniforms['tSpecular'].value = mpars.specularMap;\n        uniforms['enableSpecular'].value = true;\n      }\n\n      if (mpars.lightMap) {\n        uniforms['tAO'].value = mpars.lightMap;\n        uniforms['enableAO'].value = true;\n      } // for the moment don't handle displacement texture\n\n\n      uniforms['diffuse'].value.setHex(mpars.color);\n      uniforms['specular'].value.setHex(mpars.specular);\n      uniforms['ambient'].value.setHex(mpars.ambient);\n      uniforms['shininess'].value = mpars.shininess;\n\n      if (mpars.opacity !== undefined) {\n        uniforms['opacity'].value = mpars.opacity;\n      }\n\n      var parameters = {\n        fragmentShader: shader.fragmentShader,\n        vertexShader: shader.vertexShader,\n        uniforms: uniforms,\n        lights: true,\n        fog: true\n      };\n      var material = new THREE.ShaderMaterial(parameters);\n\n      if (mpars.transparent) {\n        material.transparent = true;\n      }\n    } else {\n      var material = new THREE[mtype](mpars);\n    }\n\n    if (m.DbgName !== undefined) material.name = m.DbgName;\n    return material;\n  }\n};\nTHREE.Loader.Handlers = {\n  handlers: [],\n  add: function (regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function (file) {\n    for (var i = 0, l = this.handlers.length; i < l; i += 2) {\n      var regex = this.handlers[i];\n      var loader = this.handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n}; // File:src/loaders/XHRLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.XHRLoader = function (manager) {\n  this.cache = new THREE.Cache();\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.XHRLoader.prototype = {\n  constructor: THREE.XHRLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var cached = scope.cache.get(url);\n\n    if (cached !== undefined) {\n      if (onLoad) onLoad(cached);\n      return;\n    }\n\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n      scope.cache.add(url, this.response);\n      if (onLoad) onLoad(this.response);\n      scope.manager.itemEnd(url);\n    }, false);\n\n    if (onProgress !== undefined) {\n      request.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    if (onError !== undefined) {\n      request.addEventListener('error', function (event) {\n        onError(event);\n      }, false);\n    }\n\n    if (this.crossOrigin !== undefined) request.crossOrigin = this.crossOrigin;\n    if (this.responseType !== undefined) request.responseType = this.responseType;\n    request.send(null);\n    scope.manager.itemStart(url);\n  },\n  setResponseType: function (value) {\n    this.responseType = value;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/ImageLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ImageLoader = function (manager) {\n  this.cache = new THREE.Cache();\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.ImageLoader.prototype = {\n  constructor: THREE.ImageLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var cached = scope.cache.get(url);\n\n    if (cached !== undefined) {\n      onLoad(cached);\n      return;\n    }\n\n    var image = document.createElement('img');\n\n    if (onLoad !== undefined) {\n      image.addEventListener('load', function (event) {\n        scope.cache.add(url, this);\n        onLoad(this);\n        scope.manager.itemEnd(url);\n      }, false);\n    }\n\n    if (onProgress !== undefined) {\n      image.addEventListener('progress', function (event) {\n        onProgress(event);\n      }, false);\n    }\n\n    if (onError !== undefined) {\n      image.addEventListener('error', function (event) {\n        onError(event);\n      }, false);\n    }\n\n    if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    image.src = url;\n    scope.manager.itemStart(url);\n    return image;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/JSONLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.JSONLoader = function (showStatus) {\n  THREE.Loader.call(this, showStatus);\n  this.withCredentials = false;\n};\n\nTHREE.JSONLoader.prototype = Object.create(THREE.Loader.prototype);\n\nTHREE.JSONLoader.prototype.load = function (url, callback, texturePath) {\n  var scope = this; // todo: unify load API to for easier SceneLoader use\n\n  texturePath = texturePath && typeof texturePath === 'string' ? texturePath : this.extractUrlBase(url);\n  this.onLoadStart();\n  this.loadAjaxJSON(this, url, callback, texturePath);\n};\n\nTHREE.JSONLoader.prototype.loadAjaxJSON = function (context, url, callback, texturePath, callbackProgress) {\n  var xhr = new XMLHttpRequest();\n  var length = 0;\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === xhr.DONE) {\n      if (xhr.status === 200 || xhr.status === 0) {\n        if (xhr.responseText) {\n          var json = JSON.parse(xhr.responseText);\n\n          if (json.metadata !== undefined && json.metadata.type === 'scene') {\n            console.error('THREE.JSONLoader: \"' + url + '\" seems to be a Scene. Use THREE.SceneLoader instead.');\n            return;\n          }\n\n          var result = context.parse(json, texturePath);\n          callback(result.geometry, result.materials);\n        } else {\n          console.error('THREE.JSONLoader: \"' + url + '\" seems to be unreachable or the file is empty.');\n        } // in context of more complex asset initialization\n        // do not block on single failed file\n        // maybe should go even one more level up\n\n\n        context.onLoadComplete();\n      } else {\n        console.error('THREE.JSONLoader: Couldn\\'t load \"' + url + '\" (' + xhr.status + ')');\n      }\n    } else if (xhr.readyState === xhr.LOADING) {\n      if (callbackProgress) {\n        if (length === 0) {\n          length = xhr.getResponseHeader('Content-Length');\n        }\n\n        callbackProgress({\n          total: length,\n          loaded: xhr.responseText.length\n        });\n      }\n    } else if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n      if (callbackProgress !== undefined) {\n        length = xhr.getResponseHeader('Content-Length');\n      }\n    }\n  };\n\n  xhr.open('GET', url, true);\n  xhr.withCredentials = this.withCredentials;\n  xhr.send(null);\n};\n\nTHREE.JSONLoader.prototype.parse = function (json, texturePath) {\n  var scope = this,\n      geometry = new THREE.Geometry(),\n      scale = json.scale !== undefined ? 1.0 / json.scale : 1.0;\n  parseModel(scale);\n  parseSkin();\n  parseMorphing(scale);\n  geometry.computeFaceNormals();\n  geometry.computeBoundingSphere();\n\n  function parseModel(scale) {\n    function isBitSet(value, position) {\n      return value & 1 << position;\n    }\n\n    var i,\n        j,\n        fi,\n        offset,\n        zLength,\n        colorIndex,\n        normalIndex,\n        uvIndex,\n        materialIndex,\n        type,\n        isQuad,\n        hasMaterial,\n        hasFaceVertexUv,\n        hasFaceNormal,\n        hasFaceVertexNormal,\n        hasFaceColor,\n        hasFaceVertexColor,\n        vertex,\n        face,\n        faceA,\n        faceB,\n        color,\n        hex,\n        normal,\n        uvLayer,\n        uv,\n        u,\n        v,\n        faces = json.faces,\n        vertices = json.vertices,\n        normals = json.normals,\n        colors = json.colors,\n        nUvLayers = 0;\n\n    if (json.uvs !== undefined) {\n      // disregard empty arrays\n      for (i = 0; i < json.uvs.length; i++) {\n        if (json.uvs[i].length) nUvLayers++;\n      }\n\n      for (i = 0; i < nUvLayers; i++) {\n        geometry.faceVertexUvs[i] = [];\n      }\n    }\n\n    offset = 0;\n    zLength = vertices.length;\n\n    while (offset < zLength) {\n      vertex = new THREE.Vector3();\n      vertex.x = vertices[offset++] * scale;\n      vertex.y = vertices[offset++] * scale;\n      vertex.z = vertices[offset++] * scale;\n      geometry.vertices.push(vertex);\n    }\n\n    offset = 0;\n    zLength = faces.length;\n\n    while (offset < zLength) {\n      type = faces[offset++];\n      isQuad = isBitSet(type, 0);\n      hasMaterial = isBitSet(type, 1);\n      hasFaceVertexUv = isBitSet(type, 3);\n      hasFaceNormal = isBitSet(type, 4);\n      hasFaceVertexNormal = isBitSet(type, 5);\n      hasFaceColor = isBitSet(type, 6);\n      hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n      if (isQuad) {\n        faceA = new THREE.Face3();\n        faceA.a = faces[offset];\n        faceA.b = faces[offset + 1];\n        faceA.c = faces[offset + 3];\n        faceB = new THREE.Face3();\n        faceB.a = faces[offset + 1];\n        faceB.b = faces[offset + 2];\n        faceB.c = faces[offset + 3];\n        offset += 4;\n\n        if (hasMaterial) {\n          materialIndex = faces[offset++];\n          faceA.materialIndex = materialIndex;\n          faceB.materialIndex = materialIndex;\n        } // to get face <=> uv index correspondence\n\n\n        fi = geometry.faces.length;\n\n        if (hasFaceVertexUv) {\n          for (i = 0; i < nUvLayers; i++) {\n            uvLayer = json.uvs[i];\n            geometry.faceVertexUvs[i][fi] = [];\n            geometry.faceVertexUvs[i][fi + 1] = [];\n\n            for (j = 0; j < 4; j++) {\n              uvIndex = faces[offset++];\n              u = uvLayer[uvIndex * 2];\n              v = uvLayer[uvIndex * 2 + 1];\n              uv = new THREE.Vector2(u, v);\n              if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n              if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n            }\n          }\n        }\n\n        if (hasFaceNormal) {\n          normalIndex = faces[offset++] * 3;\n          faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          faceB.normal.copy(faceA.normal);\n        }\n\n        if (hasFaceVertexNormal) {\n          for (i = 0; i < 4; i++) {\n            normalIndex = faces[offset++] * 3;\n            normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            if (i !== 2) faceA.vertexNormals.push(normal);\n            if (i !== 0) faceB.vertexNormals.push(normal);\n          }\n        }\n\n        if (hasFaceColor) {\n          colorIndex = faces[offset++];\n          hex = colors[colorIndex];\n          faceA.color.setHex(hex);\n          faceB.color.setHex(hex);\n        }\n\n        if (hasFaceVertexColor) {\n          for (i = 0; i < 4; i++) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            if (i !== 2) faceA.vertexColors.push(new THREE.Color(hex));\n            if (i !== 0) faceB.vertexColors.push(new THREE.Color(hex));\n          }\n        }\n\n        geometry.faces.push(faceA);\n        geometry.faces.push(faceB);\n      } else {\n        face = new THREE.Face3();\n        face.a = faces[offset++];\n        face.b = faces[offset++];\n        face.c = faces[offset++];\n\n        if (hasMaterial) {\n          materialIndex = faces[offset++];\n          face.materialIndex = materialIndex;\n        } // to get face <=> uv index correspondence\n\n\n        fi = geometry.faces.length;\n\n        if (hasFaceVertexUv) {\n          for (i = 0; i < nUvLayers; i++) {\n            uvLayer = json.uvs[i];\n            geometry.faceVertexUvs[i][fi] = [];\n\n            for (j = 0; j < 3; j++) {\n              uvIndex = faces[offset++];\n              u = uvLayer[uvIndex * 2];\n              v = uvLayer[uvIndex * 2 + 1];\n              uv = new THREE.Vector2(u, v);\n              geometry.faceVertexUvs[i][fi].push(uv);\n            }\n          }\n        }\n\n        if (hasFaceNormal) {\n          normalIndex = faces[offset++] * 3;\n          face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n        }\n\n        if (hasFaceVertexNormal) {\n          for (i = 0; i < 3; i++) {\n            normalIndex = faces[offset++] * 3;\n            normal = new THREE.Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            face.vertexNormals.push(normal);\n          }\n        }\n\n        if (hasFaceColor) {\n          colorIndex = faces[offset++];\n          face.color.setHex(colors[colorIndex]);\n        }\n\n        if (hasFaceVertexColor) {\n          for (i = 0; i < 3; i++) {\n            colorIndex = faces[offset++];\n            face.vertexColors.push(new THREE.Color(colors[colorIndex]));\n          }\n        }\n\n        geometry.faces.push(face);\n      }\n    }\n  }\n\n  ;\n\n  function parseSkin() {\n    var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n    if (json.skinWeights) {\n      for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n        var x = json.skinWeights[i];\n        var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n        var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n        var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n        geometry.skinWeights.push(new THREE.Vector4(x, y, z, w));\n      }\n    }\n\n    if (json.skinIndices) {\n      for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n        var a = json.skinIndices[i];\n        var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n        var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n        var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n        geometry.skinIndices.push(new THREE.Vector4(a, b, c, d));\n      }\n    }\n\n    geometry.bones = json.bones;\n\n    if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n      console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n    } // could change this to json.animations[0] or remove completely\n\n\n    geometry.animation = json.animation;\n    geometry.animations = json.animations;\n  }\n\n  ;\n\n  function parseMorphing(scale) {\n    if (json.morphTargets !== undefined) {\n      var i, l, v, vl, dstVertices, srcVertices;\n\n      for (i = 0, l = json.morphTargets.length; i < l; i++) {\n        geometry.morphTargets[i] = {};\n        geometry.morphTargets[i].name = json.morphTargets[i].name;\n        geometry.morphTargets[i].vertices = [];\n        dstVertices = geometry.morphTargets[i].vertices;\n        srcVertices = json.morphTargets[i].vertices;\n\n        for (v = 0, vl = srcVertices.length; v < vl; v += 3) {\n          var vertex = new THREE.Vector3();\n          vertex.x = srcVertices[v] * scale;\n          vertex.y = srcVertices[v + 1] * scale;\n          vertex.z = srcVertices[v + 2] * scale;\n          dstVertices.push(vertex);\n        }\n      }\n    }\n\n    if (json.morphColors !== undefined) {\n      var i, l, c, cl, dstColors, srcColors, color;\n\n      for (i = 0, l = json.morphColors.length; i < l; i++) {\n        geometry.morphColors[i] = {};\n        geometry.morphColors[i].name = json.morphColors[i].name;\n        geometry.morphColors[i].colors = [];\n        dstColors = geometry.morphColors[i].colors;\n        srcColors = json.morphColors[i].colors;\n\n        for (c = 0, cl = srcColors.length; c < cl; c += 3) {\n          color = new THREE.Color(0xffaa00);\n          color.setRGB(srcColors[c], srcColors[c + 1], srcColors[c + 2]);\n          dstColors.push(color);\n        }\n      }\n    }\n  }\n\n  ;\n\n  if (json.materials === undefined || json.materials.length === 0) {\n    return {\n      geometry: geometry\n    };\n  } else {\n    var materials = this.initMaterials(json.materials, texturePath);\n\n    if (this.needsTangents(materials)) {\n      geometry.computeTangents();\n    }\n\n    return {\n      geometry: geometry,\n      materials: materials\n    };\n  }\n}; // File:src/loaders/LoadingManager.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.LoadingManager = function (onLoad, onProgress, onError) {\n  var scope = this;\n  var loaded = 0,\n      total = 0;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    total++;\n  };\n\n  this.itemEnd = function (url) {\n    loaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, loaded, total);\n    }\n\n    if (loaded === total && scope.onLoad !== undefined) {\n      scope.onLoad();\n    }\n  };\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager(); // File:src/loaders/BufferGeometryLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometryLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n  constructor: THREE.BufferGeometryLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json) {\n    var geometry = new THREE.BufferGeometry();\n    var attributes = json.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new self[attribute.type](attribute.array);\n      geometry.addAttribute(key, new THREE.BufferAttribute(typedArray, attribute.itemSize));\n    }\n\n    var offsets = json.offsets;\n\n    if (offsets !== undefined) {\n      geometry.offsets = JSON.parse(JSON.stringify(offsets));\n    }\n\n    var boundingSphere = json.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new THREE.Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new THREE.Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n}; // File:src/loaders/MaterialLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MaterialLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.MaterialLoader.prototype = {\n  constructor: THREE.MaterialLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json) {\n    var material = new THREE[json.type]();\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.ambient !== undefined) material.ambient.setHex(json.ambient);\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.shading !== undefined) material.shading = json.shading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\n    if (json.materials !== undefined) {\n      for (var i = 0, l = json.materials.length; i < l; i++) {\n        material.materials.push(this.parse(json.materials[i]));\n      }\n    }\n\n    return material;\n  }\n}; // File:src/loaders/ObjectLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ObjectLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.ObjectLoader.prototype = {\n  constructor: THREE.ObjectLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  },\n  parse: function (json) {\n    var geometries = this.parseGeometries(json.geometries);\n    var materials = this.parseMaterials(json.materials);\n    var object = this.parseObject(json.object, geometries, materials);\n    return object;\n  },\n  parseGeometries: function (json) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new THREE.JSONLoader();\n      var bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n            geometry = new THREE.PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new THREE.BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n            geometry = new THREE.CircleGeometry(data.radius, data.segments);\n            break;\n\n          case 'CylinderGeometry':\n            geometry = new THREE.CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded);\n            break;\n\n          case 'SphereGeometry':\n            geometry = new THREE.SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'IcosahedronGeometry':\n            geometry = new THREE.IcosahedronGeometry(data.radius, data.detail);\n            break;\n\n          case 'TorusGeometry':\n            geometry = new THREE.TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n            geometry = new THREE.TorusKnotGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.p, data.q, data.heightScale);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data.data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data.data).geometry;\n            break;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new THREE.MaterialLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n        var material = loader.parse(data);\n        material.uuid = data.uuid;\n        if (data.name !== undefined) material.name = data.name;\n        materials[data.uuid] = material;\n      }\n    }\n\n    return materials;\n  },\n  parseObject: function () {\n    var matrix = new THREE.Matrix4();\n    return function (data, geometries, materials) {\n      var object;\n\n      switch (data.type) {\n        case 'Scene':\n          object = new THREE.Scene();\n          break;\n\n        case 'PerspectiveCamera':\n          object = new THREE.PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          break;\n\n        case 'OrthographicCamera':\n          object = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          break;\n\n        case 'AmbientLight':\n          object = new THREE.AmbientLight(data.color);\n          break;\n\n        case 'DirectionalLight':\n          object = new THREE.DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new THREE.PointLight(data.color, data.intensity, data.distance);\n          break;\n\n        case 'SpotLight':\n          object = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.exponent);\n          break;\n\n        case 'HemisphereLight':\n          object = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'Mesh':\n          var geometry = geometries[data.geometry];\n          var material = materials[data.material];\n\n          if (geometry === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined geometry', data.geometry);\n          }\n\n          if (material === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', data.material);\n          }\n\n          object = new THREE.Mesh(geometry, material);\n          break;\n\n        case 'Line':\n          var geometry = geometries[data.geometry];\n          var material = materials[data.material];\n\n          if (geometry === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined geometry', data.geometry);\n          }\n\n          if (material === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', data.material);\n          }\n\n          object = new THREE.Line(geometry, material);\n          break;\n\n        case 'Sprite':\n          var material = materials[data.material];\n\n          if (material === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', data.material);\n          }\n\n          object = new THREE.Sprite(material);\n          break;\n\n        case 'Group':\n          object = new THREE.Group();\n          break;\n\n        default:\n          object = new THREE.Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        matrix.fromArray(data.matrix);\n        matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.userData !== undefined) object.userData = data.userData;\n\n      if (data.children !== undefined) {\n        for (var child in data.children) {\n          object.add(this.parseObject(data.children[child], geometries, materials));\n        }\n      }\n\n      return object;\n    };\n  }()\n}; // File:src/loaders/TextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.TextureLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.TextureLoader.prototype = {\n  constructor: THREE.TextureLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.ImageLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.load(url, function (image) {\n      var texture = new THREE.Texture(image);\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n  }\n}; // File:src/loaders/CompressedTextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nTHREE.CompressedTextureLoader = function () {\n  // override in sub classes\n  this._parser = null;\n};\n\nTHREE.CompressedTextureLoader.prototype = {\n  constructor: THREE.CompressedTextureLoader,\n  load: function (url, onLoad, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new THREE.CompressedTexture();\n    texture.image = images;\n    var loader = new THREE.XHRLoader();\n    loader.setResponseType('arraybuffer');\n\n    if (url instanceof Array) {\n      var loaded = 0;\n\n      var loadTexture = function (i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount == 1) texture.minFilter = THREE.LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        });\n      };\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = THREE.LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      });\n    }\n\n    return texture;\n  }\n}; // File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n  Object.defineProperty(this, 'id', {\n    value: THREE.MaterialIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.side = THREE.FrontSide;\n  this.opacity = 1;\n  this.transparent = false;\n  this.blending = THREE.NormalBlending;\n  this.blendSrc = THREE.SrcAlphaFactor;\n  this.blendDst = THREE.OneMinusSrcAlphaFactor;\n  this.blendEquation = THREE.AddEquation;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.alphaTest = 0;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this.needsUpdate = true;\n};\n\nTHREE.Material.prototype = {\n  constructor: THREE.Material,\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      if (key in this) {\n        var currentValue = this[key];\n\n        if (currentValue instanceof THREE.Color) {\n          currentValue.set(newValue);\n        } else if (currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3) {\n          currentValue.copy(newValue);\n        } else if (key == 'overdraw') {\n          // ensure overdraw is backwards-compatable with legacy boolean type\n          this[key] = Number(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    }\n  },\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type\n    };\n    if (this.name !== \"\") output.name = this.name;\n\n    if (this instanceof THREE.MeshBasicMaterial) {\n      output.color = this.color.getHex();\n      if (this.vertexColors !== THREE.NoColors) output.vertexColors = this.vertexColors;\n      if (this.blending !== THREE.NormalBlending) output.blending = this.blending;\n      if (this.side !== THREE.FrontSide) output.side = this.side;\n    } else if (this instanceof THREE.MeshLambertMaterial) {\n      output.color = this.color.getHex();\n      output.ambient = this.ambient.getHex();\n      output.emissive = this.emissive.getHex();\n      if (this.vertexColors !== THREE.NoColors) output.vertexColors = this.vertexColors;\n      if (this.blending !== THREE.NormalBlending) output.blending = this.blending;\n      if (this.side !== THREE.FrontSide) output.side = this.side;\n    } else if (this instanceof THREE.MeshPhongMaterial) {\n      output.color = this.color.getHex();\n      output.ambient = this.ambient.getHex();\n      output.emissive = this.emissive.getHex();\n      output.specular = this.specular.getHex();\n      output.shininess = this.shininess;\n      if (this.vertexColors !== THREE.NoColors) output.vertexColors = this.vertexColors;\n      if (this.blending !== THREE.NormalBlending) output.blending = this.blending;\n      if (this.side !== THREE.FrontSide) output.side = this.side;\n    } else if (this instanceof THREE.MeshNormalMaterial) {\n      if (this.shading !== THREE.FlatShading) output.shading = this.shading;\n      if (this.blending !== THREE.NormalBlending) output.blending = this.blending;\n      if (this.side !== THREE.FrontSide) output.side = this.side;\n    } else if (this instanceof THREE.MeshDepthMaterial) {\n      if (this.blending !== THREE.NormalBlending) output.blending = this.blending;\n      if (this.side !== THREE.FrontSide) output.side = this.side;\n    } else if (this instanceof THREE.ShaderMaterial) {\n      output.uniforms = this.uniforms;\n      output.vertexShader = this.vertexShader;\n      output.fragmentShader = this.fragmentShader;\n    } else if (this instanceof THREE.SpriteMaterial) {\n      output.color = this.color.getHex();\n    }\n\n    if (this.opacity < 1) output.opacity = this.opacity;\n    if (this.transparent !== false) output.transparent = this.transparent;\n    if (this.wireframe !== false) output.wireframe = this.wireframe;\n    return output;\n  },\n  clone: function (material) {\n    if (material === undefined) material = new THREE.Material();\n    material.name = this.name;\n    material.side = this.side;\n    material.opacity = this.opacity;\n    material.transparent = this.transparent;\n    material.blending = this.blending;\n    material.blendSrc = this.blendSrc;\n    material.blendDst = this.blendDst;\n    material.blendEquation = this.blendEquation;\n    material.depthTest = this.depthTest;\n    material.depthWrite = this.depthWrite;\n    material.polygonOffset = this.polygonOffset;\n    material.polygonOffsetFactor = this.polygonOffsetFactor;\n    material.polygonOffsetUnits = this.polygonOffsetUnits;\n    material.alphaTest = this.alphaTest;\n    material.overdraw = this.overdraw;\n    material.visible = this.visible;\n    return material;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Material.prototype);\nTHREE.MaterialIdCount = 0; // File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.LineBasicMaterial.prototype.clone = function () {\n  var material = new THREE.LineBasicMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.linewidth = this.linewidth;\n  material.linecap = this.linecap;\n  material.linejoin = this.linejoin;\n  material.vertexColors = this.vertexColors;\n  material.fog = this.fog;\n  return material;\n}; // File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.LineDashedMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'LineDashedMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.linewidth = 1;\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.vertexColors = false;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.LineDashedMaterial.prototype.clone = function () {\n  var material = new THREE.LineDashedMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.linewidth = this.linewidth;\n  material.scale = this.scale;\n  material.dashSize = this.dashSize;\n  material.gapSize = this.gapSize;\n  material.vertexColors = this.vertexColors;\n  material.fog = this.fog;\n  return material;\n}; // File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.MeshBasicMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new THREE.Color(0xffffff); // emissive\n\n  this.map = null;\n  this.lightMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.MeshBasicMaterial.prototype.clone = function () {\n  var material = new THREE.MeshBasicMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.map = this.map;\n  material.lightMap = this.lightMap;\n  material.specularMap = this.specularMap;\n  material.alphaMap = this.alphaMap;\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n  material.fog = this.fog;\n  material.shading = this.shading;\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n  material.vertexColors = this.vertexColors;\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  return material;\n}; // File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshLambertMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.ambient = new THREE.Color(0xffffff);\n  this.emissive = new THREE.Color(0x000000);\n  this.wrapAround = false;\n  this.wrapRGB = new THREE.Vector3(1, 1, 1);\n  this.map = null;\n  this.lightMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.MeshLambertMaterial.prototype.clone = function () {\n  var material = new THREE.MeshLambertMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.ambient.copy(this.ambient);\n  material.emissive.copy(this.emissive);\n  material.wrapAround = this.wrapAround;\n  material.wrapRGB.copy(this.wrapRGB);\n  material.map = this.map;\n  material.lightMap = this.lightMap;\n  material.specularMap = this.specularMap;\n  material.alphaMap = this.alphaMap;\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n  material.fog = this.fog;\n  material.shading = this.shading;\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n  material.vertexColors = this.vertexColors;\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n  return material;\n}; // File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.MeshPhongMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new THREE.Color(0xffffff); // diffuse\n\n  this.ambient = new THREE.Color(0xffffff);\n  this.emissive = new THREE.Color(0x000000);\n  this.specular = new THREE.Color(0x111111);\n  this.shininess = 30;\n  this.metal = false;\n  this.wrapAround = false;\n  this.wrapRGB = new THREE.Vector3(1, 1, 1);\n  this.map = null;\n  this.lightMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalScale = new THREE.Vector2(1, 1);\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = THREE.MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.fog = true;\n  this.shading = THREE.SmoothShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.vertexColors = THREE.NoColors;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.MeshPhongMaterial.prototype.clone = function () {\n  var material = new THREE.MeshPhongMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.ambient.copy(this.ambient);\n  material.emissive.copy(this.emissive);\n  material.specular.copy(this.specular);\n  material.shininess = this.shininess;\n  material.metal = this.metal;\n  material.wrapAround = this.wrapAround;\n  material.wrapRGB.copy(this.wrapRGB);\n  material.map = this.map;\n  material.lightMap = this.lightMap;\n  material.bumpMap = this.bumpMap;\n  material.bumpScale = this.bumpScale;\n  material.normalMap = this.normalMap;\n  material.normalScale.copy(this.normalScale);\n  material.specularMap = this.specularMap;\n  material.alphaMap = this.alphaMap;\n  material.envMap = this.envMap;\n  material.combine = this.combine;\n  material.reflectivity = this.reflectivity;\n  material.refractionRatio = this.refractionRatio;\n  material.fog = this.fog;\n  material.shading = this.shading;\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.wireframeLinecap = this.wireframeLinecap;\n  material.wireframeLinejoin = this.wireframeLinejoin;\n  material.vertexColors = this.vertexColors;\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n  return material;\n}; // File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshDepthMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.morphTargets = false;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.setValues(parameters);\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.MeshDepthMaterial.prototype.clone = function () {\n  var material = new THREE.MeshDepthMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  return material;\n}; // File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  shading: THREE.FlatShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nTHREE.MeshNormalMaterial = function (parameters) {\n  THREE.Material.call(this, parameters);\n  this.type = 'MeshNormalMaterial';\n  this.shading = THREE.FlatShading;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.morphTargets = false;\n  this.setValues(parameters);\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.MeshNormalMaterial.prototype.clone = function () {\n  var material = new THREE.MeshNormalMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.shading = this.shading;\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  return material;\n}; // File:src/materials/MeshFaceMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.MeshFaceMaterial = function (materials) {\n  this.uuid = THREE.Math.generateUUID();\n  this.type = 'MeshFaceMaterial';\n  this.materials = materials instanceof Array ? materials : [];\n};\n\nTHREE.MeshFaceMaterial.prototype = {\n  constructor: THREE.MeshFaceMaterial,\n  toJSON: function () {\n    var output = {\n      metadata: {\n        version: 4.2,\n        type: 'material',\n        generator: 'MaterialExporter'\n      },\n      uuid: this.uuid,\n      type: this.type,\n      materials: []\n    };\n\n    for (var i = 0, l = this.materials.length; i < l; i++) {\n      output.materials.push(this.materials[i].toJSON());\n    }\n\n    return output;\n  },\n  clone: function () {\n    var material = new THREE.MeshFaceMaterial();\n\n    for (var i = 0; i < this.materials.length; i++) {\n      material.materials.push(this.materials[i].clone());\n    }\n\n    return material;\n  }\n}; // File:src/materials/PointCloudMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.PointCloudMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'PointCloudMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.vertexColors = THREE.NoColors;\n  this.fog = true;\n  this.setValues(parameters);\n};\n\nTHREE.PointCloudMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.PointCloudMaterial.prototype.clone = function () {\n  var material = new THREE.PointCloudMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.map = this.map;\n  material.size = this.size;\n  material.sizeAttenuation = this.sizeAttenuation;\n  material.vertexColors = this.vertexColors;\n  material.fog = this.fog;\n  return material;\n}; // backwards compatibility\n\n\nTHREE.ParticleBasicMaterial = function (parameters) {\n  console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.');\n  return new THREE.PointCloudMaterial(parameters);\n};\n\nTHREE.ParticleSystemMaterial = function (parameters) {\n  console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.');\n  return new THREE.PointCloudMaterial(parameters);\n}; // File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\n\nTHREE.ShaderMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.attributes = null;\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.shading = THREE.SmoothShading;\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n  // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n  this.setValues(parameters);\n};\n\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.ShaderMaterial.prototype.clone = function () {\n  var material = new THREE.ShaderMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.fragmentShader = this.fragmentShader;\n  material.vertexShader = this.vertexShader;\n  material.uniforms = THREE.UniformsUtils.clone(this.uniforms);\n  material.attributes = this.attributes;\n  material.defines = this.defines;\n  material.shading = this.shading;\n  material.wireframe = this.wireframe;\n  material.wireframeLinewidth = this.wireframeLinewidth;\n  material.fog = this.fog;\n  material.lights = this.lights;\n  material.vertexColors = this.vertexColors;\n  material.skinning = this.skinning;\n  material.morphTargets = this.morphTargets;\n  material.morphNormals = this.morphNormals;\n  return material;\n}; // File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.RawShaderMaterial = function (parameters) {\n  THREE.ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\n\nTHREE.RawShaderMaterial.prototype.clone = function () {\n  var material = new THREE.RawShaderMaterial();\n  THREE.ShaderMaterial.prototype.clone.call(this, material);\n  return material;\n}; // File:src/materials/SpriteMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2(),\n *\n *  fog: <bool>\n * }\n */\n\n\nTHREE.SpriteMaterial = function (parameters) {\n  THREE.Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new THREE.Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false; // set parameters\n\n  this.setValues(parameters);\n};\n\nTHREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\n\nTHREE.SpriteMaterial.prototype.clone = function () {\n  var material = new THREE.SpriteMaterial();\n  THREE.Material.prototype.clone.call(this, material);\n  material.color.copy(this.color);\n  material.map = this.map;\n  material.rotation = this.rotation;\n  material.fog = this.fog;\n  return material;\n}; // File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\n\nTHREE.Texture = function (image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Object.defineProperty(this, 'id', {\n    value: THREE.TextureIdCount++\n  });\n  this.uuid = THREE.Math.generateUUID();\n  this.name = '';\n  this.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : THREE.RGBAFormat;\n  this.type = type !== undefined ? type : THREE.UnsignedByteType;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n  this._needsUpdate = false;\n  this.onUpdate = null;\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = new THREE.UVMapping();\nTHREE.Texture.prototype = {\n  constructor: THREE.Texture,\n\n  get needsUpdate() {\n    return this._needsUpdate;\n  },\n\n  set needsUpdate(value) {\n    if (value === true) this.update();\n    this._needsUpdate = value;\n  },\n\n  clone: function (texture) {\n    if (texture === undefined) texture = new THREE.Texture();\n    texture.image = this.image;\n    texture.mipmaps = this.mipmaps.slice(0);\n    texture.mapping = this.mapping;\n    texture.wrapS = this.wrapS;\n    texture.wrapT = this.wrapT;\n    texture.magFilter = this.magFilter;\n    texture.minFilter = this.minFilter;\n    texture.anisotropy = this.anisotropy;\n    texture.format = this.format;\n    texture.type = this.type;\n    texture.offset.copy(this.offset);\n    texture.repeat.copy(this.repeat);\n    texture.generateMipmaps = this.generateMipmaps;\n    texture.premultiplyAlpha = this.premultiplyAlpha;\n    texture.flipY = this.flipY;\n    texture.unpackAlignment = this.unpackAlignment;\n    return texture;\n  },\n  update: function () {\n    this.dispatchEvent({\n      type: 'update'\n    });\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);\nTHREE.TextureIdCount = 0; // File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function (images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.images = images;\n};\n\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\n\nTHREE.CubeTexture.clone = function (texture) {\n  if (texture === undefined) texture = new THREE.CubeTexture();\n  THREE.Texture.prototype.clone.call(this, texture);\n  texture.images = this.images;\n  return texture;\n}; // File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n};\n\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\n\nTHREE.CompressedTexture.prototype.clone = function () {\n  var texture = new THREE.CompressedTexture();\n  THREE.Texture.prototype.clone.call(this, texture);\n  return texture;\n}; // File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.DataTexture = function (data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {\n  THREE.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n};\n\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\n\nTHREE.DataTexture.prototype.clone = function () {\n  var texture = new THREE.DataTexture();\n  THREE.Texture.prototype.clone.call(this, texture);\n  return texture;\n}; // File:src/textures/VideoTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.VideoTexture = function (video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  THREE.Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n  var scope = this;\n\n  var update = function () {\n    requestAnimationFrame(update);\n\n    if (video.readyState === video.HAVE_ENOUGH_DATA) {\n      scope.needsUpdate = true;\n    }\n  };\n\n  update();\n};\n\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype); // File:src/objects/Group.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Group = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Group';\n};\n\nTHREE.Group.prototype = Object.create(THREE.Object3D.prototype); // File:src/objects/PointCloud.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.PointCloud = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'PointCloud';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.PointCloudMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.sortParticles = false;\n};\n\nTHREE.PointCloud.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.PointCloud.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  return function (raycaster, intersects) {\n    var object = this;\n    var geometry = object.geometry;\n    var threshold = raycaster.params.PointCloud.threshold;\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n\n    if (geometry.boundingBox !== null) {\n      if (ray.isIntersectionBox(geometry.boundingBox) === false) {\n        return;\n      }\n    }\n\n    var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    var position = new THREE.Vector3();\n\n    var testPoint = function (point, index) {\n      var rayPointDistance = ray.distanceToPoint(point);\n\n      if (rayPointDistance < localThreshold) {\n        var intersectPoint = ray.closestPointToPoint(point);\n        intersectPoint.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        intersects.push({\n          distance: distance,\n          distanceToRay: rayPointDistance,\n          point: intersectPoint.clone(),\n          index: index,\n          face: null,\n          object: object\n        });\n      }\n    };\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n\n      if (attributes.index !== undefined) {\n        var indices = attributes.index.array;\n        var offsets = geometry.offsets;\n\n        if (offsets.length === 0) {\n          var offset = {\n            start: 0,\n            count: indices.length,\n            index: 0\n          };\n          offsets = [offset];\n        }\n\n        for (var oi = 0, ol = offsets.length; oi < ol; ++oi) {\n          var start = offsets[oi].start;\n          var count = offsets[oi].count;\n          var index = offsets[oi].index;\n\n          for (var i = start, il = start + count; i < il; i++) {\n            var a = index + indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        }\n      } else {\n        var pointCount = positions.length / 3;\n\n        for (var i = 0; i < pointCount; i++) {\n          position.set(positions[3 * i], positions[3 * i + 1], positions[3 * i + 2]);\n          testPoint(position, i);\n        }\n      }\n    } else {\n      var vertices = this.geometry.vertices;\n\n      for (var i = 0; i < vertices.length; i++) {\n        testPoint(vertices[i], i);\n      }\n    }\n  };\n}();\n\nTHREE.PointCloud.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.PointCloud(this.geometry, this.material);\n  object.sortParticles = this.sortParticles;\n  THREE.Object3D.prototype.clone.call(this, object);\n  return object;\n}; // Backwards compatibility\n\n\nTHREE.ParticleSystem = function (geometry, material) {\n  console.warn('THREE.ParticleSystem has been renamed to THREE.PointCloud.');\n  return new THREE.PointCloud(geometry, material);\n}; // File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Line = function (geometry, material, mode) {\n  THREE.Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.mode = mode !== undefined ? mode : THREE.LineStrip;\n};\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1;\nTHREE.Line.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Line.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  return function (raycaster, intersects) {\n    var precision = raycaster.linePrecision;\n    var precisionSq = precision * precision;\n    var geometry = this.geometry;\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere(); // Checking boundingSphere distance to ray\n\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(this.matrixWorld);\n\n    if (raycaster.ray.isIntersectionSphere(sphere) === false) {\n      return;\n    }\n\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n    /* if ( geometry instanceof THREE.BufferGeometry ) {\n    \t} else */\n\n    if (geometry instanceof THREE.Geometry) {\n      var vertices = geometry.vertices;\n      var nbVertices = vertices.length;\n      var interSegment = new THREE.Vector3();\n      var interRay = new THREE.Vector3();\n      var step = this.mode === THREE.LineStrip ? 1 : 2;\n\n      for (var i = 0; i < nbVertices - 1; i = i + step) {\n        var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n        if (distSq > precisionSq) continue;\n        var distance = ray.origin.distanceTo(interRay);\n        if (distance < raycaster.near || distance > raycaster.far) continue;\n        intersects.push({\n          distance: distance,\n          // What do we want? intersection point on the ray or on the segment??\n          // point: raycaster.ray.at( distance ),\n          point: interSegment.clone().applyMatrix4(this.matrixWorld),\n          face: null,\n          faceIndex: null,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Line.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.Line(this.geometry, this.material, this.mode);\n  THREE.Object3D.prototype.clone.call(this, object);\n  return object;\n}; // File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\n\nTHREE.Mesh = function (geometry, material) {\n  THREE.Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n  this.material = material !== undefined ? material : new THREE.MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.updateMorphTargets();\n};\n\nTHREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n  if (this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0) {\n    this.morphTargetBase = -1;\n    this.morphTargetForcedOrder = [];\n    this.morphTargetInfluences = [];\n    this.morphTargetDictionary = {};\n\n    for (var m = 0, ml = this.geometry.morphTargets.length; m < ml; m++) {\n      this.morphTargetInfluences.push(0);\n      this.morphTargetDictionary[this.geometry.morphTargets[m].name] = m;\n    }\n  }\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function (name) {\n  if (this.morphTargetDictionary[name] !== undefined) {\n    return this.morphTargetDictionary[name];\n  }\n\n  console.log('THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.');\n  return 0;\n};\n\nTHREE.Mesh.prototype.raycast = function () {\n  var inverseMatrix = new THREE.Matrix4();\n  var ray = new THREE.Ray();\n  var sphere = new THREE.Sphere();\n  var vA = new THREE.Vector3();\n  var vB = new THREE.Vector3();\n  var vC = new THREE.Vector3();\n  return function (raycaster, intersects) {\n    var geometry = this.geometry; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n    sphere.copy(geometry.boundingSphere);\n    sphere.applyMatrix4(this.matrixWorld);\n\n    if (raycaster.ray.isIntersectionSphere(sphere) === false) {\n      return;\n    } // Check boundingBox before continuing\n\n\n    inverseMatrix.getInverse(this.matrixWorld);\n    ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n\n    if (geometry.boundingBox !== null) {\n      if (ray.isIntersectionBox(geometry.boundingBox) === false) {\n        return;\n      }\n    }\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      var material = this.material;\n      if (material === undefined) return;\n      var attributes = geometry.attributes;\n      var a, b, c;\n      var precision = raycaster.precision;\n\n      if (attributes.index !== undefined) {\n        var indices = attributes.index.array;\n        var positions = attributes.position.array;\n        var offsets = geometry.offsets;\n\n        if (offsets.length === 0) {\n          offsets = [{\n            start: 0,\n            count: indices.length,\n            index: 0\n          }];\n        }\n\n        for (var oi = 0, ol = offsets.length; oi < ol; ++oi) {\n          var start = offsets[oi].start;\n          var count = offsets[oi].count;\n          var index = offsets[oi].index;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            a = index + indices[i];\n            b = index + indices[i + 1];\n            c = index + indices[i + 2];\n            vA.fromArray(positions, a * 3);\n            vB.fromArray(positions, b * 3);\n            vC.fromArray(positions, c * 3);\n\n            if (material.side === THREE.BackSide) {\n              var intersectionPoint = ray.intersectTriangle(vC, vB, vA, true);\n            } else {\n              var intersectionPoint = ray.intersectTriangle(vA, vB, vC, material.side !== THREE.DoubleSide);\n            }\n\n            if (intersectionPoint === null) continue;\n            intersectionPoint.applyMatrix4(this.matrixWorld);\n            var distance = raycaster.ray.origin.distanceTo(intersectionPoint);\n            if (distance < precision || distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              point: intersectionPoint,\n              face: new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC)),\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else {\n        var positions = attributes.position.array;\n\n        for (var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9) {\n          a = i;\n          b = i + 1;\n          c = i + 2;\n          vA.fromArray(positions, j);\n          vB.fromArray(positions, j + 3);\n          vC.fromArray(positions, j + 6);\n\n          if (material.side === THREE.BackSide) {\n            var intersectionPoint = ray.intersectTriangle(vC, vB, vA, true);\n          } else {\n            var intersectionPoint = ray.intersectTriangle(vA, vB, vC, material.side !== THREE.DoubleSide);\n          }\n\n          if (intersectionPoint === null) continue;\n          intersectionPoint.applyMatrix4(this.matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectionPoint);\n          if (distance < precision || distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            point: intersectionPoint,\n            face: new THREE.Face3(a, b, c, THREE.Triangle.normal(vA, vB, vC)),\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    } else if (geometry instanceof THREE.Geometry) {\n      var isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\n      var objectMaterials = isFaceMaterial === true ? this.material.materials : null;\n      var a, b, c, d;\n      var precision = raycaster.precision;\n      var vertices = geometry.vertices;\n\n      for (var f = 0, fl = geometry.faces.length; f < fl; f++) {\n        var face = geometry.faces[f];\n        var material = isFaceMaterial === true ? objectMaterials[face.materialIndex] : this.material;\n        if (material === undefined) continue;\n        a = vertices[face.a];\n        b = vertices[face.b];\n        c = vertices[face.c];\n\n        if (material.morphTargets === true) {\n          var morphTargets = geometry.morphTargets;\n          var morphInfluences = this.morphTargetInfluences;\n          vA.set(0, 0, 0);\n          vB.set(0, 0, 0);\n          vC.set(0, 0, 0);\n\n          for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n            var influence = morphInfluences[t];\n            if (influence === 0) continue;\n            var targets = morphTargets[t].vertices;\n            vA.x += (targets[face.a].x - a.x) * influence;\n            vA.y += (targets[face.a].y - a.y) * influence;\n            vA.z += (targets[face.a].z - a.z) * influence;\n            vB.x += (targets[face.b].x - b.x) * influence;\n            vB.y += (targets[face.b].y - b.y) * influence;\n            vB.z += (targets[face.b].z - b.z) * influence;\n            vC.x += (targets[face.c].x - c.x) * influence;\n            vC.y += (targets[face.c].y - c.y) * influence;\n            vC.z += (targets[face.c].z - c.z) * influence;\n          }\n\n          vA.add(a);\n          vB.add(b);\n          vC.add(c);\n          a = vA;\n          b = vB;\n          c = vC;\n        }\n\n        if (material.side === THREE.BackSide) {\n          var intersectionPoint = ray.intersectTriangle(c, b, a, true);\n        } else {\n          var intersectionPoint = ray.intersectTriangle(a, b, c, material.side !== THREE.DoubleSide);\n        }\n\n        if (intersectionPoint === null) continue;\n        intersectionPoint.applyMatrix4(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPoint);\n        if (distance < precision || distance < raycaster.near || distance > raycaster.far) continue;\n        intersects.push({\n          distance: distance,\n          point: intersectionPoint,\n          face: face,\n          faceIndex: f,\n          object: this\n        });\n      }\n    }\n  };\n}();\n\nTHREE.Mesh.prototype.clone = function (object, recursive) {\n  if (object === undefined) object = new THREE.Mesh(this.geometry, this.material);\n  THREE.Object3D.prototype.clone.call(this, object, recursive);\n  return object;\n}; // File:src/objects/Bone.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\n\nTHREE.Bone = function (belongsToSkin) {\n  THREE.Object3D.call(this);\n  this.skin = belongsToSkin;\n};\n\nTHREE.Bone.prototype = Object.create(THREE.Object3D.prototype); // File:src/objects/Skeleton.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nTHREE.Skeleton = function (bones, boneInverses, useVertexTexture) {\n  this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n  this.identityMatrix = new THREE.Matrix4(); // copy the bone array\n\n  bones = bones || [];\n  this.bones = bones.slice(0); // create a bone texture or an array of floats\n\n  if (this.useVertexTexture) {\n    // layout (1 matrix = 4 pixels)\n    //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    //  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\n    //       16x16 pixel texture max   64 bones (16 * 16 / 4)\n    //       32x32 pixel texture max  256 bones (32 * 32 / 4)\n    //       64x64 pixel texture max 1024 bones (64 * 64 / 4)\n    var size;\n    if (this.bones.length > 256) size = 64;else if (this.bones.length > 64) size = 32;else if (this.bones.length > 16) size = 16;else size = 8;\n    this.boneTextureWidth = size;\n    this.boneTextureHeight = size;\n    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4); // 4 floats per RGBA pixel\n\n    this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n    this.boneTexture.minFilter = THREE.NearestFilter;\n    this.boneTexture.magFilter = THREE.NearestFilter;\n    this.boneTexture.generateMipmaps = false;\n    this.boneTexture.flipY = false;\n  } else {\n    this.boneMatrices = new Float32Array(16 * this.bones.length);\n  } // use the supplied bone inverses or calculate the inverses\n\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton bonInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var b = 0, bl = this.bones.length; b < bl; b++) {\n        this.boneInverses.push(new THREE.Matrix4());\n      }\n    }\n  }\n};\n\nTHREE.Skeleton.prototype.calculateInverses = function () {\n  this.boneInverses = [];\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    var inverse = new THREE.Matrix4();\n\n    if (this.bones[b]) {\n      inverse.getInverse(this.bones[b].matrixWorld);\n    }\n\n    this.boneInverses.push(inverse);\n  }\n};\n\nTHREE.Skeleton.prototype.pose = function () {\n  var bone; // recover the bind-time world matrices\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    bone = this.bones[b];\n\n    if (bone) {\n      bone.matrixWorld.getInverse(this.boneInverses[b]);\n    }\n  } // compute the local matrices, positions, rotations and scales\n\n\n  for (var b = 0, bl = this.bones.length; b < bl; b++) {\n    bone = this.bones[b];\n\n    if (bone) {\n      if (bone.parent) {\n        bone.matrix.getInverse(bone.parent.matrixWorld);\n        bone.matrix.multiply(bone.matrixWorld);\n      } else {\n        bone.matrix.copy(bone.matrixWorld);\n      }\n\n      bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n    }\n  }\n};\n\nTHREE.Skeleton.prototype.update = function () {\n  var offsetMatrix = new THREE.Matrix4();\n  return function () {\n    // flatten bone matrices to array\n    for (var b = 0, bl = this.bones.length; b < bl; b++) {\n      // compute the offset between the current and the original transform\n      var matrix = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;\n      offsetMatrix.multiplyMatrices(matrix, this.boneInverses[b]);\n      offsetMatrix.flattenToArrayOffset(this.boneMatrices, b * 16);\n    }\n\n    if (this.useVertexTexture) {\n      this.boneTexture.needsUpdate = true;\n    }\n  };\n}(); // File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\n\nTHREE.SkinnedMesh = function (geometry, material, useVertexTexture) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = \"attached\";\n  this.bindMatrix = new THREE.Matrix4();\n  this.bindMatrixInverse = new THREE.Matrix4(); // init bones\n  // TODO: remove bone creation as there is no reason (other than\n  // convenience) for THREE.SkinnedMesh to do this.\n\n  var bones = [];\n\n  if (this.geometry && this.geometry.bones !== undefined) {\n    var bone, gbone, p, q, s;\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n      p = gbone.pos;\n      q = gbone.rotq;\n      s = gbone.scl;\n      bone = new THREE.Bone(this);\n      bones.push(bone);\n      bone.name = gbone.name;\n      bone.position.set(p[0], p[1], p[2]);\n      bone.quaternion.set(q[0], q[1], q[2], q[3]);\n\n      if (s !== undefined) {\n        bone.scale.set(s[0], s[1], s[2]);\n      } else {\n        bone.scale.set(1, 1, 1);\n      }\n    }\n\n    for (var b = 0, bl = this.geometry.bones.length; b < bl; ++b) {\n      gbone = this.geometry.bones[b];\n\n      if (gbone.parent !== -1) {\n        bones[gbone.parent].add(bones[b]);\n      } else {\n        this.add(bones[b]);\n      }\n    }\n  }\n\n  this.normalizeSkinWeights();\n  this.updateMatrixWorld(true);\n  this.bind(new THREE.Skeleton(bones, undefined, useVertexTexture));\n};\n\nTHREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);\n\nTHREE.SkinnedMesh.prototype.bind = function (skeleton, bindMatrix) {\n  this.skeleton = skeleton;\n\n  if (bindMatrix === undefined) {\n    this.updateMatrixWorld(true);\n    bindMatrix = this.matrixWorld;\n  }\n\n  this.bindMatrix.copy(bindMatrix);\n  this.bindMatrixInverse.getInverse(bindMatrix);\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n  this.skeleton.pose();\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n  if (this.geometry instanceof THREE.Geometry) {\n    for (var i = 0; i < this.geometry.skinIndices.length; i++) {\n      var sw = this.geometry.skinWeights[i];\n      var scale = 1.0 / sw.lengthManhattan();\n\n      if (scale !== Infinity) {\n        sw.multiplyScalar(scale);\n      } else {\n        sw.set(1); // this will be normalized by the shader anyway\n      }\n    }\n  } else {// skinning weights assumed to be normalized for THREE.BufferGeometry\n    }\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function (force) {\n  THREE.Mesh.prototype.updateMatrixWorld.call(this, true);\n\n  if (this.bindMode === \"attached\") {\n    this.bindMatrixInverse.getInverse(this.matrixWorld);\n  } else if (this.bindMode === \"detached\") {\n    this.bindMatrixInverse.getInverse(this.bindMatrix);\n  } else {\n    console.warn('THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode);\n  }\n};\n\nTHREE.SkinnedMesh.prototype.clone = function (object) {\n  if (object === undefined) {\n    object = new THREE.SkinnedMesh(this.geometry, this.material, this.useVertexTexture);\n  }\n\n  THREE.Mesh.prototype.clone.call(this, object);\n  return object;\n}; // File:src/objects/MorphAnimMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.MorphAnimMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.type = 'MorphAnimMesh'; // API\n\n  this.duration = 1000; // milliseconds\n\n  this.mirroredLoop = false;\n  this.time = 0; // internals\n\n  this.lastKeyframe = 0;\n  this.currentKeyframe = 0;\n  this.direction = 1;\n  this.directionBackwards = false;\n  this.setFrameRange(0, this.geometry.morphTargets.length - 1);\n};\n\nTHREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);\n\nTHREE.MorphAnimMesh.prototype.setFrameRange = function (start, end) {\n  this.startKeyframe = start;\n  this.endKeyframe = end;\n  this.length = this.endKeyframe - this.startKeyframe + 1;\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n  this.direction = 1;\n  this.directionBackwards = false;\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n  this.direction = -1;\n  this.directionBackwards = true;\n};\n\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\n  var geometry = this.geometry;\n  if (!geometry.animations) geometry.animations = {};\n  var firstAnimation,\n      animations = geometry.animations;\n  var pattern = /([a-z]+)_?(\\d+)/;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var parts = morph.name.match(pattern);\n\n    if (parts && parts.length > 1) {\n      var label = parts[1];\n      var num = parts[2];\n      if (!animations[label]) animations[label] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var animation = animations[label];\n      if (i < animation.start) animation.start = i;\n      if (i > animation.end) animation.end = i;\n      if (!firstAnimation) firstAnimation = label;\n    }\n  }\n\n  geometry.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function (label, start, end) {\n  if (!this.geometry.animations) this.geometry.animations = {};\n  this.geometry.animations[label] = {\n    start: start,\n    end: end\n  };\n};\n\nTHREE.MorphAnimMesh.prototype.playAnimation = function (label, fps) {\n  var animation = this.geometry.animations[label];\n\n  if (animation) {\n    this.setFrameRange(animation.start, animation.end);\n    this.duration = 1000 * ((animation.end - animation.start) / fps);\n    this.time = 0;\n  } else {\n    console.warn('animation[' + label + '] undefined');\n  }\n};\n\nTHREE.MorphAnimMesh.prototype.updateAnimation = function (delta) {\n  var frameTime = this.duration / this.length;\n  this.time += this.direction * delta;\n\n  if (this.mirroredLoop) {\n    if (this.time > this.duration || this.time < 0) {\n      this.direction *= -1;\n\n      if (this.time > this.duration) {\n        this.time = this.duration;\n        this.directionBackwards = true;\n      }\n\n      if (this.time < 0) {\n        this.time = 0;\n        this.directionBackwards = false;\n      }\n    }\n  } else {\n    this.time = this.time % this.duration;\n    if (this.time < 0) this.time += this.duration;\n  }\n\n  var keyframe = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / frameTime), 0, this.length - 1);\n\n  if (keyframe !== this.currentKeyframe) {\n    this.morphTargetInfluences[this.lastKeyframe] = 0;\n    this.morphTargetInfluences[this.currentKeyframe] = 1;\n    this.morphTargetInfluences[keyframe] = 0;\n    this.lastKeyframe = this.currentKeyframe;\n    this.currentKeyframe = keyframe;\n  }\n\n  var mix = this.time % frameTime / frameTime;\n\n  if (this.directionBackwards) {\n    mix = 1 - mix;\n  }\n\n  this.morphTargetInfluences[this.currentKeyframe] = mix;\n  this.morphTargetInfluences[this.lastKeyframe] = 1 - mix;\n};\n\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function (a, b, t) {\n  var influences = this.morphTargetInfluences;\n\n  for (var i = 0, l = influences.length; i < l; i++) {\n    influences[i] = 0;\n  }\n\n  if (a > -1) influences[a] = 1 - t;\n  if (b > -1) influences[b] = t;\n};\n\nTHREE.MorphAnimMesh.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.MorphAnimMesh(this.geometry, this.material);\n  object.duration = this.duration;\n  object.mirroredLoop = this.mirroredLoop;\n  object.time = this.time;\n  object.lastKeyframe = this.lastKeyframe;\n  object.currentKeyframe = this.currentKeyframe;\n  object.direction = this.direction;\n  object.directionBackwards = this.directionBackwards;\n  THREE.Mesh.prototype.clone.call(this, object);\n  return object;\n}; // File:src/objects/LOD.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.LOD = function () {\n  THREE.Object3D.call(this);\n  this.objects = [];\n};\n\nTHREE.LOD.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.LOD.prototype.addLevel = function (object, distance) {\n  if (distance === undefined) distance = 0;\n  distance = Math.abs(distance);\n\n  for (var l = 0; l < this.objects.length; l++) {\n    if (distance < this.objects[l].distance) {\n      break;\n    }\n  }\n\n  this.objects.splice(l, 0, {\n    distance: distance,\n    object: object\n  });\n  this.add(object);\n};\n\nTHREE.LOD.prototype.getObjectForDistance = function (distance) {\n  for (var i = 1, l = this.objects.length; i < l; i++) {\n    if (distance < this.objects[i].distance) {\n      break;\n    }\n  }\n\n  return this.objects[i - 1].object;\n};\n\nTHREE.LOD.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function (raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n    this.getObjectForDistance(distance).raycast(raycaster, intersects);\n  };\n}();\n\nTHREE.LOD.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  return function (camera) {\n    if (this.objects.length > 1) {\n      v1.setFromMatrixPosition(camera.matrixWorld);\n      v2.setFromMatrixPosition(this.matrixWorld);\n      var distance = v1.distanceTo(v2);\n      this.objects[0].object.visible = true;\n\n      for (var i = 1, l = this.objects.length; i < l; i++) {\n        if (distance >= this.objects[i].distance) {\n          this.objects[i - 1].object.visible = false;\n          this.objects[i].object.visible = true;\n        } else {\n          break;\n        }\n      }\n\n      for (; i < l; i++) {\n        this.objects[i].object.visible = false;\n      }\n    }\n  };\n}();\n\nTHREE.LOD.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.LOD();\n  THREE.Object3D.prototype.clone.call(this, object);\n\n  for (var i = 0, l = this.objects.length; i < l; i++) {\n    var x = this.objects[i].object.clone();\n    x.visible = i === 0;\n    object.addLevel(x, this.objects[i].distance);\n  }\n\n  return object;\n}; // File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Sprite = function () {\n  var indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n  var vertices = new Float32Array([-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0]);\n  var uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('index', new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  return function (material) {\n    THREE.Object3D.call(this);\n    this.type = 'Sprite';\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new THREE.SpriteMaterial();\n  };\n}();\n\nTHREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Sprite.prototype.raycast = function () {\n  var matrixPosition = new THREE.Vector3();\n  return function (raycaster, intersects) {\n    matrixPosition.setFromMatrixPosition(this.matrixWorld);\n    var distance = raycaster.ray.distanceToPoint(matrixPosition);\n\n    if (distance > this.scale.x) {\n      return;\n    }\n\n    intersects.push({\n      distance: distance,\n      point: this.position,\n      face: null,\n      object: this\n    });\n  };\n}();\n\nTHREE.Sprite.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.Sprite(this.material);\n  THREE.Object3D.prototype.clone.call(this, object);\n  return object;\n}; // Backwards compatibility\n\n\nTHREE.Particle = THREE.Sprite; // File:src/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function (texture, size, distance, blending, color) {\n  THREE.Object3D.call(this);\n  this.lensFlares = [];\n  this.positionScreen = new THREE.Vector3();\n  this.customUpdateCallback = undefined;\n\n  if (texture !== undefined) {\n    this.add(texture, size, distance, blending, color);\n  }\n};\n\nTHREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);\n/*\n * Add: adds another flare\n */\n\nTHREE.LensFlare.prototype.add = function (texture, size, distance, blending, color, opacity) {\n  if (size === undefined) size = -1;\n  if (distance === undefined) distance = 0;\n  if (opacity === undefined) opacity = 1;\n  if (color === undefined) color = new THREE.Color(0xffffff);\n  if (blending === undefined) blending = THREE.NormalBlending;\n  distance = Math.min(distance, Math.max(0, distance));\n  this.lensFlares.push({\n    texture: texture,\n    // THREE.Texture\n    size: size,\n    // size in pixels (-1 = use texture.width)\n    distance: distance,\n    // distance (0-1) from light source (0=at light source)\n    x: 0,\n    y: 0,\n    z: 0,\n    // screen position (-1 => 1) z = 0 is ontop z = 1 is back\n    scale: 1,\n    // scale\n    rotation: 1,\n    // rotation\n    opacity: opacity,\n    // opacity\n    color: color,\n    // color\n    blending: blending // blending\n\n  });\n};\n/*\n * Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n */\n\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n  var f,\n      fl = this.lensFlares.length;\n  var flare;\n  var vecX = -this.positionScreen.x * 2;\n  var vecY = -this.positionScreen.y * 2;\n\n  for (f = 0; f < fl; f++) {\n    flare = this.lensFlares[f];\n    flare.x = this.positionScreen.x + vecX * flare.distance;\n    flare.y = this.positionScreen.y + vecY * flare.distance;\n    flare.wantedRotation = flare.x * Math.PI * 0.25;\n    flare.rotation += (flare.wantedRotation - flare.rotation) * 0.25;\n  }\n}; // File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.Scene = function () {\n  THREE.Object3D.call(this);\n  this.type = 'Scene';\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n};\n\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Scene.prototype.clone = function (object) {\n  if (object === undefined) object = new THREE.Scene();\n  THREE.Object3D.prototype.clone.call(this, object);\n  if (this.fog !== null) object.fog = this.fog.clone();\n  if (this.overrideMaterial !== null) object.overrideMaterial = this.overrideMaterial.clone();\n  object.autoUpdate = this.autoUpdate;\n  object.matrixAutoUpdate = this.matrixAutoUpdate;\n  return object;\n}; // File:src/scenes/Fog.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Fog = function (color, near, far) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n};\n\nTHREE.Fog.prototype.clone = function () {\n  return new THREE.Fog(this.color.getHex(), this.near, this.far);\n}; // File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.FogExp2 = function (color, density) {\n  this.name = '';\n  this.color = new THREE.Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n  return new THREE.FogExp2(this.color.getHex(), this.density);\n}; // File:src/renderers/shaders/ShaderChunk.js\n\n\nTHREE.ShaderChunk = {}; // File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk['alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\t#ifdef WRAP_AROUND\\n\\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\tfloat lDistance = 1.0;\\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\t\tlVector = normalize( lVector );\\n\\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\t\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\n\nTHREE.ShaderChunk['default_vertex'] = \"vec4 mvPosition;\\n\\n#ifdef USE_SKINNING\\n\\n\tmvPosition = modelViewMatrix * skinned;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\\n\\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\\n\\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\"; // File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk['map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk['skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\t#ifdef USE_MORPHNORMALS\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\t#else\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_fragment'] = \"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tvec3 pointDiffuse = vec3( 0.0 );\\n\tvec3 pointSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\n\\n\t\t\t\t// specular\\n\\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tvec3 spotDiffuse = vec3( 0.0 );\\n\tvec3 spotSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t\t#else\\n\\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t\t#endif\\n\\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\\n\\n\t\t\t\t\t// specular\\n\\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tvec3 dirDiffuse = vec3( 0.0 );\\n\tvec3 dirSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\t\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, dirVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\t\t// specular\\n\\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t/*\\n\t\t// fresnel term from skin shader\\n\t\tconst float F0 = 0.128;\\n\\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\t\tfloat exponential = pow( base, 5.0 );\\n\\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\t\t*/\\n\\n\t\t/*\\n\t\t// fresnel term from fresnel shader\\n\t\tconst float mFresnelBias = 0.08;\\n\t\tconst float mFresnelScale = 0.3;\\n\t\tconst float mFresnelPower = 5.0;\\n\\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\t\t*/\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tvec3 hemiDiffuse = vec3( 0.0 );\\n\tvec3 hemiSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\themiDiffuse += diffuse * hemiColor;\\n\\n\t\t// specular (sky light)\\n\\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\t\t// specular (ground light)\\n\\n\t\tvec3 lVectorGround = -lVector;\\n\\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\t}\\n\\n#endif\\n\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\ttotalDiffuse += dirDiffuse;\\n\ttotalSpecular += dirSpecular;\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\ttotalDiffuse += hemiDiffuse;\\n\ttotalSpecular += hemiSpecular;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\ttotalDiffuse += pointDiffuse;\\n\ttotalSpecular += pointSpecular;\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\ttotalDiffuse += spotDiffuse;\\n\ttotalSpecular += spotSpecular;\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n\\n#else\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk['fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk['morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\tmorphedNormal += normal;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\tuniform samplerCube envMap;\\n\tuniform float flipEnvMap;\\n\tuniform int combine;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform bool useRefract;\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\tuniform sampler2D lightMap;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\n\nTHREE.ShaderChunk['lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk['map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\ttexelColor.xyz *= texelColor.xyz;\\n\\n\t#endif\\n\\n\tgl_FragColor = gl_FragColor * texelColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\n\nTHREE.ShaderChunk['lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvUv2 = uv2;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk['map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk['color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk['color_vertex'] = \"#ifdef USE_COLOR\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tvColor = color * color;\\n\\n\t#else\\n\\n\t\tvColor = color;\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk['skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\t#ifdef USE_MORPHTARGETS\\n\\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\tuniform bool useRefract;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\n\nTHREE.ShaderChunk['linear_to_gamma_fragment'] = \"#ifdef GAMMA_OUTPUT\\n\\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk['color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\n\nTHREE.ShaderChunk['lights_lambert_pars_vertex'] = \"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\n\\nuniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\n\nTHREE.ShaderChunk['map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk['envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tvec3 reflectVec;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\\n\\n\t\tif ( useRefract ) {\\n\\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t} else { \\n\\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\treflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#else\\n\\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#endif\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tcubeColor.xyz *= cubeColor.xyz;\\n\\n\t#endif\\n\\n\tif ( combine == 1 ) {\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\\n\\n\t} else if ( combine == 2 ) {\\n\\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\\n\\n\t} else {\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk['logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk['specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk['fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tconst float LOG2 = 1.442695;\\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk['defaultnormal_vertex'] = \"vec3 objectNormal;\\n\\n#ifdef USE_SKINNING\\n\\n\tobjectNormal = skinnedNormal.xyz;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\\n\\n\tobjectNormal = morphedNormal;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\\n\\n\tobjectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\"; // File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk['lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\"; // File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk['skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\n\nTHREE.ShaderChunk['map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk['lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk['color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk['morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\tvec3 morphed = vec3( 0.0 );\\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n\tmorphed += position;\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk['envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\\n\tworldNormal = normalize( worldNormal );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\tif ( useRefract ) {\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t} else {\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\tint inFrustumCount = 0;\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\t\t// don't shadow pixels outside of light frustum\\n\t\t\t\t// use just first frustum (for cascades)\\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\\n\\n\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\tinFrustumCount += int( inFrustum );\\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\t\t#else\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t#endif\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#else\\n\\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t}\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\tshadowColor *= shadowColor;\\n\\n\t#endif\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk['worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#endif\\n\\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\t#endif\\n\\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk['shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk['skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk['logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\t#extension GL_EXT_frag_depth : enable\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\"; // File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\"; // File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk['alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\"; // File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src instanceof THREE.Color || parameter_src instanceof THREE.Vector2 || parameter_src instanceof THREE.Vector3 || parameter_src instanceof THREE.Vector4 || parameter_src instanceof THREE.Matrix4 || parameter_src instanceof THREE.Texture) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (parameter_src instanceof Array) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n}; // File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n  common: {\n    \"diffuse\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"offsetRepeat\": {\n      type: \"v4\",\n      value: new THREE.Vector4(0, 0, 1, 1)\n    },\n    \"lightMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"specularMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"alphaMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"envMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"flipEnvMap\": {\n      type: \"f\",\n      value: -1\n    },\n    \"useRefract\": {\n      type: \"i\",\n      value: 0\n    },\n    \"reflectivity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"refractionRatio\": {\n      type: \"f\",\n      value: 0.98\n    },\n    \"combine\": {\n      type: \"i\",\n      value: 0\n    },\n    \"morphTargetInfluences\": {\n      type: \"f\",\n      value: 0\n    }\n  },\n  bump: {\n    \"bumpMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"bumpScale\": {\n      type: \"f\",\n      value: 1\n    }\n  },\n  normalmap: {\n    \"normalMap\": {\n      type: \"t\",\n      value: null\n    },\n    \"normalScale\": {\n      type: \"v2\",\n      value: new THREE.Vector2(1, 1)\n    }\n  },\n  fog: {\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  lights: {\n    \"ambientLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"directionalLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightSkyColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"hemisphereLightGroundColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightPosition\": {\n      type: \"fv\",\n      value: []\n    },\n    \"pointLightDistance\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightColor\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightPosition\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightDirection\": {\n      type: \"fv\",\n      value: []\n    },\n    \"spotLightDistance\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightAngleCos\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"spotLightExponent\": {\n      type: \"fv1\",\n      value: []\n    }\n  },\n  particle: {\n    \"psColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xeeeeee)\n    },\n    \"opacity\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"size\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"scale\": {\n      type: \"f\",\n      value: 1.0\n    },\n    \"map\": {\n      type: \"t\",\n      value: null\n    },\n    \"fogDensity\": {\n      type: \"f\",\n      value: 0.00025\n    },\n    \"fogNear\": {\n      type: \"f\",\n      value: 1\n    },\n    \"fogFar\": {\n      type: \"f\",\n      value: 2000\n    },\n    \"fogColor\": {\n      type: \"c\",\n      value: new THREE.Color(0xffffff)\n    }\n  },\n  shadowmap: {\n    \"shadowMap\": {\n      type: \"tv\",\n      value: []\n    },\n    \"shadowMapSize\": {\n      type: \"v2v\",\n      value: []\n    },\n    \"shadowBias\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"shadowDarkness\": {\n      type: \"fv1\",\n      value: []\n    },\n    \"shadowMatrix\": {\n      type: \"m4v\",\n      value: []\n    }\n  }\n}; // File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.ShaderLib = {\n  'basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"shadowmap\"]]),\n    vertexShader: [THREE.ShaderChunk[\"map_pars_vertex\"], THREE.ShaderChunk[\"lightmap_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"map_vertex\"], THREE.ShaderChunk[\"lightmap_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], \"\t#ifdef USE_ENVMAP\", THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], \"\t#endif\", THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 diffuse;\", \"uniform float opacity;\", THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"lightmap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( diffuse, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], THREE.ShaderChunk[\"lightmap_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\")\n  },\n  'lambert': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], THREE.UniformsLib[\"shadowmap\"], {\n      \"ambient\": {\n        type: \"c\",\n        value: new THREE.Color(0xffffff)\n      },\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"wrapRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(1, 1, 1)\n      }\n    }]),\n    vertexShader: [\"#define LAMBERT\", \"varying vec3 vLightFront;\", \"#ifdef DOUBLE_SIDED\", \"\tvarying vec3 vLightBack;\", \"#endif\", THREE.ShaderChunk[\"map_pars_vertex\"], THREE.ShaderChunk[\"lightmap_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"lights_lambert_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"map_vertex\"], THREE.ShaderChunk[\"lightmap_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"lights_lambert_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float opacity;\", \"varying vec3 vLightFront;\", \"#ifdef DOUBLE_SIDED\", \"\tvarying vec3 vLightBack;\", \"#endif\", THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"lightmap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], \"\t#ifdef DOUBLE_SIDED\", //\"float isFront = float( gl_FrontFacing );\",\n    //\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\n    \"\t\tif ( gl_FrontFacing )\", \"\t\t\tgl_FragColor.xyz *= vLightFront;\", \"\t\telse\", \"\t\t\tgl_FragColor.xyz *= vLightBack;\", \"\t#else\", \"\t\tgl_FragColor.xyz *= vLightFront;\", \"\t#endif\", THREE.ShaderChunk[\"lightmap_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\")\n  },\n  'phong': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"bump\"], THREE.UniformsLib[\"normalmap\"], THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], THREE.UniformsLib[\"shadowmap\"], {\n      \"ambient\": {\n        type: \"c\",\n        value: new THREE.Color(0xffffff)\n      },\n      \"emissive\": {\n        type: \"c\",\n        value: new THREE.Color(0x000000)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"shininess\": {\n        type: \"f\",\n        value: 30\n      },\n      \"wrapRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(1, 1, 1)\n      }\n    }]),\n    vertexShader: [\"#define PHONG\", \"varying vec3 vViewPosition;\", \"varying vec3 vNormal;\", THREE.ShaderChunk[\"map_pars_vertex\"], THREE.ShaderChunk[\"lightmap_pars_vertex\"], THREE.ShaderChunk[\"envmap_pars_vertex\"], THREE.ShaderChunk[\"lights_phong_pars_vertex\"], THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"map_vertex\"], THREE.ShaderChunk[\"lightmap_vertex\"], THREE.ShaderChunk[\"color_vertex\"], THREE.ShaderChunk[\"morphnormal_vertex\"], THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], THREE.ShaderChunk[\"defaultnormal_vertex\"], \"\tvNormal = normalize( transformedNormal );\", THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"\tvViewPosition = -mvPosition.xyz;\", THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"envmap_vertex\"], THREE.ShaderChunk[\"lights_phong_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"#define PHONG\", \"uniform vec3 diffuse;\", \"uniform float opacity;\", \"uniform vec3 ambient;\", \"uniform vec3 emissive;\", \"uniform vec3 specular;\", \"uniform float shininess;\", THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"map_pars_fragment\"], THREE.ShaderChunk[\"alphamap_pars_fragment\"], THREE.ShaderChunk[\"lightmap_pars_fragment\"], THREE.ShaderChunk[\"envmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"lights_phong_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"bumpmap_pars_fragment\"], THREE.ShaderChunk[\"normalmap_pars_fragment\"], THREE.ShaderChunk[\"specularmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_fragment\"], THREE.ShaderChunk[\"alphamap_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"specularmap_fragment\"], THREE.ShaderChunk[\"lights_phong_fragment\"], THREE.ShaderChunk[\"lightmap_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"envmap_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\")\n  },\n  'particle_basic': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"particle\"], THREE.UniformsLib[\"shadowmap\"]]),\n    vertexShader: [\"uniform float size;\", \"uniform float scale;\", THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"color_vertex\"], \"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"\t#ifdef USE_SIZEATTENUATION\", \"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\", \"\t#else\", \"\t\tgl_PointSize = size;\", \"\t#endif\", \"\tgl_Position = projectionMatrix * mvPosition;\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], THREE.ShaderChunk[\"worldpos_vertex\"], THREE.ShaderChunk[\"shadowmap_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 psColor;\", \"uniform float opacity;\", THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"map_particle_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( psColor, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"map_particle_fragment\"], THREE.ShaderChunk[\"alphatest_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\")\n  },\n  'dashed': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"common\"], THREE.UniformsLib[\"fog\"], {\n      \"scale\": {\n        type: \"f\",\n        value: 1\n      },\n      \"dashSize\": {\n        type: \"f\",\n        value: 1\n      },\n      \"totalSize\": {\n        type: \"f\",\n        value: 2\n      }\n    }]),\n    vertexShader: [\"uniform float scale;\", \"attribute float lineDistance;\", \"varying float vLineDistance;\", THREE.ShaderChunk[\"color_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"color_vertex\"], \"\tvLineDistance = scale * lineDistance;\", \"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"\tgl_Position = projectionMatrix * mvPosition;\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform vec3 diffuse;\", \"uniform float opacity;\", \"uniform float dashSize;\", \"uniform float totalSize;\", \"varying float vLineDistance;\", THREE.ShaderChunk[\"color_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\", \"\t\tdiscard;\", \"\t}\", \"\tgl_FragColor = vec4( diffuse, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], THREE.ShaderChunk[\"color_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\")\n  },\n  'depth': {\n    uniforms: {\n      \"mNear\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"mFar\": {\n        type: \"f\",\n        value: 2000.0\n      },\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: [THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float mNear;\", \"uniform float mFar;\", \"uniform float opacity;\", THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"\t#ifdef USE_LOGDEPTHBUF_EXT\", \"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\", \"\t#else\", \"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\", \"\t#endif\", \"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\", \"\tgl_FragColor = vec4( vec3( color ), opacity );\", \"}\"].join(\"\\n\")\n  },\n  'normal': {\n    uniforms: {\n      \"opacity\": {\n        type: \"f\",\n        value: 1.0\n      }\n    },\n    vertexShader: [\"varying vec3 vNormal;\", THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", \"\tvNormal = normalize( normalMatrix * normal );\", THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform float opacity;\", \"varying vec3 vNormal;\", THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"}\"].join(\"\\n\")\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tNormal map shader\n  //\t\t- Blinn-Phong\n  //\t\t- normal + diffuse + specular + AO + displacement + reflection + shadow maps\n  //\t\t- point and directional lights (use with \"lights: true\" material option)\n   ------------------------------------------------------------------------- */\n  'normalmap': {\n    uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib[\"fog\"], THREE.UniformsLib[\"lights\"], THREE.UniformsLib[\"shadowmap\"], {\n      \"enableAO\": {\n        type: \"i\",\n        value: 0\n      },\n      \"enableDiffuse\": {\n        type: \"i\",\n        value: 0\n      },\n      \"enableSpecular\": {\n        type: \"i\",\n        value: 0\n      },\n      \"enableReflection\": {\n        type: \"i\",\n        value: 0\n      },\n      \"enableDisplacement\": {\n        type: \"i\",\n        value: 0\n      },\n      \"tDisplacement\": {\n        type: \"t\",\n        value: null\n      },\n      // must go first as this is vertex texture\n      \"tDiffuse\": {\n        type: \"t\",\n        value: null\n      },\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tNormal\": {\n        type: \"t\",\n        value: null\n      },\n      \"tSpecular\": {\n        type: \"t\",\n        value: null\n      },\n      \"tAO\": {\n        type: \"t\",\n        value: null\n      },\n      \"uNormalScale\": {\n        type: \"v2\",\n        value: new THREE.Vector2(1, 1)\n      },\n      \"uDisplacementBias\": {\n        type: \"f\",\n        value: 0.0\n      },\n      \"uDisplacementScale\": {\n        type: \"f\",\n        value: 1.0\n      },\n      \"diffuse\": {\n        type: \"c\",\n        value: new THREE.Color(0xffffff)\n      },\n      \"specular\": {\n        type: \"c\",\n        value: new THREE.Color(0x111111)\n      },\n      \"ambient\": {\n        type: \"c\",\n        value: new THREE.Color(0xffffff)\n      },\n      \"shininess\": {\n        type: \"f\",\n        value: 30\n      },\n      \"opacity\": {\n        type: \"f\",\n        value: 1\n      },\n      \"useRefract\": {\n        type: \"i\",\n        value: 0\n      },\n      \"refractionRatio\": {\n        type: \"f\",\n        value: 0.98\n      },\n      \"reflectivity\": {\n        type: \"f\",\n        value: 0.5\n      },\n      \"uOffset\": {\n        type: \"v2\",\n        value: new THREE.Vector2(0, 0)\n      },\n      \"uRepeat\": {\n        type: \"v2\",\n        value: new THREE.Vector2(1, 1)\n      },\n      \"wrapRGB\": {\n        type: \"v3\",\n        value: new THREE.Vector3(1, 1, 1)\n      }\n    }]),\n    fragmentShader: [\"uniform vec3 ambient;\", \"uniform vec3 diffuse;\", \"uniform vec3 specular;\", \"uniform float shininess;\", \"uniform float opacity;\", \"uniform bool enableDiffuse;\", \"uniform bool enableSpecular;\", \"uniform bool enableAO;\", \"uniform bool enableReflection;\", \"uniform sampler2D tDiffuse;\", \"uniform sampler2D tNormal;\", \"uniform sampler2D tSpecular;\", \"uniform sampler2D tAO;\", \"uniform samplerCube tCube;\", \"uniform vec2 uNormalScale;\", \"uniform bool useRefract;\", \"uniform float refractionRatio;\", \"uniform float reflectivity;\", \"varying vec3 vTangent;\", \"varying vec3 vBinormal;\", \"varying vec3 vNormal;\", \"varying vec2 vUv;\", \"uniform vec3 ambientLightColor;\", \"#if MAX_DIR_LIGHTS > 0\", \"\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\", \"\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\", \"#endif\", \"#if MAX_HEMI_LIGHTS > 0\", \"\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\", \"\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\", \"\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\", \"#endif\", \"#if MAX_POINT_LIGHTS > 0\", \"\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\", \"\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\", \"\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\", \"#endif\", \"#if MAX_SPOT_LIGHTS > 0\", \"\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\", \"\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\", \"\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\", \"\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\", \"\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\", \"\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\", \"#endif\", \"#ifdef WRAP_AROUND\", \"\tuniform vec3 wrapRGB;\", \"#endif\", \"varying vec3 vWorldPosition;\", \"varying vec3 vViewPosition;\", THREE.ShaderChunk[\"shadowmap_pars_fragment\"], THREE.ShaderChunk[\"fog_pars_fragment\"], THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\", \"\tvec3 specularTex = vec3( 1.0 );\", \"\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\", \"\tnormalTex.xy *= uNormalScale;\", \"\tnormalTex = normalize( normalTex );\", \"\tif( enableDiffuse ) {\", \"\t\t#ifdef GAMMA_INPUT\", \"\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\", \"\t\t\ttexelColor.xyz *= texelColor.xyz;\", \"\t\t\tgl_FragColor = gl_FragColor * texelColor;\", \"\t\t#else\", \"\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\", \"\t\t#endif\", \"\t}\", \"\tif( enableAO ) {\", \"\t\t#ifdef GAMMA_INPUT\", \"\t\t\tvec4 aoColor = texture2D( tAO, vUv );\", \"\t\t\taoColor.xyz *= aoColor.xyz;\", \"\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\", \"\t\t#else\", \"\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\", \"\t\t#endif\", \"\t}\", THREE.ShaderChunk[\"alphatest_fragment\"], \"\tif( enableSpecular )\", \"\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\", \"\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\", \"\tvec3 finalNormal = tsb * normalTex;\", \"\t#ifdef FLIP_SIDED\", \"\t\tfinalNormal = -finalNormal;\", \"\t#endif\", \"\tvec3 normal = normalize( finalNormal );\", \"\tvec3 viewPosition = normalize( vViewPosition );\", // point lights\n    \"\t#if MAX_POINT_LIGHTS > 0\", \"\t\tvec3 pointDiffuse = vec3( 0.0 );\", \"\t\tvec3 pointSpecular = vec3( 0.0 );\", \"\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\", \"\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\", \"\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\", \"\t\t\tfloat pointDistance = 1.0;\", \"\t\t\tif ( pointLightDistance[ i ] > 0.0 )\", \"\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\", \"\t\t\tpointVector = normalize( pointVector );\", // diffuse\n    \"\t\t\t#ifdef WRAP_AROUND\", \"\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\", \"\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\", \"\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\", \"\t\t\t#else\", \"\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\", \"\t\t\t#endif\", \"\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\", // specular\n    \"\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\", \"\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\", \"\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\", \"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\", \"\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\", \"\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\", \"\t\t}\", \"\t#endif\", // spot lights\n    \"\t#if MAX_SPOT_LIGHTS > 0\", \"\t\tvec3 spotDiffuse = vec3( 0.0 );\", \"\t\tvec3 spotSpecular = vec3( 0.0 );\", \"\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\", \"\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\", \"\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\", \"\t\t\tfloat spotDistance = 1.0;\", \"\t\t\tif ( spotLightDistance[ i ] > 0.0 )\", \"\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\", \"\t\t\tspotVector = normalize( spotVector );\", \"\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\", \"\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\", \"\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\", // diffuse\n    \"\t\t\t\t#ifdef WRAP_AROUND\", \"\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\", \"\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\", \"\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\", \"\t\t\t\t#else\", \"\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\", \"\t\t\t\t#endif\", \"\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\", // specular\n    \"\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\", \"\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\", \"\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\", \"\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\", \"\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\", \"\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\", \"\t\t\t}\", \"\t\t}\", \"\t#endif\", // directional lights\n    \"\t#if MAX_DIR_LIGHTS > 0\", \"\t\tvec3 dirDiffuse = vec3( 0.0 );\", \"\t\tvec3 dirSpecular = vec3( 0.0 );\", \"\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\", \"\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\", \"\t\t\tvec3 dirVector = normalize( lDirection.xyz );\", // diffuse\n    \"\t\t\t#ifdef WRAP_AROUND\", \"\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\", \"\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\", \"\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\", \"\t\t\t#else\", \"\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\", \"\t\t\t#endif\", \"\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\", // specular\n    \"\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\", \"\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\", \"\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\", \"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\", \"\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\", \"\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\", \"\t\t}\", \"\t#endif\", // hemisphere lights\n    \"\t#if MAX_HEMI_LIGHTS > 0\", \"\t\tvec3 hemiDiffuse = vec3( 0.0 );\", \"\t\tvec3 hemiSpecular = vec3( 0.0 );\", \"\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\", \"\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\", \"\t\t\tvec3 lVector = normalize( lDirection.xyz );\", // diffuse\n    \"\t\t\tfloat dotProduct = dot( normal, lVector );\", \"\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\", \"\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\", \"\t\t\themiDiffuse += diffuse * hemiColor;\", // specular (sky light)\n    \"\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\", \"\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\", \"\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\", // specular (ground light)\n    \"\t\t\tvec3 lVectorGround = -lVector;\", \"\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\", \"\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\", \"\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\", \"\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\", \"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\", \"\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\", \"\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\", \"\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\", \"\t\t}\", \"\t#endif\", // all lights contribution summation\n    \"\tvec3 totalDiffuse = vec3( 0.0 );\", \"\tvec3 totalSpecular = vec3( 0.0 );\", \"\t#if MAX_DIR_LIGHTS > 0\", \"\t\ttotalDiffuse += dirDiffuse;\", \"\t\ttotalSpecular += dirSpecular;\", \"\t#endif\", \"\t#if MAX_HEMI_LIGHTS > 0\", \"\t\ttotalDiffuse += hemiDiffuse;\", \"\t\ttotalSpecular += hemiSpecular;\", \"\t#endif\", \"\t#if MAX_POINT_LIGHTS > 0\", \"\t\ttotalDiffuse += pointDiffuse;\", \"\t\ttotalSpecular += pointSpecular;\", \"\t#endif\", \"\t#if MAX_SPOT_LIGHTS > 0\", \"\t\ttotalDiffuse += spotDiffuse;\", \"\t\ttotalSpecular += spotSpecular;\", \"\t#endif\", \"\t#ifdef METAL\", \"\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\", \"\t#else\", \"\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\", \"\t#endif\", \"\tif ( enableReflection ) {\", \"\t\tvec3 vReflect;\", \"\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\", \"\t\tif ( useRefract ) {\", \"\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\", \"\t\t} else {\", \"\t\t\tvReflect = reflect( cameraToVertex, normal );\", \"\t\t}\", \"\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\", \"\t\t#ifdef GAMMA_INPUT\", \"\t\t\tcubeColor.xyz *= cubeColor.xyz;\", \"\t\t#endif\", \"\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\", \"\t}\", THREE.ShaderChunk[\"shadowmap_fragment\"], THREE.ShaderChunk[\"linear_to_gamma_fragment\"], THREE.ShaderChunk[\"fog_fragment\"], \"}\"].join(\"\\n\"),\n    vertexShader: [\"attribute vec4 tangent;\", \"uniform vec2 uOffset;\", \"uniform vec2 uRepeat;\", \"uniform bool enableDisplacement;\", \"#ifdef VERTEX_TEXTURES\", \"\tuniform sampler2D tDisplacement;\", \"\tuniform float uDisplacementScale;\", \"\tuniform float uDisplacementBias;\", \"#endif\", \"varying vec3 vTangent;\", \"varying vec3 vBinormal;\", \"varying vec3 vNormal;\", \"varying vec2 vUv;\", \"varying vec3 vWorldPosition;\", \"varying vec3 vViewPosition;\", THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"shadowmap_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"skinnormal_vertex\"], // normal, tangent and binormal vectors\n    \"\t#ifdef USE_SKINNING\", \"\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\", \"\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\", \"\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\", \"\t#else\", \"\t\tvNormal = normalize( normalMatrix * normal );\", \"\t\tvTangent = normalize( normalMatrix * tangent.xyz );\", \"\t#endif\", \"\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\", \"\tvUv = uv * uRepeat + uOffset;\", // displacement mapping\n    \"\tvec3 displacedPosition;\", \"\t#ifdef VERTEX_TEXTURES\", \"\t\tif ( enableDisplacement ) {\", \"\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\", \"\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\", \"\t\t\tdisplacedPosition = position + normalize( normal ) * df;\", \"\t\t} else {\", \"\t\t\t#ifdef USE_SKINNING\", \"\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\", \"\t\t\t\tvec4 skinned = vec4( 0.0 );\", \"\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\", \"\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\", \"\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\", \"\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\", \"\t\t\t\tskinned  = bindMatrixInverse * skinned;\", \"\t\t\t\tdisplacedPosition = skinned.xyz;\", \"\t\t\t#else\", \"\t\t\t\tdisplacedPosition = position;\", \"\t\t\t#endif\", \"\t\t}\", \"\t#else\", \"\t\t#ifdef USE_SKINNING\", \"\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\", \"\t\t\tvec4 skinned = vec4( 0.0 );\", \"\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\", \"\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\", \"\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\", \"\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\", \"\t\t\tskinned  = bindMatrixInverse * skinned;\", \"\t\t\tdisplacedPosition = skinned.xyz;\", \"\t\t#else\", \"\t\t\tdisplacedPosition = position;\", \"\t\t#endif\", \"\t#endif\", //\n    \"\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\", \"\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\", \"\tgl_Position = projectionMatrix * mvPosition;\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], //\n    \"\tvWorldPosition = worldPosition.xyz;\", \"\tvViewPosition = -mvPosition.xyz;\", // shadows\n    \"\t#ifdef USE_SHADOWMAP\", \"\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\", \"\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\", \"\t\t}\", \"\t#endif\", \"}\"].join(\"\\n\")\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  'cube': {\n    uniforms: {\n      \"tCube\": {\n        type: \"t\",\n        value: null\n      },\n      \"tFlip\": {\n        type: \"f\",\n        value: -1\n      }\n    },\n    vertexShader: [\"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", \"\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\", \"\tvWorldPosition = worldPosition.xyz;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [\"uniform samplerCube tCube;\", \"uniform float tFlip;\", \"varying vec3 vWorldPosition;\", THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"void main() {\", \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"}\"].join(\"\\n\")\n  },\n\n  /* Depth encoding into RGBA texture\n   *\n   * based on SpiderGL shadow map example\n   * http://spidergl.org/example.php?id=6\n   *\n   * originally from\n   * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n   *\n   * see also\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n   */\n  'depthRGBA': {\n    uniforms: {},\n    vertexShader: [THREE.ShaderChunk[\"morphtarget_pars_vertex\"], THREE.ShaderChunk[\"skinning_pars_vertex\"], THREE.ShaderChunk[\"logdepthbuf_pars_vertex\"], \"void main() {\", THREE.ShaderChunk[\"skinbase_vertex\"], THREE.ShaderChunk[\"morphtarget_vertex\"], THREE.ShaderChunk[\"skinning_vertex\"], THREE.ShaderChunk[\"default_vertex\"], THREE.ShaderChunk[\"logdepthbuf_vertex\"], \"}\"].join(\"\\n\"),\n    fragmentShader: [THREE.ShaderChunk[\"logdepthbuf_pars_fragment\"], \"vec4 pack_depth( const in float depth ) {\", \"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\", \"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\", \"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\n    \"\tres -= res.xxyz * bit_mask;\", \"\treturn res;\", \"}\", \"void main() {\", THREE.ShaderChunk[\"logdepthbuf_fragment\"], \"\t#ifdef USE_LOGDEPTHBUF_EXT\", \"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\", \"\t#else\", \"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\", \"\t#endif\", //\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\n    //\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\n    //\"gl_FragData[ 0 ] = pack_depth( z );\",\n    //\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\n    \"}\"].join(\"\\n\")\n  }\n}; // File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.WebGLRenderer = function (parameters) {\n  console.log('THREE.WebGLRenderer', THREE.REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement('canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _precision = parameters.precision !== undefined ? parameters.precision : 'highp',\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n      _logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\n      _clearColor = new THREE.Color(0x000000),\n      _clearAlpha = 0;\n\n  var lights = [];\n  var _webglObjects = {};\n  var _webglObjectsImmediate = [];\n  var opaqueObjects = [];\n  var transparentObjects = [];\n  var sprites = [];\n  var lensFlares = []; // public properties\n\n  this.domElement = _canvas;\n  this.context = null;\n  this.devicePixelRatio = parameters.devicePixelRatio !== undefined ? parameters.devicePixelRatio : self.devicePixelRatio !== undefined ? self.devicePixelRatio : 1; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // physically based shading\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // shadow map\n\n  this.shadowMapEnabled = false;\n  this.shadowMapType = THREE.PCFShadowMap;\n  this.shadowMapCullFace = THREE.CullFaceFront;\n  this.shadowMapDebug = false;\n  this.shadowMapCascade = false; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // flags\n\n  this.autoScaleCubemaps = true; // info\n\n  this.info = {\n    memory: {\n      programs: 0,\n      geometries: 0,\n      textures: 0\n    },\n    render: {\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0\n    }\n  }; // internal properties\n\n  var _this = this,\n      _programs = [],\n      // internal state cache\n  _currentProgram = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryGroupHash = -1,\n      _currentCamera = null,\n      _usedTextureUnits = 0,\n      // GL state cache\n  _oldDoubleSided = -1,\n      _oldFlipSided = -1,\n      _oldBlending = -1,\n      _oldBlendEquation = -1,\n      _oldBlendSrc = -1,\n      _oldBlendDst = -1,\n      _oldDepthTest = -1,\n      _oldDepthWrite = -1,\n      _oldPolygonOffset = null,\n      _oldPolygonOffsetFactor = null,\n      _oldPolygonOffsetUnits = null,\n      _oldLineWidth = null,\n      _viewportX = 0,\n      _viewportY = 0,\n      _viewportWidth = _canvas.width,\n      _viewportHeight = _canvas.height,\n      _currentWidth = 0,\n      _currentHeight = 0,\n      _newAttributes = new Uint8Array(16),\n      _enabledAttributes = new Uint8Array(16),\n      // frustum\n  _frustum = new THREE.Frustum(),\n      // camera matrices cache\n  _projScreenMatrix = new THREE.Matrix4(),\n      _projScreenMatrixPS = new THREE.Matrix4(),\n      _vector3 = new THREE.Vector3(),\n      // light arrays cache\n  _direction = new THREE.Vector3(),\n      _lightsNeedUpdate = true,\n      _lights = {\n    ambient: [0, 0, 0],\n    directional: {\n      length: 0,\n      colors: [],\n      positions: []\n    },\n    point: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: []\n    },\n    spot: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: [],\n      directions: [],\n      anglesCos: [],\n      exponents: []\n    },\n    hemi: {\n      length: 0,\n      skyColors: [],\n      groundColors: [],\n      positions: []\n    }\n  }; // initialize\n\n\n  var _gl;\n\n  try {\n    var attributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer\n    };\n    _gl = _context || _canvas.getContext('webgl', attributes) || _canvas.getContext('experimental-webgl', attributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw 'Error creating WebGL context with your selected attributes.';\n      } else {\n        throw 'Error creating WebGL context.';\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (_gl.getShaderPrecisionFormat === undefined) {\n    _gl.getShaderPrecisionFormat = function () {\n      return {\n        'rangeMin': 1,\n        'rangeMax': 1,\n        'precision': 1\n      };\n    };\n  }\n\n  var extensions = new THREE.WebGLExtensions(_gl);\n  extensions.get('OES_texture_float');\n  extensions.get('OES_texture_float_linear');\n  extensions.get('OES_standard_derivatives');\n\n  if (_logarithmicDepthBuffer) {\n    extensions.get('EXT_frag_depth');\n  } //\n\n\n  function setDefaultGLState() {\n    _gl.clearColor(0, 0, 0, 1);\n\n    _gl.clearDepth(1);\n\n    _gl.clearStencil(0);\n\n    _gl.enable(_gl.DEPTH_TEST);\n\n    _gl.depthFunc(_gl.LEQUAL);\n\n    _gl.frontFace(_gl.CCW);\n\n    _gl.cullFace(_gl.BACK);\n\n    _gl.enable(_gl.CULL_FACE);\n\n    _gl.enable(_gl.BLEND);\n\n    _gl.blendEquation(_gl.FUNC_ADD);\n\n    _gl.blendFunc(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA);\n\n    _gl.viewport(_viewportX, _viewportY, _viewportWidth, _viewportHeight);\n\n    _gl.clearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  }\n\n  setDefaultGLState();\n  this.context = _gl; // GPU capabilities\n\n  var _maxTextures = _gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS);\n\n  var _maxVertexTextures = _gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\n  var _maxTextureSize = _gl.getParameter(_gl.MAX_TEXTURE_SIZE);\n\n  var _maxCubemapSize = _gl.getParameter(_gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\n  var _supportsVertexTextures = _maxVertexTextures > 0;\n\n  var _supportsBoneTextures = _supportsVertexTextures && extensions.get('OES_texture_float'); //\n\n\n  var _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER, _gl.HIGH_FLOAT);\n\n  var _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT);\n\n  var _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER, _gl.LOW_FLOAT);\n\n  var _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT);\n\n  var _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT);\n\n  var _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER, _gl.LOW_FLOAT);\n\n  var getCompressedTextureFormats = function () {\n    var array;\n    return function () {\n      if (array !== undefined) {\n        return array;\n      }\n\n      array = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc')) {\n        var formats = _gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          array.push(formats[i]);\n        }\n      }\n\n      return array;\n    };\n  }(); // clamp precision to maximum available\n\n\n  var highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\n  var mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\n\n  if (_precision === 'highp' && !highpAvailable) {\n    if (mediumpAvailable) {\n      _precision = 'mediump';\n      console.warn('THREE.WebGLRenderer: highp not supported, using mediump.');\n    } else {\n      _precision = 'lowp';\n      console.warn('THREE.WebGLRenderer: highp and mediump not supported, using lowp.');\n    }\n  }\n\n  if (_precision === 'mediump' && !mediumpAvailable) {\n    _precision = 'lowp';\n    console.warn('THREE.WebGLRenderer: mediump not supported, using lowp.');\n  } // Plugins\n\n\n  var shadowMapPlugin = new THREE.ShadowMapPlugin(this, lights, _webglObjects, _webglObjectsImmediate);\n  var spritePlugin = new THREE.SpritePlugin(this, sprites);\n  var lensFlarePlugin = new THREE.LensFlarePlugin(this, lensFlares); // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.supportsVertexTextures = function () {\n    return _supportsVertexTextures;\n  };\n\n  this.supportsFloatTextures = function () {\n    return extensions.get('OES_texture_float');\n  };\n\n  this.supportsStandardDerivatives = function () {\n    return extensions.get('OES_standard_derivatives');\n  };\n\n  this.supportsCompressedTextureS3TC = function () {\n    return extensions.get('WEBGL_compressed_texture_s3tc');\n  };\n\n  this.supportsCompressedTexturePVRTC = function () {\n    return extensions.get('WEBGL_compressed_texture_pvrtc');\n  };\n\n  this.supportsBlendMinMax = function () {\n    return extensions.get('EXT_blend_minmax');\n  };\n\n  this.getMaxAnisotropy = function () {\n    var value;\n    return function () {\n      if (value !== undefined) {\n        return value;\n      }\n\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n      value = extension !== null ? _gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n      return value;\n    };\n  }();\n\n  this.getPrecision = function () {\n    return _precision;\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    _canvas.width = width * this.devicePixelRatio;\n    _canvas.height = height * this.devicePixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    _viewportX = x * this.devicePixelRatio;\n    _viewportY = y * this.devicePixelRatio;\n    _viewportWidth = width * this.devicePixelRatio;\n    _viewportHeight = height * this.devicePixelRatio;\n\n    _gl.viewport(_viewportX, _viewportY, _viewportWidth, _viewportHeight);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    _gl.scissor(x * this.devicePixelRatio, y * this.devicePixelRatio, width * this.devicePixelRatio, height * this.devicePixelRatio);\n  };\n\n  this.enableScissorTest = function (enable) {\n    enable ? _gl.enable(_gl.SCISSOR_TEST) : _gl.disable(_gl.SCISSOR_TEST);\n  }; // Clearing\n\n\n  this.setClearColor = function (color, alpha) {\n    _clearColor.set(color);\n\n    _clearAlpha = alpha !== undefined ? alpha : 1;\n\n    _gl.clearColor(_clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha);\n  };\n\n  this.setClearColorHex = function (hex, alpha) {\n    console.warn('THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.');\n    this.setClearColor(hex, alpha);\n  };\n\n  this.getClearColor = function () {\n    return _clearColor;\n  };\n\n  this.getClearAlpha = function () {\n    return _clearAlpha;\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    _gl.clear(_gl.COLOR_BUFFER_BIT);\n  };\n\n  this.clearDepth = function () {\n    _gl.clear(_gl.DEPTH_BUFFER_BIT);\n  };\n\n  this.clearStencil = function () {\n    _gl.clear(_gl.STENCIL_BUFFER_BIT);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; // Reset\n\n\n  this.resetGLState = function () {\n    _currentProgram = null;\n    _currentCamera = null;\n    _oldBlending = -1;\n    _oldDepthTest = -1;\n    _oldDepthWrite = -1;\n    _oldDoubleSided = -1;\n    _oldFlipSided = -1;\n    _currentGeometryGroupHash = -1;\n    _currentMaterialId = -1;\n    _lightsNeedUpdate = true;\n  }; // Buffer allocation\n\n\n  function createParticleBuffers(geometry) {\n    geometry.__webglVertexBuffer = _gl.createBuffer();\n    geometry.__webglColorBuffer = _gl.createBuffer();\n    _this.info.memory.geometries++;\n  }\n\n  ;\n\n  function createLineBuffers(geometry) {\n    geometry.__webglVertexBuffer = _gl.createBuffer();\n    geometry.__webglColorBuffer = _gl.createBuffer();\n    geometry.__webglLineDistanceBuffer = _gl.createBuffer();\n    _this.info.memory.geometries++;\n  }\n\n  ;\n\n  function createMeshBuffers(geometryGroup) {\n    geometryGroup.__webglVertexBuffer = _gl.createBuffer();\n    geometryGroup.__webglNormalBuffer = _gl.createBuffer();\n    geometryGroup.__webglTangentBuffer = _gl.createBuffer();\n    geometryGroup.__webglColorBuffer = _gl.createBuffer();\n    geometryGroup.__webglUVBuffer = _gl.createBuffer();\n    geometryGroup.__webglUV2Buffer = _gl.createBuffer();\n    geometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\n    geometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\n    geometryGroup.__webglFaceBuffer = _gl.createBuffer();\n    geometryGroup.__webglLineBuffer = _gl.createBuffer();\n    var m, ml;\n\n    if (geometryGroup.numMorphTargets) {\n      geometryGroup.__webglMorphTargetsBuffers = [];\n\n      for (m = 0, ml = geometryGroup.numMorphTargets; m < ml; m++) {\n        geometryGroup.__webglMorphTargetsBuffers.push(_gl.createBuffer());\n      }\n    }\n\n    if (geometryGroup.numMorphNormals) {\n      geometryGroup.__webglMorphNormalsBuffers = [];\n\n      for (m = 0, ml = geometryGroup.numMorphNormals; m < ml; m++) {\n        geometryGroup.__webglMorphNormalsBuffers.push(_gl.createBuffer());\n      }\n    }\n\n    _this.info.memory.geometries++;\n  }\n\n  ; // Events\n\n  var onObjectRemoved = function (event) {\n    var object = event.target;\n    object.traverse(function (child) {\n      child.removeEventListener('remove', onObjectRemoved);\n      removeObject(child);\n    });\n  };\n\n  var onGeometryDispose = function (event) {\n    var geometry = event.target;\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    deallocateGeometry(geometry);\n  };\n\n  var onTextureDispose = function (event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n    _this.info.memory.textures--;\n  };\n\n  var onRenderTargetDispose = function (event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    _this.info.memory.textures--;\n  };\n\n  var onMaterialDispose = function (event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  }; // Buffer deallocation\n\n\n  var deleteBuffers = function (geometry) {\n    var buffers = ['__webglVertexBuffer', '__webglNormalBuffer', '__webglTangentBuffer', '__webglColorBuffer', '__webglUVBuffer', '__webglUV2Buffer', '__webglSkinIndicesBuffer', '__webglSkinWeightsBuffer', '__webglFaceBuffer', '__webglLineBuffer', '__webglLineDistanceBuffer'];\n\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var name = buffers[i];\n\n      if (geometry[name] !== undefined) {\n        _gl.deleteBuffer(geometry[name]);\n\n        delete geometry[name];\n      }\n    } // custom attributes\n\n\n    if (geometry.__webglCustomAttributesList !== undefined) {\n      for (var name in geometry.__webglCustomAttributesList) {\n        _gl.deleteBuffer(geometry.__webglCustomAttributesList[name].buffer);\n      }\n\n      delete geometry.__webglCustomAttributesList;\n    }\n\n    _this.info.memory.geometries--;\n  };\n\n  var deallocateGeometry = function (geometry) {\n    delete geometry.__webglInit;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      for (var name in geometry.attributes) {\n        var attribute = geometry.attributes[name];\n\n        if (attribute.buffer !== undefined) {\n          _gl.deleteBuffer(attribute.buffer);\n\n          delete attribute.buffer;\n        }\n      }\n\n      _this.info.memory.geometries--;\n    } else {\n      var geometryGroupsList = geometryGroups[geometry.id];\n\n      if (geometryGroupsList !== undefined) {\n        for (var i = 0, l = geometryGroupsList.length; i < l; i++) {\n          var geometryGroup = geometryGroupsList[i];\n\n          if (geometryGroup.numMorphTargets !== undefined) {\n            for (var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m++) {\n              _gl.deleteBuffer(geometryGroup.__webglMorphTargetsBuffers[m]);\n            }\n\n            delete geometryGroup.__webglMorphTargetsBuffers;\n          }\n\n          if (geometryGroup.numMorphNormals !== undefined) {\n            for (var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m++) {\n              _gl.deleteBuffer(geometryGroup.__webglMorphNormalsBuffers[m]);\n            }\n\n            delete geometryGroup.__webglMorphNormalsBuffers;\n          }\n\n          deleteBuffers(geometryGroup);\n        }\n\n        delete geometryGroups[geometry.id];\n      } else {\n        deleteBuffers(geometry);\n      }\n    } // TOFIX: Workaround for deleted geometry being currently bound\n\n\n    _currentGeometryGroupHash = -1;\n  };\n\n  var deallocateTexture = function (texture) {\n    if (texture.image && texture.image.__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(texture.image.__webglTextureCube);\n\n      delete texture.image.__webglTextureCube;\n    } else {\n      // 2D texture\n      if (texture.__webglInit === undefined) return;\n\n      _gl.deleteTexture(texture.__webglTexture);\n\n      delete texture.__webglTexture;\n      delete texture.__webglInit;\n    }\n  };\n\n  var deallocateRenderTarget = function (renderTarget) {\n    if (!renderTarget || renderTarget.__webglTexture === undefined) return;\n\n    _gl.deleteTexture(renderTarget.__webglTexture);\n\n    delete renderTarget.__webglTexture;\n\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTarget.__webglFramebuffer[i]);\n\n        _gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTarget.__webglFramebuffer);\n\n      _gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer);\n    }\n\n    delete renderTarget.__webglFramebuffer;\n    delete renderTarget.__webglRenderbuffer;\n  };\n\n  var deallocateMaterial = function (material) {\n    var program = material.program.program;\n    if (program === undefined) return;\n    material.program = undefined; // only deallocate GL program if this was the last use of shared program\n    // assumed there is only single copy of any program in the _programs list\n    // (that's how it's constructed)\n\n    var i, il, programInfo;\n    var deleteProgram = false;\n\n    for (i = 0, il = _programs.length; i < il; i++) {\n      programInfo = _programs[i];\n\n      if (programInfo.program === program) {\n        programInfo.usedTimes--;\n\n        if (programInfo.usedTimes === 0) {\n          deleteProgram = true;\n        }\n\n        break;\n      }\n    }\n\n    if (deleteProgram === true) {\n      // avoid using array.splice, this is costlier than creating new array from scratch\n      var newPrograms = [];\n\n      for (i = 0, il = _programs.length; i < il; i++) {\n        programInfo = _programs[i];\n\n        if (programInfo.program !== program) {\n          newPrograms.push(programInfo);\n        }\n      }\n\n      _programs = newPrograms;\n\n      _gl.deleteProgram(program);\n\n      _this.info.memory.programs--;\n    }\n  }; // Buffer initialization\n\n\n  function initCustomAttributes(object) {\n    var geometry = object.geometry;\n    var material = object.material;\n    var nvertices = geometry.vertices.length;\n\n    if (material.attributes) {\n      if (geometry.__webglCustomAttributesList === undefined) {\n        geometry.__webglCustomAttributesList = [];\n      }\n\n      for (var name in material.attributes) {\n        var attribute = material.attributes[name];\n\n        if (!attribute.__webglInitialized || attribute.createUniqueBuffers) {\n          attribute.__webglInitialized = true;\n          var size = 1; // \"f\" and \"i\"\n\n          if (attribute.type === 'v2') size = 2;else if (attribute.type === 'v3') size = 3;else if (attribute.type === 'v4') size = 4;else if (attribute.type === 'c') size = 3;\n          attribute.size = size;\n          attribute.array = new Float32Array(nvertices * size);\n          attribute.buffer = _gl.createBuffer();\n          attribute.buffer.belongsToAttribute = name;\n          attribute.needsUpdate = true;\n        }\n\n        geometry.__webglCustomAttributesList.push(attribute);\n      }\n    }\n  }\n\n  ;\n\n  function initParticleBuffers(geometry, object) {\n    var nvertices = geometry.vertices.length;\n    geometry.__vertexArray = new Float32Array(nvertices * 3);\n    geometry.__colorArray = new Float32Array(nvertices * 3);\n    geometry.__sortArray = [];\n    geometry.__webglParticleCount = nvertices;\n    initCustomAttributes(object);\n  }\n\n  ;\n\n  function initLineBuffers(geometry, object) {\n    var nvertices = geometry.vertices.length;\n    geometry.__vertexArray = new Float32Array(nvertices * 3);\n    geometry.__colorArray = new Float32Array(nvertices * 3);\n    geometry.__lineDistanceArray = new Float32Array(nvertices * 1);\n    geometry.__webglLineCount = nvertices;\n    initCustomAttributes(object);\n  }\n\n  ;\n\n  function initMeshBuffers(geometryGroup, object) {\n    var geometry = object.geometry,\n        faces3 = geometryGroup.faces3,\n        nvertices = faces3.length * 3,\n        ntris = faces3.length * 1,\n        nlines = faces3.length * 3,\n        material = getBufferMaterial(object, geometryGroup);\n    geometryGroup.__vertexArray = new Float32Array(nvertices * 3);\n    geometryGroup.__normalArray = new Float32Array(nvertices * 3);\n    geometryGroup.__colorArray = new Float32Array(nvertices * 3);\n    geometryGroup.__uvArray = new Float32Array(nvertices * 2);\n\n    if (geometry.faceVertexUvs.length > 1) {\n      geometryGroup.__uv2Array = new Float32Array(nvertices * 2);\n    }\n\n    if (geometry.hasTangents) {\n      geometryGroup.__tangentArray = new Float32Array(nvertices * 4);\n    }\n\n    if (object.geometry.skinWeights.length && object.geometry.skinIndices.length) {\n      geometryGroup.__skinIndexArray = new Float32Array(nvertices * 4);\n      geometryGroup.__skinWeightArray = new Float32Array(nvertices * 4);\n    }\n\n    var UintArray = extensions.get('OES_element_index_uint') !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\n\n    geometryGroup.__typeArray = UintArray;\n    geometryGroup.__faceArray = new UintArray(ntris * 3);\n    geometryGroup.__lineArray = new UintArray(nlines * 2);\n    var m, ml;\n\n    if (geometryGroup.numMorphTargets) {\n      geometryGroup.__morphTargetsArrays = [];\n\n      for (m = 0, ml = geometryGroup.numMorphTargets; m < ml; m++) {\n        geometryGroup.__morphTargetsArrays.push(new Float32Array(nvertices * 3));\n      }\n    }\n\n    if (geometryGroup.numMorphNormals) {\n      geometryGroup.__morphNormalsArrays = [];\n\n      for (m = 0, ml = geometryGroup.numMorphNormals; m < ml; m++) {\n        geometryGroup.__morphNormalsArrays.push(new Float32Array(nvertices * 3));\n      }\n    }\n\n    geometryGroup.__webglFaceCount = ntris * 3;\n    geometryGroup.__webglLineCount = nlines * 2; // custom attributes\n\n    if (material.attributes) {\n      if (geometryGroup.__webglCustomAttributesList === undefined) {\n        geometryGroup.__webglCustomAttributesList = [];\n      }\n\n      for (var name in material.attributes) {\n        // Do a shallow copy of the attribute object so different geometryGroup chunks use different\n        // attribute buffers which are correctly indexed in the setMeshBuffers function\n        var originalAttribute = material.attributes[name];\n        var attribute = {};\n\n        for (var property in originalAttribute) {\n          attribute[property] = originalAttribute[property];\n        }\n\n        if (!attribute.__webglInitialized || attribute.createUniqueBuffers) {\n          attribute.__webglInitialized = true;\n          var size = 1; // \"f\" and \"i\"\n\n          if (attribute.type === 'v2') size = 2;else if (attribute.type === 'v3') size = 3;else if (attribute.type === 'v4') size = 4;else if (attribute.type === 'c') size = 3;\n          attribute.size = size;\n          attribute.array = new Float32Array(nvertices * size);\n          attribute.buffer = _gl.createBuffer();\n          attribute.buffer.belongsToAttribute = name;\n          originalAttribute.needsUpdate = true;\n          attribute.__original = originalAttribute;\n        }\n\n        geometryGroup.__webglCustomAttributesList.push(attribute);\n      }\n    }\n\n    geometryGroup.__inittedArrays = true;\n  }\n\n  ;\n\n  function getBufferMaterial(object, geometryGroup) {\n    return object.material instanceof THREE.MeshFaceMaterial ? object.material.materials[geometryGroup.materialIndex] : object.material;\n  }\n\n  ;\n\n  function materialNeedsSmoothNormals(material) {\n    return material && material.shading !== undefined && material.shading === THREE.SmoothShading;\n  }\n\n  ; // Buffer setting\n\n  function setParticleBuffers(geometry, hint, object) {\n    var v,\n        c,\n        vertex,\n        offset,\n        index,\n        color,\n        vertices = geometry.vertices,\n        vl = vertices.length,\n        colors = geometry.colors,\n        cl = colors.length,\n        vertexArray = geometry.__vertexArray,\n        colorArray = geometry.__colorArray,\n        sortArray = geometry.__sortArray,\n        dirtyVertices = geometry.verticesNeedUpdate,\n        dirtyElements = geometry.elementsNeedUpdate,\n        dirtyColors = geometry.colorsNeedUpdate,\n        customAttributes = geometry.__webglCustomAttributesList,\n        i,\n        il,\n        a,\n        ca,\n        cal,\n        value,\n        customAttribute;\n\n    if (object.sortParticles) {\n      _projScreenMatrixPS.copy(_projScreenMatrix);\n\n      _projScreenMatrixPS.multiply(object.matrixWorld);\n\n      for (v = 0; v < vl; v++) {\n        vertex = vertices[v];\n\n        _vector3.copy(vertex);\n\n        _vector3.applyProjection(_projScreenMatrixPS);\n\n        sortArray[v] = [_vector3.z, v];\n      }\n\n      sortArray.sort(numericalSort);\n\n      for (v = 0; v < vl; v++) {\n        vertex = vertices[sortArray[v][1]];\n        offset = v * 3;\n        vertexArray[offset] = vertex.x;\n        vertexArray[offset + 1] = vertex.y;\n        vertexArray[offset + 2] = vertex.z;\n      }\n\n      for (c = 0; c < cl; c++) {\n        offset = c * 3;\n        color = colors[sortArray[c][1]];\n        colorArray[offset] = color.r;\n        colorArray[offset + 1] = color.g;\n        colorArray[offset + 2] = color.b;\n      }\n\n      if (customAttributes) {\n        for (i = 0, il = customAttributes.length; i < il; i++) {\n          customAttribute = customAttributes[i];\n          if (!(customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices')) continue;\n          offset = 0;\n          cal = customAttribute.value.length;\n\n          if (customAttribute.size === 1) {\n            for (ca = 0; ca < cal; ca++) {\n              index = sortArray[ca][1];\n              customAttribute.array[ca] = customAttribute.value[index];\n            }\n          } else if (customAttribute.size === 2) {\n            for (ca = 0; ca < cal; ca++) {\n              index = sortArray[ca][1];\n              value = customAttribute.value[index];\n              customAttribute.array[offset] = value.x;\n              customAttribute.array[offset + 1] = value.y;\n              offset += 2;\n            }\n          } else if (customAttribute.size === 3) {\n            if (customAttribute.type === 'c') {\n              for (ca = 0; ca < cal; ca++) {\n                index = sortArray[ca][1];\n                value = customAttribute.value[index];\n                customAttribute.array[offset] = value.r;\n                customAttribute.array[offset + 1] = value.g;\n                customAttribute.array[offset + 2] = value.b;\n                offset += 3;\n              }\n            } else {\n              for (ca = 0; ca < cal; ca++) {\n                index = sortArray[ca][1];\n                value = customAttribute.value[index];\n                customAttribute.array[offset] = value.x;\n                customAttribute.array[offset + 1] = value.y;\n                customAttribute.array[offset + 2] = value.z;\n                offset += 3;\n              }\n            }\n          } else if (customAttribute.size === 4) {\n            for (ca = 0; ca < cal; ca++) {\n              index = sortArray[ca][1];\n              value = customAttribute.value[index];\n              customAttribute.array[offset] = value.x;\n              customAttribute.array[offset + 1] = value.y;\n              customAttribute.array[offset + 2] = value.z;\n              customAttribute.array[offset + 3] = value.w;\n              offset += 4;\n            }\n          }\n        }\n      }\n    } else {\n      if (dirtyVertices) {\n        for (v = 0; v < vl; v++) {\n          vertex = vertices[v];\n          offset = v * 3;\n          vertexArray[offset] = vertex.x;\n          vertexArray[offset + 1] = vertex.y;\n          vertexArray[offset + 2] = vertex.z;\n        }\n      }\n\n      if (dirtyColors) {\n        for (c = 0; c < cl; c++) {\n          color = colors[c];\n          offset = c * 3;\n          colorArray[offset] = color.r;\n          colorArray[offset + 1] = color.g;\n          colorArray[offset + 2] = color.b;\n        }\n      }\n\n      if (customAttributes) {\n        for (i = 0, il = customAttributes.length; i < il; i++) {\n          customAttribute = customAttributes[i];\n\n          if (customAttribute.needsUpdate && (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices')) {\n            cal = customAttribute.value.length;\n            offset = 0;\n\n            if (customAttribute.size === 1) {\n              for (ca = 0; ca < cal; ca++) {\n                customAttribute.array[ca] = customAttribute.value[ca];\n              }\n            } else if (customAttribute.size === 2) {\n              for (ca = 0; ca < cal; ca++) {\n                value = customAttribute.value[ca];\n                customAttribute.array[offset] = value.x;\n                customAttribute.array[offset + 1] = value.y;\n                offset += 2;\n              }\n            } else if (customAttribute.size === 3) {\n              if (customAttribute.type === 'c') {\n                for (ca = 0; ca < cal; ca++) {\n                  value = customAttribute.value[ca];\n                  customAttribute.array[offset] = value.r;\n                  customAttribute.array[offset + 1] = value.g;\n                  customAttribute.array[offset + 2] = value.b;\n                  offset += 3;\n                }\n              } else {\n                for (ca = 0; ca < cal; ca++) {\n                  value = customAttribute.value[ca];\n                  customAttribute.array[offset] = value.x;\n                  customAttribute.array[offset + 1] = value.y;\n                  customAttribute.array[offset + 2] = value.z;\n                  offset += 3;\n                }\n              }\n            } else if (customAttribute.size === 4) {\n              for (ca = 0; ca < cal; ca++) {\n                value = customAttribute.value[ca];\n                customAttribute.array[offset] = value.x;\n                customAttribute.array[offset + 1] = value.y;\n                customAttribute.array[offset + 2] = value.z;\n                customAttribute.array[offset + 3] = value.w;\n                offset += 4;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (dirtyVertices || object.sortParticles) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometry.__webglVertexBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, vertexArray, hint);\n    }\n\n    if (dirtyColors || object.sortParticles) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometry.__webglColorBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, colorArray, hint);\n    }\n\n    if (customAttributes) {\n      for (i = 0, il = customAttributes.length; i < il; i++) {\n        customAttribute = customAttributes[i];\n\n        if (customAttribute.needsUpdate || object.sortParticles) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, customAttribute.buffer);\n\n          _gl.bufferData(_gl.ARRAY_BUFFER, customAttribute.array, hint);\n        }\n      }\n    }\n  }\n\n  function setLineBuffers(geometry, hint) {\n    var v,\n        c,\n        d,\n        vertex,\n        offset,\n        color,\n        vertices = geometry.vertices,\n        colors = geometry.colors,\n        lineDistances = geometry.lineDistances,\n        vl = vertices.length,\n        cl = colors.length,\n        dl = lineDistances.length,\n        vertexArray = geometry.__vertexArray,\n        colorArray = geometry.__colorArray,\n        lineDistanceArray = geometry.__lineDistanceArray,\n        dirtyVertices = geometry.verticesNeedUpdate,\n        dirtyColors = geometry.colorsNeedUpdate,\n        dirtyLineDistances = geometry.lineDistancesNeedUpdate,\n        customAttributes = geometry.__webglCustomAttributesList,\n        i,\n        il,\n        a,\n        ca,\n        cal,\n        value,\n        customAttribute;\n\n    if (dirtyVertices) {\n      for (v = 0; v < vl; v++) {\n        vertex = vertices[v];\n        offset = v * 3;\n        vertexArray[offset] = vertex.x;\n        vertexArray[offset + 1] = vertex.y;\n        vertexArray[offset + 2] = vertex.z;\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometry.__webglVertexBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, vertexArray, hint);\n    }\n\n    if (dirtyColors) {\n      for (c = 0; c < cl; c++) {\n        color = colors[c];\n        offset = c * 3;\n        colorArray[offset] = color.r;\n        colorArray[offset + 1] = color.g;\n        colorArray[offset + 2] = color.b;\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometry.__webglColorBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, colorArray, hint);\n    }\n\n    if (dirtyLineDistances) {\n      for (d = 0; d < dl; d++) {\n        lineDistanceArray[d] = lineDistances[d];\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, lineDistanceArray, hint);\n    }\n\n    if (customAttributes) {\n      for (i = 0, il = customAttributes.length; i < il; i++) {\n        customAttribute = customAttributes[i];\n\n        if (customAttribute.needsUpdate && (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices')) {\n          offset = 0;\n          cal = customAttribute.value.length;\n\n          if (customAttribute.size === 1) {\n            for (ca = 0; ca < cal; ca++) {\n              customAttribute.array[ca] = customAttribute.value[ca];\n            }\n          } else if (customAttribute.size === 2) {\n            for (ca = 0; ca < cal; ca++) {\n              value = customAttribute.value[ca];\n              customAttribute.array[offset] = value.x;\n              customAttribute.array[offset + 1] = value.y;\n              offset += 2;\n            }\n          } else if (customAttribute.size === 3) {\n            if (customAttribute.type === 'c') {\n              for (ca = 0; ca < cal; ca++) {\n                value = customAttribute.value[ca];\n                customAttribute.array[offset] = value.r;\n                customAttribute.array[offset + 1] = value.g;\n                customAttribute.array[offset + 2] = value.b;\n                offset += 3;\n              }\n            } else {\n              for (ca = 0; ca < cal; ca++) {\n                value = customAttribute.value[ca];\n                customAttribute.array[offset] = value.x;\n                customAttribute.array[offset + 1] = value.y;\n                customAttribute.array[offset + 2] = value.z;\n                offset += 3;\n              }\n            }\n          } else if (customAttribute.size === 4) {\n            for (ca = 0; ca < cal; ca++) {\n              value = customAttribute.value[ca];\n              customAttribute.array[offset] = value.x;\n              customAttribute.array[offset + 1] = value.y;\n              customAttribute.array[offset + 2] = value.z;\n              customAttribute.array[offset + 3] = value.w;\n              offset += 4;\n            }\n          }\n\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, customAttribute.buffer);\n\n          _gl.bufferData(_gl.ARRAY_BUFFER, customAttribute.array, hint);\n        }\n      }\n    }\n  }\n\n  function setMeshBuffers(geometryGroup, object, hint, dispose, material) {\n    if (!geometryGroup.__inittedArrays) {\n      return;\n    }\n\n    var needsSmoothNormals = materialNeedsSmoothNormals(material);\n    var f,\n        fl,\n        fi,\n        face,\n        vertexNormals,\n        faceNormal,\n        normal,\n        vertexColors,\n        faceColor,\n        vertexTangents,\n        uv,\n        uv2,\n        v1,\n        v2,\n        v3,\n        v4,\n        t1,\n        t2,\n        t3,\n        t4,\n        n1,\n        n2,\n        n3,\n        n4,\n        c1,\n        c2,\n        c3,\n        sw1,\n        sw2,\n        sw3,\n        sw4,\n        si1,\n        si2,\n        si3,\n        si4,\n        sa1,\n        sa2,\n        sa3,\n        sa4,\n        sb1,\n        sb2,\n        sb3,\n        sb4,\n        m,\n        ml,\n        i,\n        il,\n        vn,\n        uvi,\n        uv2i,\n        vk,\n        vkl,\n        vka,\n        nka,\n        chf,\n        faceVertexNormals,\n        a,\n        vertexIndex = 0,\n        offset = 0,\n        offset_uv = 0,\n        offset_uv2 = 0,\n        offset_face = 0,\n        offset_normal = 0,\n        offset_tangent = 0,\n        offset_line = 0,\n        offset_color = 0,\n        offset_skin = 0,\n        offset_morphTarget = 0,\n        offset_custom = 0,\n        offset_customSrc = 0,\n        value,\n        vertexArray = geometryGroup.__vertexArray,\n        uvArray = geometryGroup.__uvArray,\n        uv2Array = geometryGroup.__uv2Array,\n        normalArray = geometryGroup.__normalArray,\n        tangentArray = geometryGroup.__tangentArray,\n        colorArray = geometryGroup.__colorArray,\n        skinIndexArray = geometryGroup.__skinIndexArray,\n        skinWeightArray = geometryGroup.__skinWeightArray,\n        morphTargetsArrays = geometryGroup.__morphTargetsArrays,\n        morphNormalsArrays = geometryGroup.__morphNormalsArrays,\n        customAttributes = geometryGroup.__webglCustomAttributesList,\n        customAttribute,\n        faceArray = geometryGroup.__faceArray,\n        lineArray = geometryGroup.__lineArray,\n        geometry = object.geometry,\n        // this is shared for all chunks\n    dirtyVertices = geometry.verticesNeedUpdate,\n        dirtyElements = geometry.elementsNeedUpdate,\n        dirtyUvs = geometry.uvsNeedUpdate,\n        dirtyNormals = geometry.normalsNeedUpdate,\n        dirtyTangents = geometry.tangentsNeedUpdate,\n        dirtyColors = geometry.colorsNeedUpdate,\n        dirtyMorphTargets = geometry.morphTargetsNeedUpdate,\n        vertices = geometry.vertices,\n        chunk_faces3 = geometryGroup.faces3,\n        obj_faces = geometry.faces,\n        obj_uvs = geometry.faceVertexUvs[0],\n        obj_uvs2 = geometry.faceVertexUvs[1],\n        obj_colors = geometry.colors,\n        obj_skinIndices = geometry.skinIndices,\n        obj_skinWeights = geometry.skinWeights,\n        morphTargets = geometry.morphTargets,\n        morphNormals = geometry.morphNormals;\n\n    if (dirtyVertices) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        face = obj_faces[chunk_faces3[f]];\n        v1 = vertices[face.a];\n        v2 = vertices[face.b];\n        v3 = vertices[face.c];\n        vertexArray[offset] = v1.x;\n        vertexArray[offset + 1] = v1.y;\n        vertexArray[offset + 2] = v1.z;\n        vertexArray[offset + 3] = v2.x;\n        vertexArray[offset + 4] = v2.y;\n        vertexArray[offset + 5] = v2.z;\n        vertexArray[offset + 6] = v3.x;\n        vertexArray[offset + 7] = v3.y;\n        vertexArray[offset + 8] = v3.z;\n        offset += 9;\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, vertexArray, hint);\n    }\n\n    if (dirtyMorphTargets) {\n      for (vk = 0, vkl = morphTargets.length; vk < vkl; vk++) {\n        offset_morphTarget = 0;\n\n        for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n          chf = chunk_faces3[f];\n          face = obj_faces[chf]; // morph positions\n\n          v1 = morphTargets[vk].vertices[face.a];\n          v2 = morphTargets[vk].vertices[face.b];\n          v3 = morphTargets[vk].vertices[face.c];\n          vka = morphTargetsArrays[vk];\n          vka[offset_morphTarget] = v1.x;\n          vka[offset_morphTarget + 1] = v1.y;\n          vka[offset_morphTarget + 2] = v1.z;\n          vka[offset_morphTarget + 3] = v2.x;\n          vka[offset_morphTarget + 4] = v2.y;\n          vka[offset_morphTarget + 5] = v2.z;\n          vka[offset_morphTarget + 6] = v3.x;\n          vka[offset_morphTarget + 7] = v3.y;\n          vka[offset_morphTarget + 8] = v3.z; // morph normals\n\n          if (material.morphNormals) {\n            if (needsSmoothNormals) {\n              faceVertexNormals = morphNormals[vk].vertexNormals[chf];\n              n1 = faceVertexNormals.a;\n              n2 = faceVertexNormals.b;\n              n3 = faceVertexNormals.c;\n            } else {\n              n1 = morphNormals[vk].faceNormals[chf];\n              n2 = n1;\n              n3 = n1;\n            }\n\n            nka = morphNormalsArrays[vk];\n            nka[offset_morphTarget] = n1.x;\n            nka[offset_morphTarget + 1] = n1.y;\n            nka[offset_morphTarget + 2] = n1.z;\n            nka[offset_morphTarget + 3] = n2.x;\n            nka[offset_morphTarget + 4] = n2.y;\n            nka[offset_morphTarget + 5] = n2.z;\n            nka[offset_morphTarget + 6] = n3.x;\n            nka[offset_morphTarget + 7] = n3.y;\n            nka[offset_morphTarget + 8] = n3.z;\n          } //\n\n\n          offset_morphTarget += 9;\n        }\n\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[vk]);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, morphTargetsArrays[vk], hint);\n\n        if (material.morphNormals) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[vk]);\n\n          _gl.bufferData(_gl.ARRAY_BUFFER, morphNormalsArrays[vk], hint);\n        }\n      }\n    }\n\n    if (obj_skinWeights.length) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        face = obj_faces[chunk_faces3[f]]; // weights\n\n        sw1 = obj_skinWeights[face.a];\n        sw2 = obj_skinWeights[face.b];\n        sw3 = obj_skinWeights[face.c];\n        skinWeightArray[offset_skin] = sw1.x;\n        skinWeightArray[offset_skin + 1] = sw1.y;\n        skinWeightArray[offset_skin + 2] = sw1.z;\n        skinWeightArray[offset_skin + 3] = sw1.w;\n        skinWeightArray[offset_skin + 4] = sw2.x;\n        skinWeightArray[offset_skin + 5] = sw2.y;\n        skinWeightArray[offset_skin + 6] = sw2.z;\n        skinWeightArray[offset_skin + 7] = sw2.w;\n        skinWeightArray[offset_skin + 8] = sw3.x;\n        skinWeightArray[offset_skin + 9] = sw3.y;\n        skinWeightArray[offset_skin + 10] = sw3.z;\n        skinWeightArray[offset_skin + 11] = sw3.w; // indices\n\n        si1 = obj_skinIndices[face.a];\n        si2 = obj_skinIndices[face.b];\n        si3 = obj_skinIndices[face.c];\n        skinIndexArray[offset_skin] = si1.x;\n        skinIndexArray[offset_skin + 1] = si1.y;\n        skinIndexArray[offset_skin + 2] = si1.z;\n        skinIndexArray[offset_skin + 3] = si1.w;\n        skinIndexArray[offset_skin + 4] = si2.x;\n        skinIndexArray[offset_skin + 5] = si2.y;\n        skinIndexArray[offset_skin + 6] = si2.z;\n        skinIndexArray[offset_skin + 7] = si2.w;\n        skinIndexArray[offset_skin + 8] = si3.x;\n        skinIndexArray[offset_skin + 9] = si3.y;\n        skinIndexArray[offset_skin + 10] = si3.z;\n        skinIndexArray[offset_skin + 11] = si3.w;\n        offset_skin += 12;\n      }\n\n      if (offset_skin > 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, skinIndexArray, hint);\n\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, skinWeightArray, hint);\n      }\n    }\n\n    if (dirtyColors) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        face = obj_faces[chunk_faces3[f]];\n        vertexColors = face.vertexColors;\n        faceColor = face.color;\n\n        if (vertexColors.length === 3 && material.vertexColors === THREE.VertexColors) {\n          c1 = vertexColors[0];\n          c2 = vertexColors[1];\n          c3 = vertexColors[2];\n        } else {\n          c1 = faceColor;\n          c2 = faceColor;\n          c3 = faceColor;\n        }\n\n        colorArray[offset_color] = c1.r;\n        colorArray[offset_color + 1] = c1.g;\n        colorArray[offset_color + 2] = c1.b;\n        colorArray[offset_color + 3] = c2.r;\n        colorArray[offset_color + 4] = c2.g;\n        colorArray[offset_color + 5] = c2.b;\n        colorArray[offset_color + 6] = c3.r;\n        colorArray[offset_color + 7] = c3.g;\n        colorArray[offset_color + 8] = c3.b;\n        offset_color += 9;\n      }\n\n      if (offset_color > 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, colorArray, hint);\n      }\n    }\n\n    if (dirtyTangents && geometry.hasTangents) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        face = obj_faces[chunk_faces3[f]];\n        vertexTangents = face.vertexTangents;\n        t1 = vertexTangents[0];\n        t2 = vertexTangents[1];\n        t3 = vertexTangents[2];\n        tangentArray[offset_tangent] = t1.x;\n        tangentArray[offset_tangent + 1] = t1.y;\n        tangentArray[offset_tangent + 2] = t1.z;\n        tangentArray[offset_tangent + 3] = t1.w;\n        tangentArray[offset_tangent + 4] = t2.x;\n        tangentArray[offset_tangent + 5] = t2.y;\n        tangentArray[offset_tangent + 6] = t2.z;\n        tangentArray[offset_tangent + 7] = t2.w;\n        tangentArray[offset_tangent + 8] = t3.x;\n        tangentArray[offset_tangent + 9] = t3.y;\n        tangentArray[offset_tangent + 10] = t3.z;\n        tangentArray[offset_tangent + 11] = t3.w;\n        offset_tangent += 12;\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, tangentArray, hint);\n    }\n\n    if (dirtyNormals) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        face = obj_faces[chunk_faces3[f]];\n        vertexNormals = face.vertexNormals;\n        faceNormal = face.normal;\n\n        if (vertexNormals.length === 3 && needsSmoothNormals) {\n          for (i = 0; i < 3; i++) {\n            vn = vertexNormals[i];\n            normalArray[offset_normal] = vn.x;\n            normalArray[offset_normal + 1] = vn.y;\n            normalArray[offset_normal + 2] = vn.z;\n            offset_normal += 3;\n          }\n        } else {\n          for (i = 0; i < 3; i++) {\n            normalArray[offset_normal] = faceNormal.x;\n            normalArray[offset_normal + 1] = faceNormal.y;\n            normalArray[offset_normal + 2] = faceNormal.z;\n            offset_normal += 3;\n          }\n        }\n      }\n\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, normalArray, hint);\n    }\n\n    if (dirtyUvs && obj_uvs) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        fi = chunk_faces3[f];\n        uv = obj_uvs[fi];\n        if (uv === undefined) continue;\n\n        for (i = 0; i < 3; i++) {\n          uvi = uv[i];\n          uvArray[offset_uv] = uvi.x;\n          uvArray[offset_uv + 1] = uvi.y;\n          offset_uv += 2;\n        }\n      }\n\n      if (offset_uv > 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, uvArray, hint);\n      }\n    }\n\n    if (dirtyUvs && obj_uvs2) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        fi = chunk_faces3[f];\n        uv2 = obj_uvs2[fi];\n        if (uv2 === undefined) continue;\n\n        for (i = 0; i < 3; i++) {\n          uv2i = uv2[i];\n          uv2Array[offset_uv2] = uv2i.x;\n          uv2Array[offset_uv2 + 1] = uv2i.y;\n          offset_uv2 += 2;\n        }\n      }\n\n      if (offset_uv2 > 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, uv2Array, hint);\n      }\n    }\n\n    if (dirtyElements) {\n      for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n        faceArray[offset_face] = vertexIndex;\n        faceArray[offset_face + 1] = vertexIndex + 1;\n        faceArray[offset_face + 2] = vertexIndex + 2;\n        offset_face += 3;\n        lineArray[offset_line] = vertexIndex;\n        lineArray[offset_line + 1] = vertexIndex + 1;\n        lineArray[offset_line + 2] = vertexIndex;\n        lineArray[offset_line + 3] = vertexIndex + 2;\n        lineArray[offset_line + 4] = vertexIndex + 1;\n        lineArray[offset_line + 5] = vertexIndex + 2;\n        offset_line += 6;\n        vertexIndex += 3;\n      }\n\n      _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer);\n\n      _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, faceArray, hint);\n\n      _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer);\n\n      _gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER, lineArray, hint);\n    }\n\n    if (customAttributes) {\n      for (i = 0, il = customAttributes.length; i < il; i++) {\n        customAttribute = customAttributes[i];\n        if (!customAttribute.__original.needsUpdate) continue;\n        offset_custom = 0;\n        offset_customSrc = 0;\n\n        if (customAttribute.size === 1) {\n          if (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              face = obj_faces[chunk_faces3[f]];\n              customAttribute.array[offset_custom] = customAttribute.value[face.a];\n              customAttribute.array[offset_custom + 1] = customAttribute.value[face.b];\n              customAttribute.array[offset_custom + 2] = customAttribute.value[face.c];\n              offset_custom += 3;\n            }\n          } else if (customAttribute.boundTo === 'faces') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              customAttribute.array[offset_custom] = value;\n              customAttribute.array[offset_custom + 1] = value;\n              customAttribute.array[offset_custom + 2] = value;\n              offset_custom += 3;\n            }\n          }\n        } else if (customAttribute.size === 2) {\n          if (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              face = obj_faces[chunk_faces3[f]];\n              v1 = customAttribute.value[face.a];\n              v2 = customAttribute.value[face.b];\n              v3 = customAttribute.value[face.c];\n              customAttribute.array[offset_custom] = v1.x;\n              customAttribute.array[offset_custom + 1] = v1.y;\n              customAttribute.array[offset_custom + 2] = v2.x;\n              customAttribute.array[offset_custom + 3] = v2.y;\n              customAttribute.array[offset_custom + 4] = v3.x;\n              customAttribute.array[offset_custom + 5] = v3.y;\n              offset_custom += 6;\n            }\n          } else if (customAttribute.boundTo === 'faces') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              v1 = value;\n              v2 = value;\n              v3 = value;\n              customAttribute.array[offset_custom] = v1.x;\n              customAttribute.array[offset_custom + 1] = v1.y;\n              customAttribute.array[offset_custom + 2] = v2.x;\n              customAttribute.array[offset_custom + 3] = v2.y;\n              customAttribute.array[offset_custom + 4] = v3.x;\n              customAttribute.array[offset_custom + 5] = v3.y;\n              offset_custom += 6;\n            }\n          }\n        } else if (customAttribute.size === 3) {\n          var pp;\n\n          if (customAttribute.type === 'c') {\n            pp = ['r', 'g', 'b'];\n          } else {\n            pp = ['x', 'y', 'z'];\n          }\n\n          if (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              face = obj_faces[chunk_faces3[f]];\n              v1 = customAttribute.value[face.a];\n              v2 = customAttribute.value[face.b];\n              v3 = customAttribute.value[face.c];\n              customAttribute.array[offset_custom] = v1[pp[0]];\n              customAttribute.array[offset_custom + 1] = v1[pp[1]];\n              customAttribute.array[offset_custom + 2] = v1[pp[2]];\n              customAttribute.array[offset_custom + 3] = v2[pp[0]];\n              customAttribute.array[offset_custom + 4] = v2[pp[1]];\n              customAttribute.array[offset_custom + 5] = v2[pp[2]];\n              customAttribute.array[offset_custom + 6] = v3[pp[0]];\n              customAttribute.array[offset_custom + 7] = v3[pp[1]];\n              customAttribute.array[offset_custom + 8] = v3[pp[2]];\n              offset_custom += 9;\n            }\n          } else if (customAttribute.boundTo === 'faces') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              v1 = value;\n              v2 = value;\n              v3 = value;\n              customAttribute.array[offset_custom] = v1[pp[0]];\n              customAttribute.array[offset_custom + 1] = v1[pp[1]];\n              customAttribute.array[offset_custom + 2] = v1[pp[2]];\n              customAttribute.array[offset_custom + 3] = v2[pp[0]];\n              customAttribute.array[offset_custom + 4] = v2[pp[1]];\n              customAttribute.array[offset_custom + 5] = v2[pp[2]];\n              customAttribute.array[offset_custom + 6] = v3[pp[0]];\n              customAttribute.array[offset_custom + 7] = v3[pp[1]];\n              customAttribute.array[offset_custom + 8] = v3[pp[2]];\n              offset_custom += 9;\n            }\n          } else if (customAttribute.boundTo === 'faceVertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              v1 = value[0];\n              v2 = value[1];\n              v3 = value[2];\n              customAttribute.array[offset_custom] = v1[pp[0]];\n              customAttribute.array[offset_custom + 1] = v1[pp[1]];\n              customAttribute.array[offset_custom + 2] = v1[pp[2]];\n              customAttribute.array[offset_custom + 3] = v2[pp[0]];\n              customAttribute.array[offset_custom + 4] = v2[pp[1]];\n              customAttribute.array[offset_custom + 5] = v2[pp[2]];\n              customAttribute.array[offset_custom + 6] = v3[pp[0]];\n              customAttribute.array[offset_custom + 7] = v3[pp[1]];\n              customAttribute.array[offset_custom + 8] = v3[pp[2]];\n              offset_custom += 9;\n            }\n          }\n        } else if (customAttribute.size === 4) {\n          if (customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              face = obj_faces[chunk_faces3[f]];\n              v1 = customAttribute.value[face.a];\n              v2 = customAttribute.value[face.b];\n              v3 = customAttribute.value[face.c];\n              customAttribute.array[offset_custom] = v1.x;\n              customAttribute.array[offset_custom + 1] = v1.y;\n              customAttribute.array[offset_custom + 2] = v1.z;\n              customAttribute.array[offset_custom + 3] = v1.w;\n              customAttribute.array[offset_custom + 4] = v2.x;\n              customAttribute.array[offset_custom + 5] = v2.y;\n              customAttribute.array[offset_custom + 6] = v2.z;\n              customAttribute.array[offset_custom + 7] = v2.w;\n              customAttribute.array[offset_custom + 8] = v3.x;\n              customAttribute.array[offset_custom + 9] = v3.y;\n              customAttribute.array[offset_custom + 10] = v3.z;\n              customAttribute.array[offset_custom + 11] = v3.w;\n              offset_custom += 12;\n            }\n          } else if (customAttribute.boundTo === 'faces') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              v1 = value;\n              v2 = value;\n              v3 = value;\n              customAttribute.array[offset_custom] = v1.x;\n              customAttribute.array[offset_custom + 1] = v1.y;\n              customAttribute.array[offset_custom + 2] = v1.z;\n              customAttribute.array[offset_custom + 3] = v1.w;\n              customAttribute.array[offset_custom + 4] = v2.x;\n              customAttribute.array[offset_custom + 5] = v2.y;\n              customAttribute.array[offset_custom + 6] = v2.z;\n              customAttribute.array[offset_custom + 7] = v2.w;\n              customAttribute.array[offset_custom + 8] = v3.x;\n              customAttribute.array[offset_custom + 9] = v3.y;\n              customAttribute.array[offset_custom + 10] = v3.z;\n              customAttribute.array[offset_custom + 11] = v3.w;\n              offset_custom += 12;\n            }\n          } else if (customAttribute.boundTo === 'faceVertices') {\n            for (f = 0, fl = chunk_faces3.length; f < fl; f++) {\n              value = customAttribute.value[chunk_faces3[f]];\n              v1 = value[0];\n              v2 = value[1];\n              v3 = value[2];\n              customAttribute.array[offset_custom] = v1.x;\n              customAttribute.array[offset_custom + 1] = v1.y;\n              customAttribute.array[offset_custom + 2] = v1.z;\n              customAttribute.array[offset_custom + 3] = v1.w;\n              customAttribute.array[offset_custom + 4] = v2.x;\n              customAttribute.array[offset_custom + 5] = v2.y;\n              customAttribute.array[offset_custom + 6] = v2.z;\n              customAttribute.array[offset_custom + 7] = v2.w;\n              customAttribute.array[offset_custom + 8] = v3.x;\n              customAttribute.array[offset_custom + 9] = v3.y;\n              customAttribute.array[offset_custom + 10] = v3.z;\n              customAttribute.array[offset_custom + 11] = v3.w;\n              offset_custom += 12;\n            }\n          }\n        }\n\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, customAttribute.buffer);\n\n        _gl.bufferData(_gl.ARRAY_BUFFER, customAttribute.array, hint);\n      }\n    }\n\n    if (dispose) {\n      delete geometryGroup.__inittedArrays;\n      delete geometryGroup.__colorArray;\n      delete geometryGroup.__normalArray;\n      delete geometryGroup.__tangentArray;\n      delete geometryGroup.__uvArray;\n      delete geometryGroup.__uv2Array;\n      delete geometryGroup.__faceArray;\n      delete geometryGroup.__vertexArray;\n      delete geometryGroup.__lineArray;\n      delete geometryGroup.__skinIndexArray;\n      delete geometryGroup.__skinWeightArray;\n    }\n  }\n\n  ;\n\n  function setDirectBuffers(geometry) {\n    var attributes = geometry.attributes;\n    var attributesKeys = geometry.attributesKeys;\n\n    for (var i = 0, l = attributesKeys.length; i < l; i++) {\n      var key = attributesKeys[i];\n      var attribute = attributes[key];\n\n      if (attribute.buffer === undefined) {\n        attribute.buffer = _gl.createBuffer();\n        attribute.needsUpdate = true;\n      }\n\n      if (attribute.needsUpdate === true) {\n        var bufferType = key === 'index' ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\n\n        _gl.bindBuffer(bufferType, attribute.buffer);\n\n        _gl.bufferData(bufferType, attribute.array, _gl.STATIC_DRAW);\n\n        attribute.needsUpdate = false;\n      }\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferImmediate = function (object, program, material) {\n    initAttributes();\n    if (object.hasPositions && !object.__webglVertexBuffer) object.__webglVertexBuffer = _gl.createBuffer();\n    if (object.hasNormals && !object.__webglNormalBuffer) object.__webglNormalBuffer = _gl.createBuffer();\n    if (object.hasUvs && !object.__webglUvBuffer) object.__webglUvBuffer = _gl.createBuffer();\n    if (object.hasColors && !object.__webglColorBuffer) object.__webglColorBuffer = _gl.createBuffer();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, object.__webglVertexBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      enableAttribute(program.attributes.position);\n\n      _gl.vertexAttribPointer(program.attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, object.__webglNormalBuffer);\n\n      if (material.shading === THREE.FlatShading) {\n        var nx,\n            ny,\n            nz,\n            nax,\n            nbx,\n            ncx,\n            nay,\n            nby,\n            ncy,\n            naz,\n            nbz,\n            ncz,\n            normalArray,\n            i,\n            il = object.count * 3;\n\n        for (i = 0; i < il; i += 9) {\n          normalArray = object.normalArray;\n          nax = normalArray[i];\n          nay = normalArray[i + 1];\n          naz = normalArray[i + 2];\n          nbx = normalArray[i + 3];\n          nby = normalArray[i + 4];\n          nbz = normalArray[i + 5];\n          ncx = normalArray[i + 6];\n          ncy = normalArray[i + 7];\n          ncz = normalArray[i + 8];\n          nx = (nax + nbx + ncx) / 3;\n          ny = (nay + nby + ncy) / 3;\n          nz = (naz + nbz + ncz) / 3;\n          normalArray[i] = nx;\n          normalArray[i + 1] = ny;\n          normalArray[i + 2] = nz;\n          normalArray[i + 3] = nx;\n          normalArray[i + 4] = ny;\n          normalArray[i + 5] = nz;\n          normalArray[i + 6] = nx;\n          normalArray[i + 7] = ny;\n          normalArray[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      enableAttribute(program.attributes.normal);\n\n      _gl.vertexAttribPointer(program.attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, object.__webglUvBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      enableAttribute(program.attributes.uv);\n\n      _gl.vertexAttribPointer(program.attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== THREE.NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, object.__webglColorBuffer);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      enableAttribute(program.attributes.color);\n\n      _gl.vertexAttribPointer(program.attributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  function setupVertexAttributes(material, program, geometry, startIndex) {\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.attributes;\n    var programAttributesKeys = program.attributesKeys;\n\n    for (var i = 0, l = programAttributesKeys.length; i < l; i++) {\n      var key = programAttributesKeys[i];\n      var programAttribute = programAttributes[key];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[key];\n\n        if (geometryAttribute !== undefined) {\n          var size = geometryAttribute.itemSize;\n\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryAttribute.buffer);\n\n          enableAttribute(programAttribute);\n\n          _gl.vertexAttribPointer(programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4); // 4 bytes per Float32\n\n        } else if (material.defaultAttributeValues !== undefined) {\n          if (material.defaultAttributeValues[key].length === 2) {\n            _gl.vertexAttrib2fv(programAttribute, material.defaultAttributeValues[key]);\n          } else if (material.defaultAttributeValues[key].length === 3) {\n            _gl.vertexAttrib3fv(programAttribute, material.defaultAttributeValues[key]);\n          }\n        }\n      }\n    }\n\n    disableUnusedAttributes();\n  }\n\n  this.renderBufferDirect = function (camera, lights, fog, material, geometry, object) {\n    if (material.visible === false) return;\n    var program = setProgram(camera, lights, fog, material, object);\n    var updateBuffers = false,\n        wireframeBit = material.wireframe ? 1 : 0,\n        geometryHash = geometry.id * 0xffffff + program.id * 2 + wireframeBit;\n\n    if (geometryHash !== _currentGeometryGroupHash) {\n      _currentGeometryGroupHash = geometryHash;\n      updateBuffers = true;\n    }\n\n    if (updateBuffers) {\n      initAttributes();\n    } // render mesh\n\n\n    if (object instanceof THREE.Mesh) {\n      var mode = material.wireframe === true ? _gl.LINES : _gl.TRIANGLES;\n      var index = geometry.attributes.index;\n\n      if (index) {\n        // indexed triangles\n        var type, size;\n\n        if (index.array instanceof Uint32Array && extensions.get('OES_element_index_uint')) {\n          type = _gl.UNSIGNED_INT;\n          size = 4;\n        } else {\n          type = _gl.UNSIGNED_SHORT;\n          size = 2;\n        }\n\n        var offsets = geometry.offsets;\n\n        if (offsets.length === 0) {\n          if (updateBuffers) {\n            setupVertexAttributes(material, program, geometry, 0);\n\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, index.buffer);\n          }\n\n          _gl.drawElements(mode, index.array.length, type, 0);\n\n          _this.info.render.calls++;\n          _this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n\n          _this.info.render.faces += index.array.length / 3;\n        } else {\n          // if there is more than 1 chunk\n          // must set attribute pointers to use new offsets for each chunk\n          // even if geometry and materials didn't change\n          updateBuffers = true;\n\n          for (var i = 0, il = offsets.length; i < il; i++) {\n            var startIndex = offsets[i].index;\n\n            if (updateBuffers) {\n              setupVertexAttributes(material, program, geometry, startIndex);\n\n              _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, index.buffer);\n            } // render indexed triangles\n\n\n            _gl.drawElements(mode, offsets[i].count, type, offsets[i].start * size);\n\n            _this.info.render.calls++;\n            _this.info.render.vertices += offsets[i].count; // not really true, here vertices can be shared\n\n            _this.info.render.faces += offsets[i].count / 3;\n          }\n        }\n      } else {\n        // non-indexed triangles\n        if (updateBuffers) {\n          setupVertexAttributes(material, program, geometry, 0);\n        }\n\n        var position = geometry.attributes['position']; // render non-indexed triangles\n\n        _gl.drawArrays(mode, 0, position.array.length / 3);\n\n        _this.info.render.calls++;\n        _this.info.render.vertices += position.array.length / 3;\n        _this.info.render.faces += position.array.length / 9;\n      }\n    } else if (object instanceof THREE.PointCloud) {\n      // render particles\n      if (updateBuffers) {\n        setupVertexAttributes(material, program, geometry, 0);\n      }\n\n      var position = geometry.attributes.position; // render particles\n\n      _gl.drawArrays(_gl.POINTS, 0, position.array.length / 3);\n\n      _this.info.render.calls++;\n      _this.info.render.points += position.array.length / 3;\n    } else if (object instanceof THREE.Line) {\n      var mode = object.mode === THREE.LineStrip ? _gl.LINE_STRIP : _gl.LINES;\n      setLineWidth(material.linewidth);\n      var index = geometry.attributes.index;\n\n      if (index) {\n        // indexed lines\n        var type, size;\n\n        if (index.array instanceof Uint32Array) {\n          type = _gl.UNSIGNED_INT;\n          size = 4;\n        } else {\n          type = _gl.UNSIGNED_SHORT;\n          size = 2;\n        }\n\n        var offsets = geometry.offsets;\n\n        if (offsets.length === 0) {\n          if (updateBuffers) {\n            setupVertexAttributes(material, program, geometry, 0);\n\n            _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, index.buffer);\n          }\n\n          _gl.drawElements(mode, index.array.length, type, 0); // 2 bytes per Uint16Array\n\n\n          _this.info.render.calls++;\n          _this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n        } else {\n          // if there is more than 1 chunk\n          // must set attribute pointers to use new offsets for each chunk\n          // even if geometry and materials didn't change\n          if (offsets.length > 1) updateBuffers = true;\n\n          for (var i = 0, il = offsets.length; i < il; i++) {\n            var startIndex = offsets[i].index;\n\n            if (updateBuffers) {\n              setupVertexAttributes(material, program, geometry, startIndex);\n\n              _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, index.buffer);\n            } // render indexed lines\n\n\n            _gl.drawElements(mode, offsets[i].count, type, offsets[i].start * size); // 2 bytes per Uint16Array\n\n\n            _this.info.render.calls++;\n            _this.info.render.vertices += offsets[i].count; // not really true, here vertices can be shared\n          }\n        }\n      } else {\n        // non-indexed lines\n        if (updateBuffers) {\n          setupVertexAttributes(material, program, geometry, 0);\n        }\n\n        var position = geometry.attributes.position;\n\n        _gl.drawArrays(mode, 0, position.array.length / 3);\n\n        _this.info.render.calls++;\n        _this.info.render.points += position.array.length / 3;\n      }\n    }\n  };\n\n  this.renderBuffer = function (camera, lights, fog, material, geometryGroup, object) {\n    if (material.visible === false) return;\n    var program = setProgram(camera, lights, fog, material, object);\n    var attributes = program.attributes;\n    var updateBuffers = false,\n        wireframeBit = material.wireframe ? 1 : 0,\n        geometryGroupHash = geometryGroup.id * 0xffffff + program.id * 2 + wireframeBit;\n\n    if (geometryGroupHash !== _currentGeometryGroupHash) {\n      _currentGeometryGroupHash = geometryGroupHash;\n      updateBuffers = true;\n    }\n\n    if (updateBuffers) {\n      initAttributes();\n    } // vertices\n\n\n    if (!material.morphTargets && attributes.position >= 0) {\n      if (updateBuffers) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n\n        enableAttribute(attributes.position);\n\n        _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n      }\n    } else {\n      if (object.morphTargetBase) {\n        setupMorphTargets(material, geometryGroup, object);\n      }\n    }\n\n    if (updateBuffers) {\n      // custom attributes\n      // Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\n      if (geometryGroup.__webglCustomAttributesList) {\n        for (var i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i++) {\n          var attribute = geometryGroup.__webglCustomAttributesList[i];\n\n          if (attributes[attribute.buffer.belongsToAttribute] >= 0) {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, attribute.buffer);\n\n            enableAttribute(attributes[attribute.buffer.belongsToAttribute]);\n\n            _gl.vertexAttribPointer(attributes[attribute.buffer.belongsToAttribute], attribute.size, _gl.FLOAT, false, 0, 0);\n          }\n        }\n      } // colors\n\n\n      if (attributes.color >= 0) {\n        if (object.geometry.colors.length > 0 || object.geometry.faces.length > 0) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer);\n\n          enableAttribute(attributes.color);\n\n          _gl.vertexAttribPointer(attributes.color, 3, _gl.FLOAT, false, 0, 0);\n        } else if (material.defaultAttributeValues !== undefined) {\n          _gl.vertexAttrib3fv(attributes.color, material.defaultAttributeValues.color);\n        }\n      } // normals\n\n\n      if (attributes.normal >= 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n\n        enableAttribute(attributes.normal);\n\n        _gl.vertexAttribPointer(attributes.normal, 3, _gl.FLOAT, false, 0, 0);\n      } // tangents\n\n\n      if (attributes.tangent >= 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer);\n\n        enableAttribute(attributes.tangent);\n\n        _gl.vertexAttribPointer(attributes.tangent, 4, _gl.FLOAT, false, 0, 0);\n      } // uvs\n\n\n      if (attributes.uv >= 0) {\n        if (object.geometry.faceVertexUvs[0]) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer);\n\n          enableAttribute(attributes.uv);\n\n          _gl.vertexAttribPointer(attributes.uv, 2, _gl.FLOAT, false, 0, 0);\n        } else if (material.defaultAttributeValues !== undefined) {\n          _gl.vertexAttrib2fv(attributes.uv, material.defaultAttributeValues.uv);\n        }\n      }\n\n      if (attributes.uv2 >= 0) {\n        if (object.geometry.faceVertexUvs[1]) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer);\n\n          enableAttribute(attributes.uv2);\n\n          _gl.vertexAttribPointer(attributes.uv2, 2, _gl.FLOAT, false, 0, 0);\n        } else if (material.defaultAttributeValues !== undefined) {\n          _gl.vertexAttrib2fv(attributes.uv2, material.defaultAttributeValues.uv2);\n        }\n      }\n\n      if (material.skinning && attributes.skinIndex >= 0 && attributes.skinWeight >= 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer);\n\n        enableAttribute(attributes.skinIndex);\n\n        _gl.vertexAttribPointer(attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0);\n\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer);\n\n        enableAttribute(attributes.skinWeight);\n\n        _gl.vertexAttribPointer(attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0);\n      } // line distances\n\n\n      if (attributes.lineDistance >= 0) {\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer);\n\n        enableAttribute(attributes.lineDistance);\n\n        _gl.vertexAttribPointer(attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0);\n      }\n    }\n\n    disableUnusedAttributes(); // render mesh\n\n    if (object instanceof THREE.Mesh) {\n      var type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT; // wireframe\n\n      if (material.wireframe) {\n        setLineWidth(material.wireframeLinewidth);\n        if (updateBuffers) _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer);\n\n        _gl.drawElements(_gl.LINES, geometryGroup.__webglLineCount, type, 0); // triangles\n\n      } else {\n        if (updateBuffers) _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer);\n\n        _gl.drawElements(_gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0);\n      }\n\n      _this.info.render.calls++;\n      _this.info.render.vertices += geometryGroup.__webglFaceCount;\n      _this.info.render.faces += geometryGroup.__webglFaceCount / 3; // render lines\n    } else if (object instanceof THREE.Line) {\n      var mode = object.mode === THREE.LineStrip ? _gl.LINE_STRIP : _gl.LINES;\n      setLineWidth(material.linewidth);\n\n      _gl.drawArrays(mode, 0, geometryGroup.__webglLineCount);\n\n      _this.info.render.calls++; // render particles\n    } else if (object instanceof THREE.PointCloud) {\n      _gl.drawArrays(_gl.POINTS, 0, geometryGroup.__webglParticleCount);\n\n      _this.info.render.calls++;\n      _this.info.render.points += geometryGroup.__webglParticleCount;\n    }\n  };\n\n  function initAttributes() {\n    for (var i = 0, l = _newAttributes.length; i < l; i++) {\n      _newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    _newAttributes[attribute] = 1;\n\n    if (_enabledAttributes[attribute] === 0) {\n      _gl.enableVertexAttribArray(attribute);\n\n      _enabledAttributes[attribute] = 1;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    for (var i = 0, l = _enabledAttributes.length; i < l; i++) {\n      if (_enabledAttributes[i] !== _newAttributes[i]) {\n        _gl.disableVertexAttribArray(i);\n\n        _enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function setupMorphTargets(material, geometryGroup, object) {\n    // set base\n    var attributes = material.program.attributes;\n\n    if (object.morphTargetBase !== -1 && attributes.position >= 0) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[object.morphTargetBase]);\n\n      enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    } else if (attributes.position >= 0) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n\n      enableAttribute(attributes.position);\n\n      _gl.vertexAttribPointer(attributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.morphTargetForcedOrder.length) {\n      // set forced order\n      var m = 0;\n      var order = object.morphTargetForcedOrder;\n      var influences = object.morphTargetInfluences;\n\n      while (m < material.numSupportedMorphTargets && m < order.length) {\n        if (attributes['morphTarget' + m] >= 0) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[order[m]]);\n\n          enableAttribute(attributes['morphTarget' + m]);\n\n          _gl.vertexAttribPointer(attributes['morphTarget' + m], 3, _gl.FLOAT, false, 0, 0);\n        }\n\n        if (attributes['morphNormal' + m] >= 0 && material.morphNormals) {\n          _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[order[m]]);\n\n          enableAttribute(attributes['morphNormal' + m]);\n\n          _gl.vertexAttribPointer(attributes['morphNormal' + m], 3, _gl.FLOAT, false, 0, 0);\n        }\n\n        object.__webglMorphTargetInfluences[m] = influences[order[m]];\n        m++;\n      }\n    } else {\n      // find the most influencing\n      var influence,\n          activeInfluenceIndices = [];\n      var influences = object.morphTargetInfluences;\n      var i,\n          il = influences.length;\n\n      for (i = 0; i < il; i++) {\n        influence = influences[i];\n\n        if (influence > 0) {\n          activeInfluenceIndices.push([influence, i]);\n        }\n      }\n\n      if (activeInfluenceIndices.length > material.numSupportedMorphTargets) {\n        activeInfluenceIndices.sort(numericalSort);\n        activeInfluenceIndices.length = material.numSupportedMorphTargets;\n      } else if (activeInfluenceIndices.length > material.numSupportedMorphNormals) {\n        activeInfluenceIndices.sort(numericalSort);\n      } else if (activeInfluenceIndices.length === 0) {\n        activeInfluenceIndices.push([0, 0]);\n      }\n\n      ;\n      var influenceIndex,\n          m = 0;\n\n      while (m < material.numSupportedMorphTargets) {\n        if (activeInfluenceIndices[m]) {\n          influenceIndex = activeInfluenceIndices[m][1];\n\n          if (attributes['morphTarget' + m] >= 0) {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[influenceIndex]);\n\n            enableAttribute(attributes['morphTarget' + m]);\n\n            _gl.vertexAttribPointer(attributes['morphTarget' + m], 3, _gl.FLOAT, false, 0, 0);\n          }\n\n          if (attributes['morphNormal' + m] >= 0 && material.morphNormals) {\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[influenceIndex]);\n\n            enableAttribute(attributes['morphNormal' + m]);\n\n            _gl.vertexAttribPointer(attributes['morphNormal' + m], 3, _gl.FLOAT, false, 0, 0);\n          }\n\n          object.__webglMorphTargetInfluences[m] = influences[influenceIndex];\n        } else {\n          /*\n          _gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n          \tif ( material.morphNormals ) {\n          \t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n          \t}\n          */\n          object.__webglMorphTargetInfluences[m] = 0;\n        }\n\n        m++;\n      }\n    } // load updated influences uniform\n\n\n    if (material.program.uniforms.morphTargetInfluences !== null) {\n      _gl.uniform1fv(material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences);\n    }\n  } // Sorting\n\n\n  function painterSortStable(a, b) {\n    if (a.material.id !== b.material.id) {\n      return b.material.id - a.material.id;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function numericalSort(a, b) {\n    return b[0] - a[0];\n  } // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (camera instanceof THREE.Camera === false) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    var fog = scene.fog; // reset caching for this frame\n\n    _currentGeometryGroupHash = -1;\n    _currentMaterialId = -1;\n    _currentCamera = null;\n    _lightsNeedUpdate = true; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === undefined) camera.updateMatrixWorld(); // update Skeleton objects\n\n    scene.traverse(function (object) {\n      if (object instanceof THREE.SkinnedMesh) {\n        object.skeleton.update();\n      }\n    });\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    lights.length = 0;\n    opaqueObjects.length = 0;\n    transparentObjects.length = 0;\n    sprites.length = 0;\n    lensFlares.length = 0;\n    projectObject(scene, scene);\n\n    if (_this.sortObjects === true) {\n      opaqueObjects.sort(painterSortStable);\n      transparentObjects.sort(reversePainterSortStable);\n    } // custom render plugins (pre pass)\n\n\n    shadowMapPlugin.render(scene, camera); //\n\n    _this.info.render.calls = 0;\n    _this.info.render.vertices = 0;\n    _this.info.render.faces = 0;\n    _this.info.render.points = 0;\n    this.setRenderTarget(renderTarget);\n\n    if (this.autoClear || forceClear) {\n      this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n    } // set matrices for immediate objects\n\n\n    for (var i = 0, il = _webglObjectsImmediate.length; i < il; i++) {\n      var webglObject = _webglObjectsImmediate[i];\n      var object = webglObject.object;\n\n      if (object.visible) {\n        setupMatrices(object, camera);\n        unrollImmediateBufferMaterial(webglObject);\n      }\n    }\n\n    if (scene.overrideMaterial) {\n      var material = scene.overrideMaterial;\n      this.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      this.setDepthTest(material.depthTest);\n      this.setDepthWrite(material.depthWrite);\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n      renderObjects(opaqueObjects, camera, lights, fog, true, material);\n      renderObjects(transparentObjects, camera, lights, fog, true, material);\n      renderObjectsImmediate(_webglObjectsImmediate, '', camera, lights, fog, false, material);\n    } else {\n      var material = null; // opaque pass (front-to-back order)\n\n      this.setBlending(THREE.NoBlending);\n      renderObjects(opaqueObjects, camera, lights, fog, false, material);\n      renderObjectsImmediate(_webglObjectsImmediate, 'opaque', camera, lights, fog, false, material); // transparent pass (back-to-front order)\n\n      renderObjects(transparentObjects, camera, lights, fog, true, material);\n      renderObjectsImmediate(_webglObjectsImmediate, 'transparent', camera, lights, fog, true, material);\n    } // custom render plugins (post pass)\n\n\n    spritePlugin.render(scene, camera);\n    lensFlarePlugin.render(scene, camera, _currentWidth, _currentHeight); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter) {\n      updateRenderTargetMipmap(renderTarget);\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    this.setDepthTest(true);\n    this.setDepthWrite(true); // _gl.finish();\n  };\n\n  function projectObject(scene, object) {\n    if (object.visible === false) return;\n\n    if (object instanceof THREE.Scene || object instanceof THREE.Group) {// skip\n    } else {\n      initObject(object, scene);\n\n      if (object instanceof THREE.Light) {\n        lights.push(object);\n      } else if (object instanceof THREE.Sprite) {\n        sprites.push(object);\n      } else if (object instanceof THREE.LensFlare) {\n        lensFlares.push(object);\n      } else {\n        var webglObjects = _webglObjects[object.id];\n\n        if (webglObjects && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n          updateObject(object, scene);\n\n          for (var i = 0, l = webglObjects.length; i < l; i++) {\n            var webglObject = webglObjects[i];\n            unrollBufferMaterial(webglObject);\n            webglObject.render = true;\n\n            if (_this.sortObjects === true) {\n              if (object.renderDepth !== null) {\n                webglObject.z = object.renderDepth;\n              } else {\n                _vector3.setFromMatrixPosition(object.matrixWorld);\n\n                _vector3.applyProjection(_projScreenMatrix);\n\n                webglObject.z = _vector3.z;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      projectObject(scene, object.children[i]);\n    }\n  }\n\n  function renderObjects(renderList, camera, lights, fog, useBlending, overrideMaterial) {\n    var material;\n\n    for (var i = renderList.length - 1; i !== -1; i--) {\n      var webglObject = renderList[i];\n      var object = webglObject.object;\n      var buffer = webglObject.buffer;\n      setupMatrices(object, camera);\n\n      if (overrideMaterial) {\n        material = overrideMaterial;\n      } else {\n        material = webglObject.material;\n        if (!material) continue;\n        if (useBlending) _this.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n\n        _this.setDepthTest(material.depthTest);\n\n        _this.setDepthWrite(material.depthWrite);\n\n        setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n      }\n\n      _this.setMaterialFaces(material);\n\n      if (buffer instanceof THREE.BufferGeometry) {\n        _this.renderBufferDirect(camera, lights, fog, material, buffer, object);\n      } else {\n        _this.renderBuffer(camera, lights, fog, material, buffer, object);\n      }\n    }\n  }\n\n  function renderObjectsImmediate(renderList, materialType, camera, lights, fog, useBlending, overrideMaterial) {\n    var material;\n\n    for (var i = 0, il = renderList.length; i < il; i++) {\n      var webglObject = renderList[i];\n      var object = webglObject.object;\n\n      if (object.visible) {\n        if (overrideMaterial) {\n          material = overrideMaterial;\n        } else {\n          material = webglObject[materialType];\n          if (!material) continue;\n          if (useBlending) _this.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n\n          _this.setDepthTest(material.depthTest);\n\n          _this.setDepthWrite(material.depthWrite);\n\n          setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n        }\n\n        _this.renderImmediateObject(camera, lights, fog, material, object);\n      }\n    }\n  }\n\n  this.renderImmediateObject = function (camera, lights, fog, material, object) {\n    var program = setProgram(camera, lights, fog, material, object);\n    _currentGeometryGroupHash = -1;\n\n    _this.setMaterialFaces(material);\n\n    if (object.immediateRenderCallback) {\n      object.immediateRenderCallback(program, _gl, _frustum);\n    } else {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program, material);\n      });\n    }\n  };\n\n  function unrollImmediateBufferMaterial(globject) {\n    var object = globject.object,\n        material = object.material;\n\n    if (material.transparent) {\n      globject.transparent = material;\n      globject.opaque = null;\n    } else {\n      globject.opaque = material;\n      globject.transparent = null;\n    }\n  }\n\n  function unrollBufferMaterial(globject) {\n    var object = globject.object;\n    var buffer = globject.buffer;\n    var geometry = object.geometry;\n    var material = object.material;\n\n    if (material instanceof THREE.MeshFaceMaterial) {\n      var materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\n      material = material.materials[materialIndex];\n      globject.material = material;\n\n      if (material.transparent) {\n        transparentObjects.push(globject);\n      } else {\n        opaqueObjects.push(globject);\n      }\n    } else if (material) {\n      globject.material = material;\n\n      if (material.transparent) {\n        transparentObjects.push(globject);\n      } else {\n        opaqueObjects.push(globject);\n      }\n    }\n  }\n\n  function initObject(object, scene) {\n    if (object.__webglInit === undefined) {\n      object.__webglInit = true;\n      object._modelViewMatrix = new THREE.Matrix4();\n      object._normalMatrix = new THREE.Matrix3();\n      object.addEventListener('removed', onObjectRemoved);\n    }\n\n    var geometry = object.geometry;\n\n    if (geometry === undefined) {// ImmediateRenderObject\n    } else if (geometry.__webglInit === undefined) {\n      geometry.__webglInit = true;\n      geometry.addEventListener('dispose', onGeometryDispose);\n\n      if (geometry instanceof THREE.BufferGeometry) {//\n      } else if (object instanceof THREE.Mesh) {\n        initGeometryGroups(scene, object, geometry);\n      } else if (object instanceof THREE.Line) {\n        if (geometry.__webglVertexBuffer === undefined) {\n          createLineBuffers(geometry);\n          initLineBuffers(geometry, object);\n          geometry.verticesNeedUpdate = true;\n          geometry.colorsNeedUpdate = true;\n          geometry.lineDistancesNeedUpdate = true;\n        }\n      } else if (object instanceof THREE.PointCloud) {\n        if (geometry.__webglVertexBuffer === undefined) {\n          createParticleBuffers(geometry);\n          initParticleBuffers(geometry, object);\n          geometry.verticesNeedUpdate = true;\n          geometry.colorsNeedUpdate = true;\n        }\n      }\n    }\n\n    if (object.__webglActive === undefined) {\n      object.__webglActive = true;\n\n      if (object instanceof THREE.Mesh) {\n        if (geometry instanceof THREE.BufferGeometry) {\n          addBuffer(_webglObjects, geometry, object);\n        } else if (geometry instanceof THREE.Geometry) {\n          var geometryGroupsList = geometryGroups[geometry.id];\n\n          for (var i = 0, l = geometryGroupsList.length; i < l; i++) {\n            addBuffer(_webglObjects, geometryGroupsList[i], object);\n          }\n        }\n      } else if (object instanceof THREE.Line || object instanceof THREE.PointCloud) {\n        addBuffer(_webglObjects, geometry, object);\n      } else if (object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback) {\n        addBufferImmediate(_webglObjectsImmediate, object);\n      }\n    }\n  } // Geometry splitting\n\n\n  var geometryGroups = {};\n  var geometryGroupCounter = 0;\n\n  function makeGroups(geometry, usesFaceMaterial) {\n    var maxVerticesInGroup = extensions.get('OES_element_index_uint') ? 4294967296 : 65535;\n    var groupHash,\n        hash_map = {};\n    var numMorphTargets = geometry.morphTargets.length;\n    var numMorphNormals = geometry.morphNormals.length;\n    var group;\n    var groups = {};\n    var groupsList = [];\n\n    for (var f = 0, fl = geometry.faces.length; f < fl; f++) {\n      var face = geometry.faces[f];\n      var materialIndex = usesFaceMaterial ? face.materialIndex : 0;\n\n      if (!(materialIndex in hash_map)) {\n        hash_map[materialIndex] = {\n          hash: materialIndex,\n          counter: 0\n        };\n      }\n\n      groupHash = hash_map[materialIndex].hash + '_' + hash_map[materialIndex].counter;\n\n      if (!(groupHash in groups)) {\n        group = {\n          id: geometryGroupCounter++,\n          faces3: [],\n          materialIndex: materialIndex,\n          vertices: 0,\n          numMorphTargets: numMorphTargets,\n          numMorphNormals: numMorphNormals\n        };\n        groups[groupHash] = group;\n        groupsList.push(group);\n      }\n\n      if (groups[groupHash].vertices + 3 > maxVerticesInGroup) {\n        hash_map[materialIndex].counter += 1;\n        groupHash = hash_map[materialIndex].hash + '_' + hash_map[materialIndex].counter;\n\n        if (!(groupHash in groups)) {\n          group = {\n            id: geometryGroupCounter++,\n            faces3: [],\n            materialIndex: materialIndex,\n            vertices: 0,\n            numMorphTargets: numMorphTargets,\n            numMorphNormals: numMorphNormals\n          };\n          groups[groupHash] = group;\n          groupsList.push(group);\n        }\n      }\n\n      groups[groupHash].faces3.push(f);\n      groups[groupHash].vertices += 3;\n    }\n\n    return groupsList;\n  }\n\n  function initGeometryGroups(scene, object, geometry) {\n    var material = object.material,\n        addBuffers = false;\n\n    if (geometryGroups[geometry.id] === undefined || geometry.groupsNeedUpdate === true) {\n      delete _webglObjects[object.id];\n      geometryGroups[geometry.id] = makeGroups(geometry, material instanceof THREE.MeshFaceMaterial);\n      geometry.groupsNeedUpdate = false;\n    }\n\n    var geometryGroupsList = geometryGroups[geometry.id]; // create separate VBOs per geometry chunk\n\n    for (var i = 0, il = geometryGroupsList.length; i < il; i++) {\n      var geometryGroup = geometryGroupsList[i]; // initialise VBO on the first access\n\n      if (geometryGroup.__webglVertexBuffer === undefined) {\n        createMeshBuffers(geometryGroup);\n        initMeshBuffers(geometryGroup, object);\n        geometry.verticesNeedUpdate = true;\n        geometry.morphTargetsNeedUpdate = true;\n        geometry.elementsNeedUpdate = true;\n        geometry.uvsNeedUpdate = true;\n        geometry.normalsNeedUpdate = true;\n        geometry.tangentsNeedUpdate = true;\n        geometry.colorsNeedUpdate = true;\n        addBuffers = true;\n      } else {\n        addBuffers = false;\n      }\n\n      if (addBuffers || object.__webglActive === undefined) {\n        addBuffer(_webglObjects, geometryGroup, object);\n      }\n    }\n\n    object.__webglActive = true;\n  }\n\n  function addBuffer(objlist, buffer, object) {\n    var id = object.id;\n    objlist[id] = objlist[id] || [];\n    objlist[id].push({\n      id: id,\n      buffer: buffer,\n      object: object,\n      material: null,\n      z: 0\n    });\n  }\n\n  ;\n\n  function addBufferImmediate(objlist, object) {\n    objlist.push({\n      id: null,\n      object: object,\n      opaque: null,\n      transparent: null,\n      z: 0\n    });\n  }\n\n  ; // Objects updates\n\n  function updateObject(object, scene) {\n    var geometry = object.geometry,\n        customAttributesDirty,\n        material;\n\n    if (geometry instanceof THREE.BufferGeometry) {\n      setDirectBuffers(geometry);\n    } else if (object instanceof THREE.Mesh) {\n      // check all geometry groups\n      if (geometry.groupsNeedUpdate === true) {\n        initGeometryGroups(scene, object, geometry);\n      }\n\n      var geometryGroupsList = geometryGroups[geometry.id];\n\n      for (var i = 0, il = geometryGroupsList.length; i < il; i++) {\n        var geometryGroup = geometryGroupsList[i];\n        material = getBufferMaterial(object, geometryGroup);\n\n        if (geometry.groupsNeedUpdate === true) {\n          initMeshBuffers(geometryGroup, object);\n        }\n\n        customAttributesDirty = material.attributes && areCustomAttributesDirty(material);\n\n        if (geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate || geometry.uvsNeedUpdate || geometry.normalsNeedUpdate || geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty) {\n          setMeshBuffers(geometryGroup, object, _gl.DYNAMIC_DRAW, !geometry.dynamic, material);\n        }\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.morphTargetsNeedUpdate = false;\n      geometry.elementsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.tangentsNeedUpdate = false;\n      material.attributes && clearCustomAttributes(material);\n    } else if (object instanceof THREE.Line) {\n      material = getBufferMaterial(object, geometry);\n      customAttributesDirty = material.attributes && areCustomAttributesDirty(material);\n\n      if (geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty) {\n        setLineBuffers(geometry, _gl.DYNAMIC_DRAW);\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.lineDistancesNeedUpdate = false;\n      material.attributes && clearCustomAttributes(material);\n    } else if (object instanceof THREE.PointCloud) {\n      material = getBufferMaterial(object, geometry);\n      customAttributesDirty = material.attributes && areCustomAttributesDirty(material);\n\n      if (geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty) {\n        setParticleBuffers(geometry, _gl.DYNAMIC_DRAW, object);\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      material.attributes && clearCustomAttributes(material);\n    }\n  } // Objects updates - custom attributes check\n\n\n  function areCustomAttributesDirty(material) {\n    for (var name in material.attributes) {\n      if (material.attributes[name].needsUpdate) return true;\n    }\n\n    return false;\n  }\n\n  function clearCustomAttributes(material) {\n    for (var name in material.attributes) {\n      material.attributes[name].needsUpdate = false;\n    }\n  } // Objects removal\n\n\n  function removeObject(object) {\n    if (object instanceof THREE.Mesh || object instanceof THREE.PointCloud || object instanceof THREE.Line) {\n      delete _webglObjects[object.id];\n    } else if (object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback) {\n      removeInstances(_webglObjectsImmediate, object);\n    }\n\n    delete object.__webglInit;\n    delete object._modelViewMatrix;\n    delete object._normalMatrix;\n    delete object.__webglActive;\n  }\n\n  function removeInstances(objlist, object) {\n    for (var o = objlist.length - 1; o >= 0; o--) {\n      if (objlist[o].object === object) {\n        objlist.splice(o, 1);\n      }\n    }\n  } // Materials\n\n\n  function initMaterial(material, lights, fog, object) {\n    material.addEventListener('dispose', onMaterialDispose);\n    var shaderID;\n\n    if (material instanceof THREE.MeshDepthMaterial) {\n      shaderID = 'depth';\n    } else if (material instanceof THREE.MeshNormalMaterial) {\n      shaderID = 'normal';\n    } else if (material instanceof THREE.MeshBasicMaterial) {\n      shaderID = 'basic';\n    } else if (material instanceof THREE.MeshLambertMaterial) {\n      shaderID = 'lambert';\n    } else if (material instanceof THREE.MeshPhongMaterial) {\n      shaderID = 'phong';\n    } else if (material instanceof THREE.LineBasicMaterial) {\n      shaderID = 'basic';\n    } else if (material instanceof THREE.LineDashedMaterial) {\n      shaderID = 'dashed';\n    } else if (material instanceof THREE.PointCloudMaterial) {\n      shaderID = 'particle_basic';\n    }\n\n    if (shaderID) {\n      var shader = THREE.ShaderLib[shaderID];\n      material.__webglShader = {\n        uniforms: THREE.UniformsUtils.clone(shader.uniforms),\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      };\n    } else {\n      material.__webglShader = {\n        uniforms: material.uniforms,\n        vertexShader: material.vertexShader,\n        fragmentShader: material.fragmentShader\n      };\n    } // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n\n    var maxLightCount = allocateLights(lights);\n    var maxShadows = allocateShadows(lights);\n    var maxBones = allocateBones(object);\n    var parameters = {\n      precision: _precision,\n      supportsVertexTextures: _supportsVertexTextures,\n      map: !!material.map,\n      envMap: !!material.envMap,\n      lightMap: !!material.lightMap,\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      vertexColors: material.vertexColors,\n      fog: fog,\n      useFog: material.fog,\n      fogExp: fog instanceof THREE.FogExp2,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: _logarithmicDepthBuffer,\n      skinning: material.skinning,\n      maxBones: maxBones,\n      useVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: _this.maxMorphTargets,\n      maxMorphNormals: _this.maxMorphNormals,\n      maxDirLights: maxLightCount.directional,\n      maxPointLights: maxLightCount.point,\n      maxSpotLights: maxLightCount.spot,\n      maxHemiLights: maxLightCount.hemi,\n      maxShadows: maxShadows,\n      shadowMapEnabled: _this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\n      shadowMapType: _this.shadowMapType,\n      shadowMapDebug: _this.shadowMapDebug,\n      shadowMapCascade: _this.shadowMapCascade,\n      alphaTest: material.alphaTest,\n      metal: material.metal,\n      wrapAround: material.wrapAround,\n      doubleSided: material.side === THREE.DoubleSide,\n      flipSided: material.side === THREE.BackSide\n    }; // Generate code\n\n    var chunks = [];\n\n    if (shaderID) {\n      chunks.push(shaderID);\n    } else {\n      chunks.push(material.fragmentShader);\n      chunks.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        chunks.push(name);\n        chunks.push(material.defines[name]);\n      }\n    }\n\n    for (var name in parameters) {\n      chunks.push(name);\n      chunks.push(parameters[name]);\n    }\n\n    var code = chunks.join();\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = _programs.length; p < pl; p++) {\n      var programInfo = _programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        program.usedTimes++;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new THREE.WebGLProgram(_this, code, material, parameters);\n\n      _programs.push(program);\n\n      _this.info.memory.programs = _programs.length;\n    }\n\n    material.program = program;\n    var attributes = program.attributes;\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n      var id,\n          base = 'morphTarget';\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        id = base + i;\n\n        if (attributes[id] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n      var id,\n          base = 'morphNormal';\n\n      for (i = 0; i < _this.maxMorphNormals; i++) {\n        id = base + i;\n\n        if (attributes[id] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    material.uniformsList = [];\n\n    for (var u in material.__webglShader.uniforms) {\n      var location = material.program.uniforms[u];\n\n      if (location) {\n        material.uniformsList.push([material.__webglShader.uniforms[u], location]);\n      }\n    }\n  }\n\n  function setProgram(camera, lights, fog, material, object) {\n    _usedTextureUnits = 0;\n\n    if (material.needsUpdate) {\n      if (material.program) deallocateMaterial(material);\n      initMaterial(material, lights, fog, object);\n      material.needsUpdate = false;\n    }\n\n    if (material.morphTargets) {\n      if (!object.__webglMorphTargetInfluences) {\n        object.__webglMorphTargetInfluences = new Float32Array(_this.maxMorphTargets);\n      }\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = material.program,\n        p_uniforms = program.uniforms,\n        m_uniforms = material.__webglShader.uniforms;\n\n    if (program.id !== _currentProgram) {\n      _gl.useProgram(program.program);\n\n      _currentProgram = program.id;\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      if (_currentMaterialId === -1) refreshLights = true;\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      _gl.uniformMatrix4fv(p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n\n      if (_logarithmicDepthBuffer) {\n        _gl.uniform1f(p_uniforms.logDepthBufFC, 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (camera !== _currentCamera) _currentCamera = camera; // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n      if (material instanceof THREE.ShaderMaterial || material instanceof THREE.MeshPhongMaterial || material.envMap) {\n        if (p_uniforms.cameraPosition !== null) {\n          _vector3.setFromMatrixPosition(camera.matrixWorld);\n\n          _gl.uniform3f(p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z);\n        }\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.ShaderMaterial || material.skinning) {\n        if (p_uniforms.viewMatrix !== null) {\n          _gl.uniformMatrix4fv(p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements);\n        }\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      if (object.bindMatrix && p_uniforms.bindMatrix !== null) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrix, false, object.bindMatrix.elements);\n      }\n\n      if (object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null) {\n        _gl.uniformMatrix4fv(p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements);\n      }\n\n      if (_supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture) {\n        if (p_uniforms.boneTexture !== null) {\n          var textureUnit = getTextureUnit();\n\n          _gl.uniform1i(p_uniforms.boneTexture, textureUnit);\n\n          _this.setTexture(object.skeleton.boneTexture, textureUnit);\n        }\n\n        if (p_uniforms.boneTextureWidth !== null) {\n          _gl.uniform1i(p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth);\n        }\n\n        if (p_uniforms.boneTextureHeight !== null) {\n          _gl.uniform1i(p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight);\n        }\n      } else if (object.skeleton && object.skeleton.boneMatrices) {\n        if (p_uniforms.boneGlobalMatrices !== null) {\n          _gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices);\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      // refresh uniforms common to several materials\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material instanceof THREE.MeshPhongMaterial || material instanceof THREE.MeshLambertMaterial || material.lights) {\n        if (_lightsNeedUpdate) {\n          refreshLights = true;\n          setupLights(lights);\n          _lightsNeedUpdate = false;\n        }\n\n        if (refreshLights) {\n          refreshUniformsLights(m_uniforms, _lights);\n          markUniformsLightsNeedsUpdate(m_uniforms, true);\n        } else {\n          markUniformsLightsNeedsUpdate(m_uniforms, false);\n        }\n      }\n\n      if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } // refresh single material specific uniforms\n\n\n      if (material instanceof THREE.LineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n      } else if (material instanceof THREE.LineDashedMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n        refreshUniformsDash(m_uniforms, material);\n      } else if (material instanceof THREE.PointCloudMaterial) {\n        refreshUniformsParticle(m_uniforms, material);\n      } else if (material instanceof THREE.MeshPhongMaterial) {\n        refreshUniformsPhong(m_uniforms, material);\n      } else if (material instanceof THREE.MeshLambertMaterial) {\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material instanceof THREE.MeshDepthMaterial) {\n        m_uniforms.mNear.value = camera.near;\n        m_uniforms.mFar.value = camera.far;\n        m_uniforms.opacity.value = material.opacity;\n      } else if (material instanceof THREE.MeshNormalMaterial) {\n        m_uniforms.opacity.value = material.opacity;\n      }\n\n      if (object.receiveShadow && !material._shadowPass) {\n        refreshUniformsShadow(m_uniforms, lights);\n      } // load common uniforms\n\n\n      loadUniformsGeneric(material.uniformsList);\n    }\n\n    loadUniformsMatrices(p_uniforms, object);\n\n    if (p_uniforms.modelMatrix !== null) {\n      _gl.uniformMatrix4fv(p_uniforms.modelMatrix, false, object.matrixWorld.elements);\n    }\n\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n\n    if (_this.gammaInput) {\n      uniforms.diffuse.value.copyGammaToLinear(material.color);\n    } else {\n      uniforms.diffuse.value = material.color;\n    }\n\n    uniforms.map.value = material.map;\n    uniforms.lightMap.value = material.lightMap;\n    uniforms.specularMap.value = material.specularMap;\n    uniforms.alphaMap.value = material.alphaMap;\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n    } // uv repeat and offset setting priorities\n    //  1. color map\n    //  2. specular map\n    //  3. normal map\n    //  4. bump map\n    //  5. alpha map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      var offset = uvScaleMap.offset;\n      var repeat = uvScaleMap.repeat;\n      uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n    }\n\n    uniforms.envMap.value = material.envMap;\n    uniforms.flipEnvMap.value = material.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;\n\n    if (_this.gammaInput) {\n      //uniforms.reflectivity.value = material.reflectivity * material.reflectivity;\n      uniforms.reflectivity.value = material.reflectivity;\n    } else {\n      uniforms.reflectivity.value = material.reflectivity;\n    }\n\n    uniforms.refractionRatio.value = material.refractionRatio;\n    uniforms.combine.value = material.combine;\n    uniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsParticle(uniforms, material) {\n    uniforms.psColor.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size;\n    uniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\n\n    uniforms.map.value = material.map;\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog instanceof THREE.Fog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog instanceof THREE.FogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.shininess.value = material.shininess;\n\n    if (_this.gammaInput) {\n      uniforms.ambient.value.copyGammaToLinear(material.ambient);\n      uniforms.emissive.value.copyGammaToLinear(material.emissive);\n      uniforms.specular.value.copyGammaToLinear(material.specular);\n    } else {\n      uniforms.ambient.value = material.ambient;\n      uniforms.emissive.value = material.emissive;\n      uniforms.specular.value = material.specular;\n    }\n\n    if (material.wrapAround) {\n      uniforms.wrapRGB.value.copy(material.wrapRGB);\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (_this.gammaInput) {\n      uniforms.ambient.value.copyGammaToLinear(material.ambient);\n      uniforms.emissive.value.copyGammaToLinear(material.emissive);\n    } else {\n      uniforms.ambient.value = material.ambient;\n      uniforms.emissive.value = material.emissive;\n    }\n\n    if (material.wrapAround) {\n      uniforms.wrapRGB.value.copy(material.wrapRGB);\n    }\n  }\n\n  function refreshUniformsLights(uniforms, lights) {\n    uniforms.ambientLightColor.value = lights.ambient;\n    uniforms.directionalLightColor.value = lights.directional.colors;\n    uniforms.directionalLightDirection.value = lights.directional.positions;\n    uniforms.pointLightColor.value = lights.point.colors;\n    uniforms.pointLightPosition.value = lights.point.positions;\n    uniforms.pointLightDistance.value = lights.point.distances;\n    uniforms.spotLightColor.value = lights.spot.colors;\n    uniforms.spotLightPosition.value = lights.spot.positions;\n    uniforms.spotLightDistance.value = lights.spot.distances;\n    uniforms.spotLightDirection.value = lights.spot.directions;\n    uniforms.spotLightAngleCos.value = lights.spot.anglesCos;\n    uniforms.spotLightExponent.value = lights.spot.exponents;\n    uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\n    uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\n    uniforms.hemisphereLightDirection.value = lights.hemi.positions;\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, boolean) {\n    uniforms.ambientLightColor.needsUpdate = boolean;\n    uniforms.directionalLightColor.needsUpdate = boolean;\n    uniforms.directionalLightDirection.needsUpdate = boolean;\n    uniforms.pointLightColor.needsUpdate = boolean;\n    uniforms.pointLightPosition.needsUpdate = boolean;\n    uniforms.pointLightDistance.needsUpdate = boolean;\n    uniforms.spotLightColor.needsUpdate = boolean;\n    uniforms.spotLightPosition.needsUpdate = boolean;\n    uniforms.spotLightDistance.needsUpdate = boolean;\n    uniforms.spotLightDirection.needsUpdate = boolean;\n    uniforms.spotLightAngleCos.needsUpdate = boolean;\n    uniforms.spotLightExponent.needsUpdate = boolean;\n    uniforms.hemisphereLightSkyColor.needsUpdate = boolean;\n    uniforms.hemisphereLightGroundColor.needsUpdate = boolean;\n    uniforms.hemisphereLightDirection.needsUpdate = boolean;\n  }\n\n  function refreshUniformsShadow(uniforms, lights) {\n    if (uniforms.shadowMatrix) {\n      var j = 0;\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        if (!light.castShadow) continue;\n\n        if (light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight && !light.shadowCascade) {\n          uniforms.shadowMap.value[j] = light.shadowMap;\n          uniforms.shadowMapSize.value[j] = light.shadowMapSize;\n          uniforms.shadowMatrix.value[j] = light.shadowMatrix;\n          uniforms.shadowDarkness.value[j] = light.shadowDarkness;\n          uniforms.shadowBias.value[j] = light.shadowBias;\n          j++;\n        }\n      }\n    }\n  } // Uniforms (load to GPU)\n\n\n  function loadUniformsMatrices(uniforms, object) {\n    _gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, object._modelViewMatrix.elements);\n\n    if (uniforms.normalMatrix) {\n      _gl.uniformMatrix3fv(uniforms.normalMatrix, false, object._normalMatrix.elements);\n    }\n  }\n\n  function getTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= _maxTextures) {\n      console.warn('WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  function loadUniformsGeneric(uniforms) {\n    var texture, textureUnit, offset;\n\n    for (var j = 0, jl = uniforms.length; j < jl; j++) {\n      var uniform = uniforms[j][0]; // needsUpdate property is not added to all uniforms.\n\n      if (uniform.needsUpdate === false) continue;\n      var type = uniform.type;\n      var value = uniform.value;\n      var location = uniforms[j][1];\n\n      switch (type) {\n        case '1i':\n          _gl.uniform1i(location, value);\n\n          break;\n\n        case '1f':\n          _gl.uniform1f(location, value);\n\n          break;\n\n        case '2f':\n          _gl.uniform2f(location, value[0], value[1]);\n\n          break;\n\n        case '3f':\n          _gl.uniform3f(location, value[0], value[1], value[2]);\n\n          break;\n\n        case '4f':\n          _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n\n          break;\n\n        case '1iv':\n          _gl.uniform1iv(location, value);\n\n          break;\n\n        case '3iv':\n          _gl.uniform3iv(location, value);\n\n          break;\n\n        case '1fv':\n          _gl.uniform1fv(location, value);\n\n          break;\n\n        case '2fv':\n          _gl.uniform2fv(location, value);\n\n          break;\n\n        case '3fv':\n          _gl.uniform3fv(location, value);\n\n          break;\n\n        case '4fv':\n          _gl.uniform4fv(location, value);\n\n          break;\n\n        case 'Matrix3fv':\n          _gl.uniformMatrix3fv(location, false, value);\n\n          break;\n\n        case 'Matrix4fv':\n          _gl.uniformMatrix4fv(location, false, value);\n\n          break;\n        //\n\n        case 'i':\n          // single integer\n          _gl.uniform1i(location, value);\n\n          break;\n\n        case 'f':\n          // single float\n          _gl.uniform1f(location, value);\n\n          break;\n\n        case 'v2':\n          // single THREE.Vector2\n          _gl.uniform2f(location, value.x, value.y);\n\n          break;\n\n        case 'v3':\n          // single THREE.Vector3\n          _gl.uniform3f(location, value.x, value.y, value.z);\n\n          break;\n\n        case 'v4':\n          // single THREE.Vector4\n          _gl.uniform4f(location, value.x, value.y, value.z, value.w);\n\n          break;\n\n        case 'c':\n          // single THREE.Color\n          _gl.uniform3f(location, value.r, value.g, value.b);\n\n          break;\n\n        case 'iv1':\n          // flat array of integers (JS or typed array)\n          _gl.uniform1iv(location, value);\n\n          break;\n\n        case 'iv':\n          // flat array of integers with 3 x N size (JS or typed array)\n          _gl.uniform3iv(location, value);\n\n          break;\n\n        case 'fv1':\n          // flat array of floats (JS or typed array)\n          _gl.uniform1fv(location, value);\n\n          break;\n\n        case 'fv':\n          // flat array of floats with 3 x N size (JS or typed array)\n          _gl.uniform3fv(location, value);\n\n          break;\n\n        case 'v2v':\n          // array of THREE.Vector2\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(2 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            offset = i * 2;\n            uniform._array[offset] = value[i].x;\n            uniform._array[offset + 1] = value[i].y;\n          }\n\n          _gl.uniform2fv(location, uniform._array);\n\n          break;\n\n        case 'v3v':\n          // array of THREE.Vector3\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(3 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            offset = i * 3;\n            uniform._array[offset] = value[i].x;\n            uniform._array[offset + 1] = value[i].y;\n            uniform._array[offset + 2] = value[i].z;\n          }\n\n          _gl.uniform3fv(location, uniform._array);\n\n          break;\n\n        case 'v4v':\n          // array of THREE.Vector4\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(4 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            offset = i * 4;\n            uniform._array[offset] = value[i].x;\n            uniform._array[offset + 1] = value[i].y;\n            uniform._array[offset + 2] = value[i].z;\n            uniform._array[offset + 3] = value[i].w;\n          }\n\n          _gl.uniform4fv(location, uniform._array);\n\n          break;\n\n        case 'm3':\n          // single THREE.Matrix3\n          _gl.uniformMatrix3fv(location, false, value.elements);\n\n          break;\n\n        case 'm3v':\n          // array of THREE.Matrix3\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(9 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            value[i].flattenToArrayOffset(uniform._array, i * 9);\n          }\n\n          _gl.uniformMatrix3fv(location, false, uniform._array);\n\n          break;\n\n        case 'm4':\n          // single THREE.Matrix4\n          _gl.uniformMatrix4fv(location, false, value.elements);\n\n          break;\n\n        case 'm4v':\n          // array of THREE.Matrix4\n          if (uniform._array === undefined) {\n            uniform._array = new Float32Array(16 * value.length);\n          }\n\n          for (var i = 0, il = value.length; i < il; i++) {\n            value[i].flattenToArrayOffset(uniform._array, i * 16);\n          }\n\n          _gl.uniformMatrix4fv(location, false, uniform._array);\n\n          break;\n\n        case 't':\n          // single THREE.Texture (2d or cube)\n          texture = value;\n          textureUnit = getTextureUnit();\n\n          _gl.uniform1i(location, textureUnit);\n\n          if (!texture) continue;\n\n          if (texture instanceof THREE.CubeTexture || texture.image instanceof Array && texture.image.length === 6) {\n            // CompressedTexture can have Array in image :/\n            setCubeTexture(texture, textureUnit);\n          } else if (texture instanceof THREE.WebGLRenderTargetCube) {\n            setCubeTextureDynamic(texture, textureUnit);\n          } else {\n            _this.setTexture(texture, textureUnit);\n          }\n\n          break;\n\n        case 'tv':\n          // array of THREE.Texture (2d)\n          if (uniform._array === undefined) {\n            uniform._array = [];\n          }\n\n          for (var i = 0, il = uniform.value.length; i < il; i++) {\n            uniform._array[i] = getTextureUnit();\n          }\n\n          _gl.uniform1iv(location, uniform._array);\n\n          for (var i = 0, il = uniform.value.length; i < il; i++) {\n            texture = uniform.value[i];\n            textureUnit = uniform._array[i];\n            if (!texture) continue;\n\n            _this.setTexture(texture, textureUnit);\n          }\n\n          break;\n\n        default:\n          console.warn('THREE.WebGLRenderer: Unknown uniform type: ' + type);\n      }\n    }\n  }\n\n  function setupMatrices(object, camera) {\n    object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\n    object._normalMatrix.getNormalMatrix(object._modelViewMatrix);\n  } //\n\n\n  function setColorGamma(array, offset, color, intensitySq) {\n    array[offset] = color.r * color.r * intensitySq;\n    array[offset + 1] = color.g * color.g * intensitySq;\n    array[offset + 2] = color.b * color.b * intensitySq;\n  }\n\n  function setColorLinear(array, offset, color, intensity) {\n    array[offset] = color.r * intensity;\n    array[offset + 1] = color.g * intensity;\n    array[offset + 2] = color.b * intensity;\n  }\n\n  function setupLights(lights) {\n    var l,\n        ll,\n        light,\n        n,\n        r = 0,\n        g = 0,\n        b = 0,\n        color,\n        skyColor,\n        groundColor,\n        intensity,\n        intensitySq,\n        position,\n        distance,\n        zlights = _lights,\n        dirColors = zlights.directional.colors,\n        dirPositions = zlights.directional.positions,\n        pointColors = zlights.point.colors,\n        pointPositions = zlights.point.positions,\n        pointDistances = zlights.point.distances,\n        spotColors = zlights.spot.colors,\n        spotPositions = zlights.spot.positions,\n        spotDistances = zlights.spot.distances,\n        spotDirections = zlights.spot.directions,\n        spotAnglesCos = zlights.spot.anglesCos,\n        spotExponents = zlights.spot.exponents,\n        hemiSkyColors = zlights.hemi.skyColors,\n        hemiGroundColors = zlights.hemi.groundColors,\n        hemiPositions = zlights.hemi.positions,\n        dirLength = 0,\n        pointLength = 0,\n        spotLength = 0,\n        hemiLength = 0,\n        dirCount = 0,\n        pointCount = 0,\n        spotCount = 0,\n        hemiCount = 0,\n        dirOffset = 0,\n        pointOffset = 0,\n        spotOffset = 0,\n        hemiOffset = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n      if (light.onlyShadow) continue;\n      color = light.color;\n      intensity = light.intensity;\n      distance = light.distance;\n\n      if (light instanceof THREE.AmbientLight) {\n        if (!light.visible) continue;\n\n        if (_this.gammaInput) {\n          r += color.r * color.r;\n          g += color.g * color.g;\n          b += color.b * color.b;\n        } else {\n          r += color.r;\n          g += color.g;\n          b += color.b;\n        }\n      } else if (light instanceof THREE.DirectionalLight) {\n        dirCount += 1;\n        if (!light.visible) continue;\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        _direction.sub(_vector3);\n\n        _direction.normalize();\n\n        dirOffset = dirLength * 3;\n        dirPositions[dirOffset] = _direction.x;\n        dirPositions[dirOffset + 1] = _direction.y;\n        dirPositions[dirOffset + 2] = _direction.z;\n\n        if (_this.gammaInput) {\n          setColorGamma(dirColors, dirOffset, color, intensity * intensity);\n        } else {\n          setColorLinear(dirColors, dirOffset, color, intensity);\n        }\n\n        dirLength += 1;\n      } else if (light instanceof THREE.PointLight) {\n        pointCount += 1;\n        if (!light.visible) continue;\n        pointOffset = pointLength * 3;\n\n        if (_this.gammaInput) {\n          setColorGamma(pointColors, pointOffset, color, intensity * intensity);\n        } else {\n          setColorLinear(pointColors, pointOffset, color, intensity);\n        }\n\n        _vector3.setFromMatrixPosition(light.matrixWorld);\n\n        pointPositions[pointOffset] = _vector3.x;\n        pointPositions[pointOffset + 1] = _vector3.y;\n        pointPositions[pointOffset + 2] = _vector3.z;\n        pointDistances[pointLength] = distance;\n        pointLength += 1;\n      } else if (light instanceof THREE.SpotLight) {\n        spotCount += 1;\n        if (!light.visible) continue;\n        spotOffset = spotLength * 3;\n\n        if (_this.gammaInput) {\n          setColorGamma(spotColors, spotOffset, color, intensity * intensity);\n        } else {\n          setColorLinear(spotColors, spotOffset, color, intensity);\n        }\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        spotPositions[spotOffset] = _direction.x;\n        spotPositions[spotOffset + 1] = _direction.y;\n        spotPositions[spotOffset + 2] = _direction.z;\n        spotDistances[spotLength] = distance;\n\n        _vector3.setFromMatrixPosition(light.target.matrixWorld);\n\n        _direction.sub(_vector3);\n\n        _direction.normalize();\n\n        spotDirections[spotOffset] = _direction.x;\n        spotDirections[spotOffset + 1] = _direction.y;\n        spotDirections[spotOffset + 2] = _direction.z;\n        spotAnglesCos[spotLength] = Math.cos(light.angle);\n        spotExponents[spotLength] = light.exponent;\n        spotLength += 1;\n      } else if (light instanceof THREE.HemisphereLight) {\n        hemiCount += 1;\n        if (!light.visible) continue;\n\n        _direction.setFromMatrixPosition(light.matrixWorld);\n\n        _direction.normalize();\n\n        hemiOffset = hemiLength * 3;\n        hemiPositions[hemiOffset] = _direction.x;\n        hemiPositions[hemiOffset + 1] = _direction.y;\n        hemiPositions[hemiOffset + 2] = _direction.z;\n        skyColor = light.color;\n        groundColor = light.groundColor;\n\n        if (_this.gammaInput) {\n          intensitySq = intensity * intensity;\n          setColorGamma(hemiSkyColors, hemiOffset, skyColor, intensitySq);\n          setColorGamma(hemiGroundColors, hemiOffset, groundColor, intensitySq);\n        } else {\n          setColorLinear(hemiSkyColors, hemiOffset, skyColor, intensity);\n          setColorLinear(hemiGroundColors, hemiOffset, groundColor, intensity);\n        }\n\n        hemiLength += 1;\n      }\n    } // null eventual remains from removed lights\n    // (this is to avoid if in shader)\n\n\n    for (l = dirLength * 3, ll = Math.max(dirColors.length, dirCount * 3); l < ll; l++) dirColors[l] = 0.0;\n\n    for (l = pointLength * 3, ll = Math.max(pointColors.length, pointCount * 3); l < ll; l++) pointColors[l] = 0.0;\n\n    for (l = spotLength * 3, ll = Math.max(spotColors.length, spotCount * 3); l < ll; l++) spotColors[l] = 0.0;\n\n    for (l = hemiLength * 3, ll = Math.max(hemiSkyColors.length, hemiCount * 3); l < ll; l++) hemiSkyColors[l] = 0.0;\n\n    for (l = hemiLength * 3, ll = Math.max(hemiGroundColors.length, hemiCount * 3); l < ll; l++) hemiGroundColors[l] = 0.0;\n\n    zlights.directional.length = dirLength;\n    zlights.point.length = pointLength;\n    zlights.spot.length = spotLength;\n    zlights.hemi.length = hemiLength;\n    zlights.ambient[0] = r;\n    zlights.ambient[1] = g;\n    zlights.ambient[2] = b;\n  } // GL state setting\n\n\n  this.setFaceCulling = function (cullFace, frontFaceDirection) {\n    if (cullFace === THREE.CullFaceNone) {\n      _gl.disable(_gl.CULL_FACE);\n    } else {\n      if (frontFaceDirection === THREE.FrontFaceDirectionCW) {\n        _gl.frontFace(_gl.CW);\n      } else {\n        _gl.frontFace(_gl.CCW);\n      }\n\n      if (cullFace === THREE.CullFaceBack) {\n        _gl.cullFace(_gl.BACK);\n      } else if (cullFace === THREE.CullFaceFront) {\n        _gl.cullFace(_gl.FRONT);\n      } else {\n        _gl.cullFace(_gl.FRONT_AND_BACK);\n      }\n\n      _gl.enable(_gl.CULL_FACE);\n    }\n  };\n\n  this.setMaterialFaces = function (material) {\n    var doubleSided = material.side === THREE.DoubleSide;\n    var flipSided = material.side === THREE.BackSide;\n\n    if (_oldDoubleSided !== doubleSided) {\n      if (doubleSided) {\n        _gl.disable(_gl.CULL_FACE);\n      } else {\n        _gl.enable(_gl.CULL_FACE);\n      }\n\n      _oldDoubleSided = doubleSided;\n    }\n\n    if (_oldFlipSided !== flipSided) {\n      if (flipSided) {\n        _gl.frontFace(_gl.CW);\n      } else {\n        _gl.frontFace(_gl.CCW);\n      }\n\n      _oldFlipSided = flipSided;\n    }\n  };\n\n  this.setDepthTest = function (depthTest) {\n    if (_oldDepthTest !== depthTest) {\n      if (depthTest) {\n        _gl.enable(_gl.DEPTH_TEST);\n      } else {\n        _gl.disable(_gl.DEPTH_TEST);\n      }\n\n      _oldDepthTest = depthTest;\n    }\n  };\n\n  this.setDepthWrite = function (depthWrite) {\n    if (_oldDepthWrite !== depthWrite) {\n      _gl.depthMask(depthWrite);\n\n      _oldDepthWrite = depthWrite;\n    }\n  };\n\n  function setLineWidth(width) {\n    if (width !== _oldLineWidth) {\n      _gl.lineWidth(width);\n\n      _oldLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonoffset, factor, units) {\n    if (_oldPolygonOffset !== polygonoffset) {\n      if (polygonoffset) {\n        _gl.enable(_gl.POLYGON_OFFSET_FILL);\n      } else {\n        _gl.disable(_gl.POLYGON_OFFSET_FILL);\n      }\n\n      _oldPolygonOffset = polygonoffset;\n    }\n\n    if (polygonoffset && (_oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units)) {\n      _gl.polygonOffset(factor, units);\n\n      _oldPolygonOffsetFactor = factor;\n      _oldPolygonOffsetUnits = units;\n    }\n  }\n\n  this.setBlending = function (blending, blendEquation, blendSrc, blendDst) {\n    if (blending !== _oldBlending) {\n      if (blending === THREE.NoBlending) {\n        _gl.disable(_gl.BLEND);\n      } else if (blending === THREE.AdditiveBlending) {\n        _gl.enable(_gl.BLEND);\n\n        _gl.blendEquation(_gl.FUNC_ADD);\n\n        _gl.blendFunc(_gl.SRC_ALPHA, _gl.ONE);\n      } else if (blending === THREE.SubtractiveBlending) {\n        // TODO: Find blendFuncSeparate() combination\n        _gl.enable(_gl.BLEND);\n\n        _gl.blendEquation(_gl.FUNC_ADD);\n\n        _gl.blendFunc(_gl.ZERO, _gl.ONE_MINUS_SRC_COLOR);\n      } else if (blending === THREE.MultiplyBlending) {\n        // TODO: Find blendFuncSeparate() combination\n        _gl.enable(_gl.BLEND);\n\n        _gl.blendEquation(_gl.FUNC_ADD);\n\n        _gl.blendFunc(_gl.ZERO, _gl.SRC_COLOR);\n      } else if (blending === THREE.CustomBlending) {\n        _gl.enable(_gl.BLEND);\n      } else {\n        _gl.enable(_gl.BLEND);\n\n        _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n\n        _gl.blendFuncSeparate(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n      }\n\n      _oldBlending = blending;\n    }\n\n    if (blending === THREE.CustomBlending) {\n      if (blendEquation !== _oldBlendEquation) {\n        _gl.blendEquation(paramThreeToGL(blendEquation));\n\n        _oldBlendEquation = blendEquation;\n      }\n\n      if (blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst) {\n        _gl.blendFunc(paramThreeToGL(blendSrc), paramThreeToGL(blendDst));\n\n        _oldBlendSrc = blendSrc;\n        _oldBlendDst = blendDst;\n      }\n    } else {\n      _oldBlendEquation = null;\n      _oldBlendSrc = null;\n      _oldBlendDst = null;\n    }\n  }; // Textures\n\n\n  function setTextureParameters(textureType, texture, isImagePowerOfTwo) {\n    var extension;\n\n    if (isImagePowerOfTwo) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension && texture.type !== THREE.FloatType) {\n      if (texture.anisotropy > 1 || texture.__oldAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, _this.getMaxAnisotropy()));\n\n        texture.__oldAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  this.uploadTexture = function (texture) {\n    if (texture.__webglInit === undefined) {\n      texture.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      texture.__webglTexture = _gl.createTexture();\n      _this.info.memory.textures++;\n    }\n\n    _gl.bindTexture(_gl.TEXTURE_2D, texture.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    texture.image = clampToMaxSize(texture.image, _maxTextureSize);\n    var image = texture.image,\n        isImagePowerOfTwo = THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height),\n        glFormat = paramThreeToGL(texture.format),\n        glType = paramThreeToGL(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isImagePowerOfTwo);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture instanceof THREE.DataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isImagePowerOfTwo) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          _gl.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        _gl.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n      }\n    } else if (texture instanceof THREE.CompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n          if (getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            _gl.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn(\"Attempt to load unsupported compressed texture format\");\n          }\n        } else {\n          _gl.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isImagePowerOfTwo) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          _gl.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n      } else {\n        _gl.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image);\n      }\n    }\n\n    if (texture.generateMipmaps && isImagePowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n    texture.needsUpdate = false;\n    if (texture.onUpdate) texture.onUpdate();\n  };\n\n  this.setTexture = function (texture, slot) {\n    _gl.activeTexture(_gl.TEXTURE0 + slot);\n\n    if (texture.needsUpdate) {\n      _this.uploadTexture(texture);\n    } else {\n      _gl.bindTexture(_gl.TEXTURE_2D, texture.__webglTexture);\n    }\n  };\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElement('canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.log('THREE.WebGLRenderer:', image, 'is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height + '.');\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function setCubeTexture(texture, slot) {\n    if (texture.image.length === 6) {\n      if (texture.needsUpdate) {\n        if (!texture.image.__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          texture.image.__webglTextureCube = _gl.createTexture();\n          _this.info.memory.textures++;\n        }\n\n        _gl.activeTexture(_gl.TEXTURE0 + slot);\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture instanceof THREE.CompressedTexture;\n        var isDataTexture = texture.image[0] instanceof THREE.DataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (_this.autoScaleCubemaps && !isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], _maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isImagePowerOfTwo = THREE.Math.isPowerOfTwo(image.width) && THREE.Math.isPowerOfTwo(image.height),\n            glFormat = paramThreeToGL(texture.format),\n            glType = paramThreeToGL(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat) {\n                if (getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  _gl.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn(\"Attempt to load unsupported compressed texture format\");\n                }\n              } else {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (texture.generateMipmaps && isImagePowerOfTwo) {\n          _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n\n        texture.needsUpdate = false;\n        if (texture.onUpdate) texture.onUpdate();\n      } else {\n        _gl.activeTexture(_gl.TEXTURE0 + slot);\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube);\n      }\n    }\n  }\n\n  function setCubeTextureDynamic(texture, slot) {\n    _gl.activeTexture(_gl.TEXTURE0 + slot);\n\n    _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, texture.__webglTexture);\n  } // Render targets\n\n\n  function setupFrameBuffer(framebuffer, renderTarget, textureTarget) {\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0);\n  }\n\n  function setupRenderBuffer(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n      /* For some reason this is not working. Defaulting to RGBA4.\n      } else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n      \t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\n      \t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n      */\n\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n  }\n\n  this.setRenderTarget = function (renderTarget) {\n    var isCube = renderTarget instanceof THREE.WebGLRenderTargetCube;\n\n    if (renderTarget && renderTarget.__webglFramebuffer === undefined) {\n      if (renderTarget.depthBuffer === undefined) renderTarget.depthBuffer = true;\n      if (renderTarget.stencilBuffer === undefined) renderTarget.stencilBuffer = true;\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      renderTarget.__webglTexture = _gl.createTexture();\n      _this.info.memory.textures++; // Setup texture, create render and frame buffers\n\n      var isTargetPowerOfTwo = THREE.Math.isPowerOfTwo(renderTarget.width) && THREE.Math.isPowerOfTwo(renderTarget.height),\n          glFormat = paramThreeToGL(renderTarget.format),\n          glType = paramThreeToGL(renderTarget.type);\n\n      if (isCube) {\n        renderTarget.__webglFramebuffer = [];\n        renderTarget.__webglRenderbuffer = [];\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture);\n\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          renderTarget.__webglFramebuffer[i] = _gl.createFramebuffer();\n          renderTarget.__webglRenderbuffer[i] = _gl.createRenderbuffer();\n\n          _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n          setupFrameBuffer(renderTarget.__webglFramebuffer[i], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n          setupRenderBuffer(renderTarget.__webglRenderbuffer[i], renderTarget);\n        }\n\n        if (isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n      } else {\n        renderTarget.__webglFramebuffer = _gl.createFramebuffer();\n\n        if (renderTarget.shareDepthFrom) {\n          renderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\n        } else {\n          renderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_2D, renderTarget.__webglTexture);\n\n        setTextureParameters(_gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo);\n\n        _gl.texImage2D(_gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n        setupFrameBuffer(renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D);\n\n        if (renderTarget.shareDepthFrom) {\n          if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n            _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer);\n          } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n            _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer);\n          }\n        } else {\n          setupRenderBuffer(renderTarget.__webglRenderbuffer, renderTarget);\n        }\n\n        if (isTargetPowerOfTwo) _gl.generateMipmap(_gl.TEXTURE_2D);\n      } // Release everything\n\n\n      if (isCube) {\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n      } else {\n        _gl.bindTexture(_gl.TEXTURE_2D, null);\n      }\n\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n    }\n\n    var framebuffer, width, height, vx, vy;\n\n    if (renderTarget) {\n      if (isCube) {\n        framebuffer = renderTarget.__webglFramebuffer[renderTarget.activeCubeFace];\n      } else {\n        framebuffer = renderTarget.__webglFramebuffer;\n      }\n\n      width = renderTarget.width;\n      height = renderTarget.height;\n      vx = 0;\n      vy = 0;\n    } else {\n      framebuffer = null;\n      width = _viewportWidth;\n      height = _viewportHeight;\n      vx = _viewportX;\n      vy = _viewportY;\n    }\n\n    if (framebuffer !== _currentFramebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _gl.viewport(vx, vy, width, height);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    _currentWidth = width;\n    _currentHeight = height;\n  };\n\n  function updateRenderTargetMipmap(renderTarget) {\n    if (renderTarget instanceof THREE.WebGLRenderTargetCube) {\n      _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture);\n\n      _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n\n      _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      _gl.bindTexture(_gl.TEXTURE_2D, renderTarget.__webglTexture);\n\n      _gl.generateMipmap(_gl.TEXTURE_2D);\n\n      _gl.bindTexture(_gl.TEXTURE_2D, null);\n    }\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } // Map three.js constants to WebGL constants\n\n\n  function paramThreeToGL(p) {\n    var extension;\n    if (p === THREE.RepeatWrapping) return _gl.REPEAT;\n    if (p === THREE.ClampToEdgeWrapping) return _gl.CLAMP_TO_EDGE;\n    if (p === THREE.MirroredRepeatWrapping) return _gl.MIRRORED_REPEAT;\n    if (p === THREE.NearestFilter) return _gl.NEAREST;\n    if (p === THREE.NearestMipMapNearestFilter) return _gl.NEAREST_MIPMAP_NEAREST;\n    if (p === THREE.NearestMipMapLinearFilter) return _gl.NEAREST_MIPMAP_LINEAR;\n    if (p === THREE.LinearFilter) return _gl.LINEAR;\n    if (p === THREE.LinearMipMapNearestFilter) return _gl.LINEAR_MIPMAP_NEAREST;\n    if (p === THREE.LinearMipMapLinearFilter) return _gl.LINEAR_MIPMAP_LINEAR;\n    if (p === THREE.UnsignedByteType) return _gl.UNSIGNED_BYTE;\n    if (p === THREE.UnsignedShort4444Type) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === THREE.UnsignedShort5551Type) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === THREE.UnsignedShort565Type) return _gl.UNSIGNED_SHORT_5_6_5;\n    if (p === THREE.ByteType) return _gl.BYTE;\n    if (p === THREE.ShortType) return _gl.SHORT;\n    if (p === THREE.UnsignedShortType) return _gl.UNSIGNED_SHORT;\n    if (p === THREE.IntType) return _gl.INT;\n    if (p === THREE.UnsignedIntType) return _gl.UNSIGNED_INT;\n    if (p === THREE.FloatType) return _gl.FLOAT;\n    if (p === THREE.AlphaFormat) return _gl.ALPHA;\n    if (p === THREE.RGBFormat) return _gl.RGB;\n    if (p === THREE.RGBAFormat) return _gl.RGBA;\n    if (p === THREE.LuminanceFormat) return _gl.LUMINANCE;\n    if (p === THREE.LuminanceAlphaFormat) return _gl.LUMINANCE_ALPHA;\n    if (p === THREE.AddEquation) return _gl.FUNC_ADD;\n    if (p === THREE.SubtractEquation) return _gl.FUNC_SUBTRACT;\n    if (p === THREE.ReverseSubtractEquation) return _gl.FUNC_REVERSE_SUBTRACT;\n    if (p === THREE.ZeroFactor) return _gl.ZERO;\n    if (p === THREE.OneFactor) return _gl.ONE;\n    if (p === THREE.SrcColorFactor) return _gl.SRC_COLOR;\n    if (p === THREE.OneMinusSrcColorFactor) return _gl.ONE_MINUS_SRC_COLOR;\n    if (p === THREE.SrcAlphaFactor) return _gl.SRC_ALPHA;\n    if (p === THREE.OneMinusSrcAlphaFactor) return _gl.ONE_MINUS_SRC_ALPHA;\n    if (p === THREE.DstAlphaFactor) return _gl.DST_ALPHA;\n    if (p === THREE.OneMinusDstAlphaFactor) return _gl.ONE_MINUS_DST_ALPHA;\n    if (p === THREE.DstColorFactor) return _gl.DST_COLOR;\n    if (p === THREE.OneMinusDstColorFactor) return _gl.ONE_MINUS_DST_COLOR;\n    if (p === THREE.SrcAlphaSaturateFactor) return _gl.SRC_ALPHA_SATURATE;\n    extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n      if (p === THREE.RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      if (p === THREE.RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n    }\n\n    extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n    if (extension !== null) {\n      if (p === THREE.RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n      if (p === THREE.RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n    }\n\n    extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      if (p === THREE.MinEquation) return extension.MIN_EXT;\n      if (p === THREE.MaxEquation) return extension.MAX_EXT;\n    }\n\n    return 0;\n  } // Allocations\n\n\n  function allocateBones(object) {\n    if (_supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader\n      //   to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = _gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS);\n\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = nVertexMatrices;\n\n      if (object !== undefined && object instanceof THREE.SkinnedMesh) {\n        maxBones = Math.min(object.skeleton.bones.length, maxBones);\n\n        if (maxBones < object.skeleton.bones.length) {\n          console.warn('WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)');\n        }\n      }\n\n      return maxBones;\n    }\n  }\n\n  function allocateLights(lights) {\n    var dirLights = 0;\n    var pointLights = 0;\n    var spotLights = 0;\n    var hemiLights = 0;\n\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      if (light.onlyShadow || light.visible === false) continue;\n      if (light instanceof THREE.DirectionalLight) dirLights++;\n      if (light instanceof THREE.PointLight) pointLights++;\n      if (light instanceof THREE.SpotLight) spotLights++;\n      if (light instanceof THREE.HemisphereLight) hemiLights++;\n    }\n\n    return {\n      'directional': dirLights,\n      'point': pointLights,\n      'spot': spotLights,\n      'hemi': hemiLights\n    };\n  }\n\n  function allocateShadows(lights) {\n    var maxShadows = 0;\n\n    for (var l = 0, ll = lights.length; l < ll; l++) {\n      var light = lights[l];\n      if (!light.castShadow) continue;\n      if (light instanceof THREE.SpotLight) maxShadows++;\n      if (light instanceof THREE.DirectionalLight && !light.shadowCascade) maxShadows++;\n    }\n\n    return maxShadows;\n  } // DEPRECATED\n\n\n  this.initMaterial = function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  };\n\n  this.addPrePlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  };\n\n  this.addPostPlugin = function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  };\n\n  this.updateShadowMap = function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  };\n}; // File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.WebGLRenderTarget = function (width, height, options) {\n  this.width = width;\n  this.height = height;\n  options = options || {};\n  this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\n  this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\n  this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\n  this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\n  this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\n  this.offset = new THREE.Vector2(0, 0);\n  this.repeat = new THREE.Vector2(1, 1);\n  this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\n  this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.generateMipmaps = true;\n  this.shareDepthFrom = null;\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n  constructor: THREE.WebGLRenderTarget,\n  setSize: function (width, height) {\n    this.width = width;\n    this.height = height;\n  },\n  clone: function () {\n    var tmp = new THREE.WebGLRenderTarget(this.width, this.height);\n    tmp.wrapS = this.wrapS;\n    tmp.wrapT = this.wrapT;\n    tmp.magFilter = this.magFilter;\n    tmp.minFilter = this.minFilter;\n    tmp.anisotropy = this.anisotropy;\n    tmp.offset.copy(this.offset);\n    tmp.repeat.copy(this.repeat);\n    tmp.format = this.format;\n    tmp.type = this.type;\n    tmp.depthBuffer = this.depthBuffer;\n    tmp.stencilBuffer = this.stencilBuffer;\n    tmp.generateMipmaps = this.generateMipmaps;\n    tmp.shareDepthFrom = this.shareDepthFrom;\n    return tmp;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype); // File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function (width, height, options) {\n  THREE.WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype); // File:src/renderers/webgl/WebGLExtensions.js\n\nTHREE.WebGLExtensions = function (gl) {\n  var extensions = {};\n\n  this.get = function (name) {\n    if (extensions[name] !== undefined) {\n      return extensions[name];\n    }\n\n    var extension;\n\n    switch (name) {\n      case 'OES_texture_float':\n        extension = gl.getExtension('OES_texture_float');\n        break;\n\n      case 'OES_texture_float_linear':\n        extension = gl.getExtension('OES_texture_float_linear');\n        break;\n\n      case 'OES_standard_derivatives':\n        extension = gl.getExtension('OES_standard_derivatives');\n        break;\n\n      case 'EXT_texture_filter_anisotropic':\n        extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n        break;\n\n      case 'WEBGL_compressed_texture_s3tc':\n        extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n        break;\n\n      case 'WEBGL_compressed_texture_pvrtc':\n        extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n        break;\n\n      case 'OES_element_index_uint':\n        extension = gl.getExtension('OES_element_index_uint');\n        break;\n\n      case 'EXT_blend_minmax':\n        extension = gl.getExtension('EXT_blend_minmax');\n        break;\n\n      case 'EXT_frag_depth':\n        extension = gl.getExtension('EXT_frag_depth');\n        break;\n    }\n\n    if (extension === null) {\n      console.log('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n    }\n\n    extensions[name] = extension;\n    return extension;\n  };\n}; // File:src/renderers/webgl/WebGLProgram.js\n\n\nTHREE.WebGLProgram = function () {\n  var programIdCount = 0;\n\n  var generateDefines = function (defines) {\n    var value,\n        chunk,\n        chunks = [];\n\n    for (var d in defines) {\n      value = defines[d];\n      if (value === false) continue;\n      chunk = \"#define \" + d + \" \" + value;\n      chunks.push(chunk);\n    }\n\n    return chunks.join(\"\\n\");\n  };\n\n  var cacheUniformLocations = function (gl, program, identifiers) {\n    var uniforms = {};\n\n    for (var i = 0, l = identifiers.length; i < l; i++) {\n      var id = identifiers[i];\n      uniforms[id] = gl.getUniformLocation(program, id);\n    }\n\n    return uniforms;\n  };\n\n  var cacheAttributeLocations = function (gl, program, identifiers) {\n    var attributes = {};\n\n    for (var i = 0, l = identifiers.length; i < l; i++) {\n      var id = identifiers[i];\n      attributes[id] = gl.getAttribLocation(program, id);\n    }\n\n    return attributes;\n  };\n\n  return function (renderer, code, material, parameters) {\n    var _this = renderer;\n    var _gl = _this.context;\n    var defines = material.defines;\n    var uniforms = material.__webglShader.uniforms;\n    var attributes = material.attributes;\n    var vertexShader = material.__webglShader.vertexShader;\n    var fragmentShader = material.__webglShader.fragmentShader;\n    var index0AttributeName = material.index0AttributeName;\n\n    if (index0AttributeName === undefined && parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      index0AttributeName = 'position';\n    }\n\n    var shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\n\n    if (parameters.shadowMapType === THREE.PCFShadowMap) {\n      shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\n    } else if (parameters.shadowMapType === THREE.PCFSoftShadowMap) {\n      shadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\n    } // console.log( \"building new program \" );\n    //\n\n\n    var customDefines = generateDefines(defines); //\n\n    var program = _gl.createProgram();\n\n    var prefix_vertex, prefix_fragment;\n\n    if (material instanceof THREE.RawShaderMaterial) {\n      prefix_vertex = '';\n      prefix_fragment = '';\n    } else {\n      prefix_vertex = [\"precision \" + parameters.precision + \" float;\", \"precision \" + parameters.precision + \" int;\", customDefines, parameters.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\", _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\", _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\", \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights, \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights, \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights, \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights, \"#define MAX_SHADOWS \" + parameters.maxShadows, \"#define MAX_BONES \" + parameters.maxBones, parameters.map ? \"#define USE_MAP\" : \"\", parameters.envMap ? \"#define USE_ENVMAP\" : \"\", parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\", parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\", parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\", parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\", parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\", parameters.vertexColors ? \"#define USE_COLOR\" : \"\", parameters.skinning ? \"#define USE_SKINNING\" : \"\", parameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\", parameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\", parameters.morphNormals ? \"#define USE_MORPHNORMALS\" : \"\", parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\", parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\", parameters.flipSided ? \"#define FLIP_SIDED\" : \"\", parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\", parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\", parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\", parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\", parameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\", parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\", //_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n      \"uniform mat4 modelMatrix;\", \"uniform mat4 modelViewMatrix;\", \"uniform mat4 projectionMatrix;\", \"uniform mat4 viewMatrix;\", \"uniform mat3 normalMatrix;\", \"uniform vec3 cameraPosition;\", \"attribute vec3 position;\", \"attribute vec3 normal;\", \"attribute vec2 uv;\", \"attribute vec2 uv2;\", \"#ifdef USE_COLOR\", \"\tattribute vec3 color;\", \"#endif\", \"#ifdef USE_MORPHTARGETS\", \"\tattribute vec3 morphTarget0;\", \"\tattribute vec3 morphTarget1;\", \"\tattribute vec3 morphTarget2;\", \"\tattribute vec3 morphTarget3;\", \"\t#ifdef USE_MORPHNORMALS\", \"\t\tattribute vec3 morphNormal0;\", \"\t\tattribute vec3 morphNormal1;\", \"\t\tattribute vec3 morphNormal2;\", \"\t\tattribute vec3 morphNormal3;\", \"\t#else\", \"\t\tattribute vec3 morphTarget4;\", \"\t\tattribute vec3 morphTarget5;\", \"\t\tattribute vec3 morphTarget6;\", \"\t\tattribute vec3 morphTarget7;\", \"\t#endif\", \"#endif\", \"#ifdef USE_SKINNING\", \"\tattribute vec4 skinIndex;\", \"\tattribute vec4 skinWeight;\", \"#endif\", \"\"].join('\\n');\n      prefix_fragment = [\"precision \" + parameters.precision + \" float;\", \"precision \" + parameters.precision + \" int;\", parameters.bumpMap || parameters.normalMap ? \"#extension GL_OES_standard_derivatives : enable\" : \"\", customDefines, \"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights, \"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights, \"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights, \"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights, \"#define MAX_SHADOWS \" + parameters.maxShadows, parameters.alphaTest ? \"#define ALPHATEST \" + parameters.alphaTest : \"\", _this.gammaInput ? \"#define GAMMA_INPUT\" : \"\", _this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\", parameters.useFog && parameters.fog ? \"#define USE_FOG\" : \"\", parameters.useFog && parameters.fogExp ? \"#define FOG_EXP2\" : \"\", parameters.map ? \"#define USE_MAP\" : \"\", parameters.envMap ? \"#define USE_ENVMAP\" : \"\", parameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\", parameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\", parameters.normalMap ? \"#define USE_NORMALMAP\" : \"\", parameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\", parameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\", parameters.vertexColors ? \"#define USE_COLOR\" : \"\", parameters.metal ? \"#define METAL\" : \"\", parameters.wrapAround ? \"#define WRAP_AROUND\" : \"\", parameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\", parameters.flipSided ? \"#define FLIP_SIDED\" : \"\", parameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\", parameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\", parameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\", parameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\", parameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\", //_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n      \"uniform mat4 viewMatrix;\", \"uniform vec3 cameraPosition;\", \"\"].join('\\n');\n    }\n\n    var glVertexShader = new THREE.WebGLShader(_gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader);\n    var glFragmentShader = new THREE.WebGLShader(_gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader);\n\n    _gl.attachShader(program, glVertexShader);\n\n    _gl.attachShader(program, glFragmentShader);\n\n    if (index0AttributeName !== undefined) {\n      // Force a particular attribute to index 0.\n      // because potentially expensive emulation is done by browser if attribute 0 is disabled.\n      // And, color, for example is often automatically bound to index 0 so disabling it\n      _gl.bindAttribLocation(program, 0, index0AttributeName);\n    }\n\n    _gl.linkProgram(program);\n\n    if (_gl.getProgramParameter(program, _gl.LINK_STATUS) === false) {\n      console.error('THREE.WebGLProgram: Could not initialise shader.');\n      console.error('gl.VALIDATE_STATUS', _gl.getProgramParameter(program, _gl.VALIDATE_STATUS));\n      console.error('gl.getError()', _gl.getError());\n    }\n\n    if (_gl.getProgramInfoLog(program) !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', _gl.getProgramInfoLog(program));\n    } // clean up\n\n\n    _gl.deleteShader(glVertexShader);\n\n    _gl.deleteShader(glFragmentShader); // cache uniform locations\n\n\n    var identifiers = ['viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition', 'morphTargetInfluences', 'bindMatrix', 'bindMatrixInverse'];\n\n    if (parameters.useVertexTexture) {\n      identifiers.push('boneTexture');\n      identifiers.push('boneTextureWidth');\n      identifiers.push('boneTextureHeight');\n    } else {\n      identifiers.push('boneGlobalMatrices');\n    }\n\n    if (parameters.logarithmicDepthBuffer) {\n      identifiers.push('logDepthBufFC');\n    }\n\n    for (var u in uniforms) {\n      identifiers.push(u);\n    }\n\n    this.uniforms = cacheUniformLocations(_gl, program, identifiers); // cache attributes locations\n\n    identifiers = [\"position\", \"normal\", \"uv\", \"uv2\", \"tangent\", \"color\", \"skinIndex\", \"skinWeight\", \"lineDistance\"];\n\n    for (var i = 0; i < parameters.maxMorphTargets; i++) {\n      identifiers.push(\"morphTarget\" + i);\n    }\n\n    for (var i = 0; i < parameters.maxMorphNormals; i++) {\n      identifiers.push(\"morphNormal\" + i);\n    }\n\n    for (var a in attributes) {\n      identifiers.push(a);\n    }\n\n    this.attributes = cacheAttributeLocations(_gl, program, identifiers);\n    this.attributesKeys = Object.keys(this.attributes); //\n\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  };\n}(); // File:src/renderers/webgl/WebGLShader.js\n\n\nTHREE.WebGLShader = function () {\n  var addLineNumbers = function (string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  };\n\n  return function (gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog(shader));\n      console.warn(addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  };\n}(); // File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.LensFlarePlugin = function (renderer, flares) {\n  var gl = renderer.context;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var hasVertexTexture;\n  var tempTexture, occlusionTexture;\n\n  var init = function () {\n    var vertices = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]); // buffers\n\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW); // textures\n\n    tempTexture = gl.createTexture();\n    occlusionTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    hasVertexTexture = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;\n    var shader;\n\n    if (hasVertexTexture) {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"uniform sampler2D occlusionMap;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if( renderType == 2 ) {\", \"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\", \"vVisibility =        visibility.r / 9.0;\", \"vVisibility *= 1.0 - visibility.g / 9.0;\", \"vVisibility *=       visibility.b / 9.0;\", \"vVisibility *= 1.0 - visibility.a / 9.0;\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"varying float vVisibility;\", \"void main() {\", // pink square\n        \"if( renderType == 0 ) {\", \"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\", // restore\n        \"} else if( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * vVisibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    } else {\n      shader = {\n        vertexShader: [\"uniform lowp int renderType;\", \"uniform vec3 screenPosition;\", \"uniform vec2 scale;\", \"uniform float rotation;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"void main() {\", \"vUV = uv;\", \"vec2 pos = position;\", \"if( renderType == 2 ) {\", \"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\", \"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\", \"}\", \"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"precision mediump float;\", \"uniform lowp int renderType;\", \"uniform sampler2D map;\", \"uniform sampler2D occlusionMap;\", \"uniform float opacity;\", \"uniform vec3 color;\", \"varying vec2 vUV;\", \"void main() {\", // pink square\n        \"if( renderType == 0 ) {\", \"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\", // restore\n        \"} else if( renderType == 1 ) {\", \"gl_FragColor = texture2D( map, vUV );\", // flare\n        \"} else {\", \"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\", \"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\", \"visibility = ( 1.0 - visibility / 4.0 );\", \"vec4 texture = texture2D( map, vUV );\", \"texture.a *= opacity * visibility;\", \"gl_FragColor = texture;\", \"gl_FragColor.rgb *= color;\", \"}\", \"}\"].join(\"\\n\")\n      };\n    }\n\n    program = createProgram(shader);\n    attributes = {\n      vertex: gl.getAttribLocation(program, \"position\"),\n      uv: gl.getAttribLocation(program, \"uv\")\n    };\n    uniforms = {\n      renderType: gl.getUniformLocation(program, \"renderType\"),\n      map: gl.getUniformLocation(program, \"map\"),\n      occlusionMap: gl.getUniformLocation(program, \"occlusionMap\"),\n      opacity: gl.getUniformLocation(program, \"opacity\"),\n      color: gl.getUniformLocation(program, \"color\"),\n      scale: gl.getUniformLocation(program, \"scale\"),\n      rotation: gl.getUniformLocation(program, \"rotation\"),\n      screenPosition: gl.getUniformLocation(program, \"screenPosition\")\n    };\n  };\n  /*\n   * Render lens flares\n   * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n   *         reads these back and calculates occlusion.\n   */\n\n\n  this.render = function (scene, camera, viewportWidth, viewportHeight) {\n    if (flares.length === 0) return;\n    var tempPosition = new THREE.Vector3();\n    var invAspect = viewportHeight / viewportWidth,\n        halfViewportWidth = viewportWidth * 0.5,\n        halfViewportHeight = viewportHeight * 0.5;\n    var size = 16 / viewportHeight,\n        scale = new THREE.Vector2(size * invAspect, size);\n    var screenPosition = new THREE.Vector3(1, 1, 0),\n        screenPositionPixels = new THREE.Vector2(1, 1);\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    gl.enableVertexAttribArray(attributes.vertex);\n    gl.enableVertexAttribArray(attributes.uv); // loop through all lens flares to update their occlusion and positions\n    // setup gl and common used attribs/unforms\n\n    gl.uniform1i(uniforms.occlusionMap, 0);\n    gl.uniform1i(uniforms.map, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.disable(gl.CULL_FACE);\n    gl.depthMask(false);\n\n    for (var i = 0, l = flares.length; i < l; i++) {\n      size = 16 / viewportHeight;\n      scale.set(size * invAspect, size); // calc object screen position\n\n      var flare = flares[i];\n      tempPosition.set(flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14]);\n      tempPosition.applyMatrix4(camera.matrixWorldInverse);\n      tempPosition.applyProjection(camera.projectionMatrix); // setup arrays for gl programs\n\n      screenPosition.copy(tempPosition);\n      screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n      screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight; // screen cull\n\n      if (hasVertexTexture || screenPositionPixels.x > 0 && screenPositionPixels.x < viewportWidth && screenPositionPixels.y > 0 && screenPositionPixels.y < viewportHeight) {\n        // save current RGB to temp texture\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0); // render pink quad\n\n        gl.uniform1i(uniforms.renderType, 0);\n        gl.uniform2f(uniforms.scale, scale.x, scale.y);\n        gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n        gl.disable(gl.BLEND);\n        gl.enable(gl.DEPTH_TEST);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // copy result to occlusionMap\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, occlusionTexture);\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0); // restore graphics\n\n        gl.uniform1i(uniforms.renderType, 1);\n        gl.disable(gl.DEPTH_TEST);\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, tempTexture);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); // update object positions\n\n        flare.positionScreen.copy(screenPosition);\n\n        if (flare.customUpdateCallback) {\n          flare.customUpdateCallback(flare);\n        } else {\n          flare.updateLensFlares();\n        } // render flares\n\n\n        gl.uniform1i(uniforms.renderType, 2);\n        gl.enable(gl.BLEND);\n\n        for (var j = 0, jl = flare.lensFlares.length; j < jl; j++) {\n          var sprite = flare.lensFlares[j];\n\n          if (sprite.opacity > 0.001 && sprite.scale > 0.001) {\n            screenPosition.x = sprite.x;\n            screenPosition.y = sprite.y;\n            screenPosition.z = sprite.z;\n            size = sprite.size * sprite.scale / viewportHeight;\n            scale.x = size * invAspect;\n            scale.y = size;\n            gl.uniform3f(uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z);\n            gl.uniform2f(uniforms.scale, scale.x, scale.y);\n            gl.uniform1f(uniforms.rotation, sprite.rotation);\n            gl.uniform1f(uniforms.opacity, sprite.opacity);\n            gl.uniform3f(uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b);\n            renderer.setBlending(sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst);\n            renderer.setTexture(sprite.texture, 1);\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n      }\n    } // restore gl\n\n\n    gl.enable(gl.CULL_FACE);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    renderer.resetGLState();\n  };\n\n  function createProgram(shader) {\n    var program = gl.createProgram();\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n    gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    return program;\n  }\n}; // File:src/renderers/webgl/plugins/ShadowMapPlugin.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.ShadowMapPlugin = function (_renderer, _lights, _webglObjects, _webglObjectsImmediate) {\n  var _gl = _renderer.context;\n\n  var _depthMaterial,\n      _depthMaterialMorph,\n      _depthMaterialSkin,\n      _depthMaterialMorphSkin,\n      _frustum = new THREE.Frustum(),\n      _projScreenMatrix = new THREE.Matrix4(),\n      _min = new THREE.Vector3(),\n      _max = new THREE.Vector3(),\n      _matrixPosition = new THREE.Vector3(),\n      _renderList = []; // init\n\n\n  var depthShader = THREE.ShaderLib[\"depthRGBA\"];\n  var depthUniforms = THREE.UniformsUtils.clone(depthShader.uniforms);\n  _depthMaterial = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader\n  });\n  _depthMaterialMorph = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    morphTargets: true\n  });\n  _depthMaterialSkin = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    skinning: true\n  });\n  _depthMaterialMorphSkin = new THREE.ShaderMaterial({\n    uniforms: depthUniforms,\n    vertexShader: depthShader.vertexShader,\n    fragmentShader: depthShader.fragmentShader,\n    morphTargets: true,\n    skinning: true\n  });\n  _depthMaterial._shadowPass = true;\n  _depthMaterialMorph._shadowPass = true;\n  _depthMaterialSkin._shadowPass = true;\n  _depthMaterialMorphSkin._shadowPass = true;\n\n  this.render = function (scene, camera) {\n    if (_renderer.shadowMapEnabled === false) return;\n    var i,\n        il,\n        j,\n        jl,\n        n,\n        shadowMap,\n        shadowMatrix,\n        shadowCamera,\n        program,\n        buffer,\n        material,\n        webglObject,\n        object,\n        light,\n        lights = [],\n        k = 0,\n        fog = null; // set GL state for depth map\n\n    _gl.clearColor(1, 1, 1, 1);\n\n    _gl.disable(_gl.BLEND);\n\n    _gl.enable(_gl.CULL_FACE);\n\n    _gl.frontFace(_gl.CCW);\n\n    if (_renderer.shadowMapCullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.FRONT);\n    } else {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    _renderer.setDepthTest(true); // preprocess lights\n    // \t- skip lights that are not casting shadows\n    //\t- create virtual lights for cascaded shadow maps\n\n\n    for (i = 0, il = _lights.length; i < il; i++) {\n      light = _lights[i];\n      if (!light.castShadow) continue;\n\n      if (light instanceof THREE.DirectionalLight && light.shadowCascade) {\n        for (n = 0; n < light.shadowCascadeCount; n++) {\n          var virtualLight;\n\n          if (!light.shadowCascadeArray[n]) {\n            virtualLight = createVirtualLight(light, n);\n            virtualLight.originalCamera = camera;\n            var gyro = new THREE.Gyroscope();\n            gyro.position.copy(light.shadowCascadeOffset);\n            gyro.add(virtualLight);\n            gyro.add(virtualLight.target);\n            camera.add(gyro);\n            light.shadowCascadeArray[n] = virtualLight;\n            console.log(\"Created virtualLight\", virtualLight);\n          } else {\n            virtualLight = light.shadowCascadeArray[n];\n          }\n\n          updateVirtualLight(light, n);\n          lights[k] = virtualLight;\n          k++;\n        }\n      } else {\n        lights[k] = light;\n        k++;\n      }\n    } // render depth map\n\n\n    for (i = 0, il = lights.length; i < il; i++) {\n      light = lights[i];\n\n      if (!light.shadowMap) {\n        var shadowFilter = THREE.LinearFilter;\n\n        if (_renderer.shadowMapType === THREE.PCFSoftShadowMap) {\n          shadowFilter = THREE.NearestFilter;\n        }\n\n        var pars = {\n          minFilter: shadowFilter,\n          magFilter: shadowFilter,\n          format: THREE.RGBAFormat\n        };\n        light.shadowMap = new THREE.WebGLRenderTarget(light.shadowMapWidth, light.shadowMapHeight, pars);\n        light.shadowMapSize = new THREE.Vector2(light.shadowMapWidth, light.shadowMapHeight);\n        light.shadowMatrix = new THREE.Matrix4();\n      }\n\n      if (!light.shadowCamera) {\n        if (light instanceof THREE.SpotLight) {\n          light.shadowCamera = new THREE.PerspectiveCamera(light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar);\n        } else if (light instanceof THREE.DirectionalLight) {\n          light.shadowCamera = new THREE.OrthographicCamera(light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar);\n        } else {\n          console.error(\"Unsupported light type for shadow\");\n          continue;\n        }\n\n        scene.add(light.shadowCamera);\n        if (scene.autoUpdate === true) scene.updateMatrixWorld();\n      }\n\n      if (light.shadowCameraVisible && !light.cameraHelper) {\n        light.cameraHelper = new THREE.CameraHelper(light.shadowCamera);\n        scene.add(light.cameraHelper);\n      }\n\n      if (light.isVirtual && virtualLight.originalCamera == camera) {\n        updateShadowCamera(camera, light);\n      }\n\n      shadowMap = light.shadowMap;\n      shadowMatrix = light.shadowMatrix;\n      shadowCamera = light.shadowCamera; //\n\n      shadowCamera.position.setFromMatrixPosition(light.matrixWorld);\n\n      _matrixPosition.setFromMatrixPosition(light.target.matrixWorld);\n\n      shadowCamera.lookAt(_matrixPosition);\n      shadowCamera.updateMatrixWorld();\n      shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld); //\n\n      if (light.cameraHelper) light.cameraHelper.visible = light.shadowCameraVisible;\n      if (light.shadowCameraVisible) light.cameraHelper.update(); // compute shadow matrix\n\n      shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse); // update camera matrices and frustum\n\n      _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix); // render shadow map\n\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // set object matrices & frustum culling\n\n\n      _renderList.length = 0;\n      projectObject(scene, scene, shadowCamera); // render regular objects\n\n      var objectMaterial, useMorphing, useSkinning;\n\n      for (j = 0, jl = _renderList.length; j < jl; j++) {\n        webglObject = _renderList[j];\n        object = webglObject.object;\n        buffer = webglObject.buffer; // culling is overriden globally for all objects\n        // while rendering depth map\n        // need to deal with MeshFaceMaterial somehow\n        // in that case just use the first of material.materials for now\n        // (proper solution would require to break objects by materials\n        //  similarly to regular rendering and then set corresponding\n        //  depth materials per each chunk instead of just once per object)\n\n        objectMaterial = getObjectMaterial(object);\n        useMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\n        useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\n\n        if (object.customDepthMaterial) {\n          material = object.customDepthMaterial;\n        } else if (useSkinning) {\n          material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\n        } else if (useMorphing) {\n          material = _depthMaterialMorph;\n        } else {\n          material = _depthMaterial;\n        }\n\n        _renderer.setMaterialFaces(objectMaterial);\n\n        if (buffer instanceof THREE.BufferGeometry) {\n          _renderer.renderBufferDirect(shadowCamera, _lights, fog, material, buffer, object);\n        } else {\n          _renderer.renderBuffer(shadowCamera, _lights, fog, material, buffer, object);\n        }\n      } // set matrices and render immediate objects\n\n\n      for (j = 0, jl = _webglObjectsImmediate.length; j < jl; j++) {\n        webglObject = _webglObjectsImmediate[j];\n        object = webglObject.object;\n\n        if (object.visible && object.castShadow) {\n          object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderer.renderImmediateObject(shadowCamera, _lights, fog, _depthMaterial, object);\n        }\n      }\n    } // restore GL state\n\n\n    var clearColor = _renderer.getClearColor(),\n        clearAlpha = _renderer.getClearAlpha();\n\n    _gl.clearColor(clearColor.r, clearColor.g, clearColor.b, clearAlpha);\n\n    _gl.enable(_gl.BLEND);\n\n    if (_renderer.shadowMapCullFace === THREE.CullFaceFront) {\n      _gl.cullFace(_gl.BACK);\n    }\n\n    _renderer.resetGLState();\n  };\n\n  function projectObject(scene, object, shadowCamera) {\n    if (object.visible) {\n      var webglObjects = _webglObjects[object.id];\n\n      if (webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject(object) === true)) {\n        for (var i = 0, l = webglObjects.length; i < l; i++) {\n          var webglObject = webglObjects[i];\n\n          object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          _renderList.push(webglObject);\n        }\n      }\n\n      for (var i = 0, l = object.children.length; i < l; i++) {\n        projectObject(scene, object.children[i], shadowCamera);\n      }\n    }\n  }\n\n  function createVirtualLight(light, cascade) {\n    var virtualLight = new THREE.DirectionalLight();\n    virtualLight.isVirtual = true;\n    virtualLight.onlyShadow = true;\n    virtualLight.castShadow = true;\n    virtualLight.shadowCameraNear = light.shadowCameraNear;\n    virtualLight.shadowCameraFar = light.shadowCameraFar;\n    virtualLight.shadowCameraLeft = light.shadowCameraLeft;\n    virtualLight.shadowCameraRight = light.shadowCameraRight;\n    virtualLight.shadowCameraBottom = light.shadowCameraBottom;\n    virtualLight.shadowCameraTop = light.shadowCameraTop;\n    virtualLight.shadowCameraVisible = light.shadowCameraVisible;\n    virtualLight.shadowDarkness = light.shadowDarkness;\n    virtualLight.shadowBias = light.shadowCascadeBias[cascade];\n    virtualLight.shadowMapWidth = light.shadowCascadeWidth[cascade];\n    virtualLight.shadowMapHeight = light.shadowCascadeHeight[cascade];\n    virtualLight.pointsWorld = [];\n    virtualLight.pointsFrustum = [];\n    var pointsWorld = virtualLight.pointsWorld,\n        pointsFrustum = virtualLight.pointsFrustum;\n\n    for (var i = 0; i < 8; i++) {\n      pointsWorld[i] = new THREE.Vector3();\n      pointsFrustum[i] = new THREE.Vector3();\n    }\n\n    var nearZ = light.shadowCascadeNearZ[cascade];\n    var farZ = light.shadowCascadeFarZ[cascade];\n    pointsFrustum[0].set(-1, -1, nearZ);\n    pointsFrustum[1].set(1, -1, nearZ);\n    pointsFrustum[2].set(-1, 1, nearZ);\n    pointsFrustum[3].set(1, 1, nearZ);\n    pointsFrustum[4].set(-1, -1, farZ);\n    pointsFrustum[5].set(1, -1, farZ);\n    pointsFrustum[6].set(-1, 1, farZ);\n    pointsFrustum[7].set(1, 1, farZ);\n    return virtualLight;\n  } // Synchronize virtual light with the original light\n\n\n  function updateVirtualLight(light, cascade) {\n    var virtualLight = light.shadowCascadeArray[cascade];\n    virtualLight.position.copy(light.position);\n    virtualLight.target.position.copy(light.target.position);\n    virtualLight.lookAt(virtualLight.target);\n    virtualLight.shadowCameraVisible = light.shadowCameraVisible;\n    virtualLight.shadowDarkness = light.shadowDarkness;\n    virtualLight.shadowBias = light.shadowCascadeBias[cascade];\n    var nearZ = light.shadowCascadeNearZ[cascade];\n    var farZ = light.shadowCascadeFarZ[cascade];\n    var pointsFrustum = virtualLight.pointsFrustum;\n    pointsFrustum[0].z = nearZ;\n    pointsFrustum[1].z = nearZ;\n    pointsFrustum[2].z = nearZ;\n    pointsFrustum[3].z = nearZ;\n    pointsFrustum[4].z = farZ;\n    pointsFrustum[5].z = farZ;\n    pointsFrustum[6].z = farZ;\n    pointsFrustum[7].z = farZ;\n  } // Fit shadow camera's ortho frustum to camera frustum\n\n\n  function updateShadowCamera(camera, light) {\n    var shadowCamera = light.shadowCamera,\n        pointsFrustum = light.pointsFrustum,\n        pointsWorld = light.pointsWorld;\n\n    _min.set(Infinity, Infinity, Infinity);\n\n    _max.set(-Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < 8; i++) {\n      var p = pointsWorld[i];\n      p.copy(pointsFrustum[i]);\n      p.unproject(camera);\n      p.applyMatrix4(shadowCamera.matrixWorldInverse);\n      if (p.x < _min.x) _min.x = p.x;\n      if (p.x > _max.x) _max.x = p.x;\n      if (p.y < _min.y) _min.y = p.y;\n      if (p.y > _max.y) _max.y = p.y;\n      if (p.z < _min.z) _min.z = p.z;\n      if (p.z > _max.z) _max.z = p.z;\n    }\n\n    shadowCamera.left = _min.x;\n    shadowCamera.right = _max.x;\n    shadowCamera.top = _max.y;\n    shadowCamera.bottom = _min.y; // can't really fit near/far\n    //shadowCamera.near = _min.z;\n    //shadowCamera.far = _max.z;\n\n    shadowCamera.updateProjectionMatrix();\n  } // For the moment just ignore objects that have multiple materials with different animation methods\n  // Only the first material will be taken into account for deciding which depth material to use for shadow maps\n\n\n  function getObjectMaterial(object) {\n    return object.material instanceof THREE.MeshFaceMaterial ? object.material.materials[0] : object.material;\n  }\n\n  ;\n}; // File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.SpritePlugin = function (renderer, sprites) {\n  var gl = renderer.context;\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture;\n\n  var init = function () {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n  };\n\n  this.render = function (scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    gl.useProgram(program);\n    gl.enableVertexAttribArray(attributes.position);\n    gl.enableVertexAttribArray(attributes.uv);\n    gl.disable(gl.CULL_FACE);\n    gl.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog instanceof THREE.Fog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog instanceof THREE.FogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n\n      sprite._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n\n      if (sprite.renderDepth === null) {\n        sprite.z = -sprite._modelViewMatrix.elements[14];\n      } else {\n        sprite.z = sprite.renderDepth;\n      }\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements);\n      scale[0] = sprite.scale.x;\n      scale[1] = sprite.scale.y;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.scale, scale);\n      renderer.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst);\n      renderer.setDepthTest(material.depthTest);\n      renderer.setDepthWrite(material.depthWrite);\n\n      if (material.map && material.map.image && material.map.image.width) {\n        renderer.setTexture(material.map, 0);\n      } else {\n        renderer.setTexture(texture, 0);\n      }\n\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    } // restore gl\n\n\n    gl.enable(gl.CULL_FACE);\n    renderer.resetGLState();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'void main() {', 'vUV = uvOffset + uv * uvScale;', 'vec2 alignedPosition = position * scale;', 'vec2 rotatedPosition;', 'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', 'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', 'vec4 finalPosition;', 'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', 'finalPosition.xy += rotatedPosition;', 'finalPosition = projectionMatrix * finalPosition;', 'gl_Position = finalPosition;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + renderer.getPrecision() + ' float;', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'void main() {', 'vec4 texture = texture2D( map, vUV );', 'if ( texture.a < alphaTest ) discard;', 'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', 'if ( fogType > 0 ) {', 'float depth = gl_FragCoord.z / gl_FragCoord.w;', 'float fogFactor = 0.0;', 'if ( fogType == 1 ) {', 'fogFactor = smoothstep( fogNear, fogFar, depth );', '} else {', 'const float LOG2 = 1.442695;', 'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );', 'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '}', 'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );', '}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  ;\n\n  function painterSortStable(a, b) {\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n\n  ;\n}; // File:src/extras/GeometryUtils.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.GeometryUtils = {\n  merge: function (geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2 instanceof THREE.Mesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function (geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n}; // File:src/extras/ImageUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Daosheng Mu / https://github.com/DaoshengMu/\n */\n\nTHREE.ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function (url, mapping, onLoad, onError) {\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n    var texture = new THREE.Texture(undefined, mapping);\n    loader.load(url, function (image) {\n      texture.image = image;\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture);\n    }, undefined, function (event) {\n      if (onError) onError(event);\n    });\n    texture.sourceFile = url;\n    return texture;\n  },\n  loadTextureCube: function (array, mapping, onLoad, onError) {\n    var images = [];\n    var loader = new THREE.ImageLoader();\n    loader.crossOrigin = this.crossOrigin;\n    var texture = new THREE.CubeTexture(images, mapping); // no flipping needed for cube textures\n\n    texture.flipY = false;\n    var loaded = 0;\n\n    var loadTexture = function (i) {\n      loader.load(array[i], function (image) {\n        texture.images[i] = image;\n        loaded += 1;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      });\n    };\n\n    for (var i = 0, il = array.length; i < il; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  loadCompressedTexture: function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  },\n  getNormalMap: function (image, depth) {\n    // Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\n    var cross = function (a, b) {\n      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n    };\n\n    var subtract = function (a, b) {\n      return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\n    };\n\n    var normalize = function (a) {\n      var l = Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n      return [a[0] / l, a[1] / l, a[2] / l];\n    };\n\n    depth = depth | 1;\n    var width = image.width;\n    var height = image.height;\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    var data = context.getImageData(0, 0, width, height).data;\n    var imageData = context.createImageData(width, height);\n    var output = imageData.data;\n\n    for (var x = 0; x < width; x++) {\n      for (var y = 0; y < height; y++) {\n        var ly = y - 1 < 0 ? 0 : y - 1;\n        var uy = y + 1 > height - 1 ? height - 1 : y + 1;\n        var lx = x - 1 < 0 ? 0 : x - 1;\n        var ux = x + 1 > width - 1 ? width - 1 : x + 1;\n        var points = [];\n        var origin = [0, 0, data[(y * width + x) * 4] / 255 * depth];\n        points.push([-1, 0, data[(y * width + lx) * 4] / 255 * depth]);\n        points.push([-1, -1, data[(ly * width + lx) * 4] / 255 * depth]);\n        points.push([0, -1, data[(ly * width + x) * 4] / 255 * depth]);\n        points.push([1, -1, data[(ly * width + ux) * 4] / 255 * depth]);\n        points.push([1, 0, data[(y * width + ux) * 4] / 255 * depth]);\n        points.push([1, 1, data[(uy * width + ux) * 4] / 255 * depth]);\n        points.push([0, 1, data[(uy * width + x) * 4] / 255 * depth]);\n        points.push([-1, 1, data[(uy * width + lx) * 4] / 255 * depth]);\n        var normals = [];\n        var num_points = points.length;\n\n        for (var i = 0; i < num_points; i++) {\n          var v1 = points[i];\n          var v2 = points[(i + 1) % num_points];\n          v1 = subtract(v1, origin);\n          v2 = subtract(v2, origin);\n          normals.push(normalize(cross(v1, v2)));\n        }\n\n        var normal = [0, 0, 0];\n\n        for (var i = 0; i < normals.length; i++) {\n          normal[0] += normals[i][0];\n          normal[1] += normals[i][1];\n          normal[2] += normals[i][2];\n        }\n\n        normal[0] /= normals.length;\n        normal[1] /= normals.length;\n        normal[2] /= normals.length;\n        var idx = (y * width + x) * 4;\n        output[idx] = (normal[0] + 1.0) / 2.0 * 255 | 0;\n        output[idx + 1] = (normal[1] + 1.0) / 2.0 * 255 | 0;\n        output[idx + 2] = normal[2] * 255 | 0;\n        output[idx + 3] = 255;\n      }\n    }\n\n    context.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n  generateDataTexture: function (width, height, color) {\n    var size = width * height;\n    var data = new Uint8Array(3 * size);\n    var r = Math.floor(color.r * 255);\n    var g = Math.floor(color.g * 255);\n    var b = Math.floor(color.b * 255);\n\n    for (var i = 0; i < size; i++) {\n      data[i * 3] = r;\n      data[i * 3 + 1] = g;\n      data[i * 3 + 2] = b;\n    }\n\n    var texture = new THREE.DataTexture(data, width, height, THREE.RGBFormat);\n    texture.needsUpdate = true;\n    return texture;\n  }\n}; // File:src/extras/SceneUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SceneUtils = {\n  createMultiMaterialObject: function (geometry, materials) {\n    var group = new THREE.Object3D();\n\n    for (var i = 0, l = materials.length; i < l; i++) {\n      group.add(new THREE.Mesh(geometry, materials[i]));\n    }\n\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    child.applyMatrix(parent.matrixWorld);\n    parent.remove(child);\n    scene.add(child);\n  },\n  attach: function (child, scene, parent) {\n    var matrixWorldInverse = new THREE.Matrix4();\n    matrixWorldInverse.getInverse(parent.matrixWorld);\n    child.applyMatrix(matrixWorldInverse);\n    scene.remove(child);\n    parent.add(child);\n  }\n}; // File:src/extras/FontUtils.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For Text operations in three.js (See TextGeometry)\n *\n * It uses techniques used in:\n *\n * \ttypeface.js and canvastext\n * \t\tFor converting fonts and rendering with javascript\n *\t\thttp://typeface.neocracy.org\n *\n *\tTriangulation ported from AS3\n *\t\tSimple Polygon Triangulation\n *\t\thttp://actionsnippet.com/?p=1462\n *\n * \tA Method to triangulate shapes with holes\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\n *\n */\n\nTHREE.FontUtils = {\n  faces: {},\n  // Just for now. face[weight][style]\n  face: 'helvetiker',\n  weight: 'normal',\n  style: 'normal',\n  size: 150,\n  divisions: 10,\n  getFace: function () {\n    try {\n      return this.faces[this.face][this.weight][this.style];\n    } catch (e) {\n      throw \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\";\n    }\n\n    ;\n  },\n  loadFace: function (data) {\n    var family = data.familyName.toLowerCase();\n    var ThreeFont = this;\n    ThreeFont.faces[family] = ThreeFont.faces[family] || {};\n    ThreeFont.faces[family][data.cssFontWeight] = ThreeFont.faces[family][data.cssFontWeight] || {};\n    ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle] = data;\n    var face = ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle] = data;\n    return data;\n  },\n  drawText: function (text) {\n    var characterPts = [],\n        allPts = []; // RenderText\n\n    var i,\n        p,\n        face = this.getFace(),\n        scale = this.size / face.resolution,\n        offset = 0,\n        chars = String(text).split(''),\n        length = chars.length;\n    var fontPaths = [];\n\n    for (i = 0; i < length; i++) {\n      var path = new THREE.Path();\n      var ret = this.extractGlyphPoints(chars[i], face, scale, offset, path);\n      offset += ret.offset;\n      fontPaths.push(ret.path);\n    } // get the width\n\n\n    var width = offset / 2; //\n    // for ( p = 0; p < allPts.length; p++ ) {\n    //\n    // \tallPts[ p ].x -= width;\n    //\n    // }\n    //var extract = this.extractPoints( allPts, characterPts );\n    //extract.contour = allPts;\n    //extract.paths = fontPaths;\n    //extract.offset = width;\n\n    return {\n      paths: fontPaths,\n      offset: width\n    };\n  },\n  extractGlyphPoints: function (c, face, scale, offset, path) {\n    var pts = [];\n    var i,\n        i2,\n        divisions,\n        outline,\n        action,\n        length,\n        scaleX,\n        scaleY,\n        x,\n        y,\n        cpx,\n        cpy,\n        cpx0,\n        cpy0,\n        cpx1,\n        cpy1,\n        cpx2,\n        cpy2,\n        laste,\n        glyph = face.glyphs[c] || face.glyphs['?'];\n    if (!glyph) return;\n\n    if (glyph.o) {\n      outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n      length = outline.length;\n      scaleX = scale;\n      scaleY = scale;\n\n      for (i = 0; i < length;) {\n        action = outline[i++]; //console.log( action );\n\n        switch (action) {\n          case 'm':\n            // Move To\n            x = outline[i++] * scaleX + offset;\n            y = outline[i++] * scaleY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // Line To\n            x = outline[i++] * scaleX + offset;\n            y = outline[i++] * scaleY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // QuadraticCurveTo\n            cpx = outline[i++] * scaleX + offset;\n            cpy = outline[i++] * scaleY;\n            cpx1 = outline[i++] * scaleX + offset;\n            cpy1 = outline[i++] * scaleY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            laste = pts[pts.length - 1];\n\n            if (laste) {\n              cpx0 = laste.x;\n              cpy0 = laste.y;\n\n              for (i2 = 1, divisions = this.divisions; i2 <= divisions; i2++) {\n                var t = i2 / divisions;\n                var tx = THREE.Shape.Utils.b2(t, cpx0, cpx1, cpx);\n                var ty = THREE.Shape.Utils.b2(t, cpy0, cpy1, cpy);\n              }\n            }\n\n            break;\n\n          case 'b':\n            // Cubic Bezier Curve\n            cpx = outline[i++] * scaleX + offset;\n            cpy = outline[i++] * scaleY;\n            cpx1 = outline[i++] * scaleX + offset;\n            cpy1 = outline[i++] * scaleY;\n            cpx2 = outline[i++] * scaleX + offset;\n            cpy2 = outline[i++] * scaleY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            laste = pts[pts.length - 1];\n\n            if (laste) {\n              cpx0 = laste.x;\n              cpy0 = laste.y;\n\n              for (i2 = 1, divisions = this.divisions; i2 <= divisions; i2++) {\n                var t = i2 / divisions;\n                var tx = THREE.Shape.Utils.b3(t, cpx0, cpx1, cpx2, cpx);\n                var ty = THREE.Shape.Utils.b3(t, cpy0, cpy1, cpy2, cpy);\n              }\n            }\n\n            break;\n        }\n      }\n    }\n\n    return {\n      offset: glyph.ha * scale,\n      path: path\n    };\n  }\n};\n\nTHREE.FontUtils.generateShapes = function (text, parameters) {\n  // Parameters \n  parameters = parameters || {};\n  var size = parameters.size !== undefined ? parameters.size : 100;\n  var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\n  var font = parameters.font !== undefined ? parameters.font : 'helvetiker';\n  var weight = parameters.weight !== undefined ? parameters.weight : 'normal';\n  var style = parameters.style !== undefined ? parameters.style : 'normal';\n  THREE.FontUtils.size = size;\n  THREE.FontUtils.divisions = curveSegments;\n  THREE.FontUtils.face = font;\n  THREE.FontUtils.weight = weight;\n  THREE.FontUtils.style = style; // Get a Font data json object\n\n  var data = THREE.FontUtils.drawText(text);\n  var paths = data.paths;\n  var shapes = [];\n\n  for (var p = 0, pl = paths.length; p < pl; p++) {\n    Array.prototype.push.apply(shapes, paths[p].toShapes());\n  }\n\n  return shapes;\n};\n/**\n * This code is a quick port of code written in C++ which was submitted to\n * flipcode.com by John W. Ratcliff  // July 22, 2000\n * See original code and more information here:\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n *\n * ported to actionscript by Zevan Rosser\n * www.actionsnippet.com\n *\n * ported to javascript by Joshua Koo\n * http://www.lab4games.net/zz85/blog\n *\n */\n\n\n(function (namespace) {\n  var EPSILON = 0.0000000001; // takes in an contour array and returns\n\n  var process = function (contour, indices) {\n    var n = contour.length;\n    if (n < 3) return null;\n    var result = [],\n        verts = [],\n        vertIndices = [];\n    /* we want a counter-clockwise polygon in verts */\n\n    var u, v, w;\n\n    if (area(contour) > 0.0) {\n      for (v = 0; v < n; v++) verts[v] = v;\n    } else {\n      for (v = 0; v < n; v++) verts[v] = n - 1 - v;\n    }\n\n    var nv = n;\n    /*  remove nv - 2 vertices, creating 1 triangle every time */\n\n    var count = 2 * nv;\n    /* error detection */\n\n    for (v = nv - 1; nv > 2;) {\n      /* if we loop, it is probably a non-simple polygon */\n      if (count-- <= 0) {\n        //** Triangulate: ERROR - probable bad polygon!\n        //throw ( \"Warning, unable to triangulate polygon!\" );\n        //return null;\n        // Sometimes warning is fine, especially polygons are triangulated in reverse.\n        console.log('Warning, unable to triangulate polygon!');\n        if (indices) return vertIndices;\n        return result;\n      }\n      /* three consecutive vertices in current polygon, <u,v,w> */\n\n\n      u = v;\n      if (nv <= u) u = 0;\n      /* previous */\n\n      v = u + 1;\n      if (nv <= v) v = 0;\n      /* new v    */\n\n      w = v + 1;\n      if (nv <= w) w = 0;\n      /* next     */\n\n      if (snip(contour, u, v, w, nv, verts)) {\n        var a, b, c, s, t;\n        /* true names of the vertices */\n\n        a = verts[u];\n        b = verts[v];\n        c = verts[w];\n        /* output Triangle */\n\n        result.push([contour[a], contour[b], contour[c]]);\n        vertIndices.push([verts[u], verts[v], verts[w]]);\n        /* remove v from the remaining polygon */\n\n        for (s = v, t = v + 1; t < nv; s++, t++) {\n          verts[s] = verts[t];\n        }\n\n        nv--;\n        /* reset error detection counter */\n\n        count = 2 * nv;\n      }\n    }\n\n    if (indices) return vertIndices;\n    return result;\n  }; // calculate area of the contour polygon\n\n\n  var area = function (contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  };\n\n  var snip = function (contour, u, v, w, n, verts) {\n    var p;\n    var ax, ay, bx, by;\n    var cx, cy, px, py;\n    ax = contour[verts[u]].x;\n    ay = contour[verts[u]].y;\n    bx = contour[verts[v]].x;\n    by = contour[verts[v]].y;\n    cx = contour[verts[w]].x;\n    cy = contour[verts[w]].y;\n    if (EPSILON > (bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) return false;\n    var aX, aY, bX, bY, cX, cY;\n    var apx, apy, bpx, bpy, cpx, cpy;\n    var cCROSSap, bCROSScp, aCROSSbp;\n    aX = cx - bx;\n    aY = cy - by;\n    bX = ax - cx;\n    bY = ay - cy;\n    cX = bx - ax;\n    cY = by - ay;\n\n    for (p = 0; p < n; p++) {\n      px = contour[verts[p]].x;\n      py = contour[verts[p]].y;\n      if (px === ax && py === ay || px === bx && py === by || px === cx && py === cy) continue;\n      apx = px - ax;\n      apy = py - ay;\n      bpx = px - bx;\n      bpy = py - by;\n      cpx = px - cx;\n      cpy = py - cy; // see if p is inside triangle abc\n\n      aCROSSbp = aX * bpy - aY * bpx;\n      cCROSSap = cX * apy - cY * apx;\n      bCROSScp = bX * cpy - bY * cpx;\n      if (aCROSSbp >= -EPSILON && bCROSScp >= -EPSILON && cCROSSap >= -EPSILON) return false;\n    }\n\n    return true;\n  };\n\n  namespace.Triangulate = process;\n  namespace.Triangulate.area = area;\n  return namespace;\n})(THREE.FontUtils); // To use the typeface.js face files, hook up the API\n\n\nself._typeface_js = {\n  faces: THREE.FontUtils.faces,\n  loadFace: THREE.FontUtils.loadFace\n};\nTHREE.typeface_js = self._typeface_js; // File:src/extras/audio/Audio.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Audio = function (listener) {\n  THREE.Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.source = this.context.createBufferSource();\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n};\n\nTHREE.Audio.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Audio.prototype.load = function (file) {\n  var scope = this;\n  var request = new XMLHttpRequest();\n  request.open('GET', file, true);\n  request.responseType = 'arraybuffer';\n\n  request.onload = function (e) {\n    scope.context.decodeAudioData(this.response, function (buffer) {\n      scope.source.buffer = buffer;\n      scope.source.connect(scope.panner);\n      scope.source.start(0);\n    });\n  };\n\n  request.send();\n  return this;\n};\n\nTHREE.Audio.prototype.setLoop = function (value) {\n  this.source.loop = value;\n};\n\nTHREE.Audio.prototype.setRefDistance = function (value) {\n  this.panner.refDistance = value;\n};\n\nTHREE.Audio.prototype.setRolloffFactor = function (value) {\n  this.panner.rolloffFactor = value;\n};\n\nTHREE.Audio.prototype.updateMatrixWorld = function () {\n  var position = new THREE.Vector3();\n  return function (force) {\n    THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n    position.setFromMatrixPosition(this.matrixWorld);\n    this.panner.setPosition(position.x, position.y, position.z);\n  };\n}(); // File:src/extras/audio/AudioListener.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.AudioListener = function () {\n  THREE.Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = new (window.AudioContext || window.webkitAudioContext)();\n};\n\nTHREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.AudioListener.prototype.updateMatrixWorld = function () {\n  var position = new THREE.Vector3();\n  var quaternion = new THREE.Quaternion();\n  var scale = new THREE.Vector3();\n  var orientation = new THREE.Vector3();\n  var velocity = new THREE.Vector3();\n  var positionPrev = new THREE.Vector3();\n  return function (force) {\n    THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n    var listener = this.context.listener;\n    this.matrixWorld.decompose(position, quaternion, scale);\n    orientation.set(0, 0, -1).applyQuaternion(quaternion);\n    velocity.subVectors(position, positionPrev);\n    listener.setPosition(position.x, position.y, position.z);\n    listener.setOrientation(orientation.x, orientation.y, orientation.z, this.up.x, this.up.y, this.up.z);\n    listener.setVelocity(velocity.x, velocity.y, velocity.z);\n    positionPrev.copy(position);\n  };\n}(); // File:src/extras/core/Curve.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of Curve methods\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTagentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following classes subclasses THREE.Curve:\n *\n * -- 2d classes --\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.CubicBezierCurve\n * THREE.SplineCurve\n * THREE.ArcCurve\n * THREE.EllipseCurve\n *\n * -- 3d classes --\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n * THREE.CubicBezierCurve3\n * THREE.SplineCurve3\n * THREE.ClosedSplineCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\n\nTHREE.Curve = function () {}; // Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\n\n\nTHREE.Curve.prototype.getPoint = function (t) {\n  console.log(\"Warning, getPoint() not implemented!\");\n  return null;\n}; // Get point at relative position in curve according to arc length\n// - u [0 .. 1]\n\n\nTHREE.Curve.prototype.getPointAt = function (u) {\n  var t = this.getUtoTmapping(u);\n  return this.getPoint(t);\n}; // Get sequence of points using getPoint( t )\n\n\nTHREE.Curve.prototype.getPoints = function (divisions) {\n  if (!divisions) divisions = 5;\n  var d,\n      pts = [];\n\n  for (d = 0; d <= divisions; d++) {\n    pts.push(this.getPoint(d / divisions));\n  }\n\n  return pts;\n}; // Get sequence of points using getPointAt( u )\n\n\nTHREE.Curve.prototype.getSpacedPoints = function (divisions) {\n  if (!divisions) divisions = 5;\n  var d,\n      pts = [];\n\n  for (d = 0; d <= divisions; d++) {\n    pts.push(this.getPointAt(d / divisions));\n  }\n\n  return pts;\n}; // Get total curve arc length\n\n\nTHREE.Curve.prototype.getLength = function () {\n  var lengths = this.getLengths();\n  return lengths[lengths.length - 1];\n}; // Get list of cumulative segment lengths\n\n\nTHREE.Curve.prototype.getLengths = function (divisions) {\n  if (!divisions) divisions = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200;\n\n  if (this.cacheArcLengths && this.cacheArcLengths.length == divisions + 1 && !this.needsUpdate) {\n    //console.log( \"cached\", this.cacheArcLengths );\n    return this.cacheArcLengths;\n  }\n\n  this.needsUpdate = false;\n  var cache = [];\n  var current,\n      last = this.getPoint(0);\n  var p,\n      sum = 0;\n  cache.push(0);\n\n  for (p = 1; p <= divisions; p++) {\n    current = this.getPoint(p / divisions);\n    sum += current.distanceTo(last);\n    cache.push(sum);\n    last = current;\n  }\n\n  this.cacheArcLengths = cache;\n  return cache; // { sums: cache, sum:sum }; Sum is in the last element.\n};\n\nTHREE.Curve.prototype.updateArcLengths = function () {\n  this.needsUpdate = true;\n  this.getLengths();\n}; // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\n\n\nTHREE.Curve.prototype.getUtoTmapping = function (u, distance) {\n  var arcLengths = this.getLengths();\n  var i = 0,\n      il = arcLengths.length;\n  var targetArcLength; // The targeted u distance value to get\n\n  if (distance) {\n    targetArcLength = distance;\n  } else {\n    targetArcLength = u * arcLengths[il - 1];\n  } //var time = Date.now();\n  // binary search for the index with largest value smaller than target u distance\n\n\n  var low = 0,\n      high = il - 1,\n      comparison;\n\n  while (low <= high) {\n    i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n    comparison = arcLengths[i] - targetArcLength;\n\n    if (comparison < 0) {\n      low = i + 1;\n      continue;\n    } else if (comparison > 0) {\n      high = i - 1;\n      continue;\n    } else {\n      high = i;\n      break; // DONE\n    }\n  }\n\n  i = high; //console.log('b' , i, low, high, Date.now()- time);\n\n  if (arcLengths[i] == targetArcLength) {\n    var t = i / (il - 1);\n    return t;\n  } // we could get finer grain at lengths, or use simple interpolatation between two points\n\n\n  var lengthBefore = arcLengths[i];\n  var lengthAfter = arcLengths[i + 1];\n  var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n  var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n  var t = (i + segmentFraction) / (il - 1);\n  return t;\n}; // Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\n\n\nTHREE.Curve.prototype.getTangent = function (t) {\n  var delta = 0.0001;\n  var t1 = t - delta;\n  var t2 = t + delta; // Capping in case of danger\n\n  if (t1 < 0) t1 = 0;\n  if (t2 > 1) t2 = 1;\n  var pt1 = this.getPoint(t1);\n  var pt2 = this.getPoint(t2);\n  var vec = pt2.clone().sub(pt1);\n  return vec.normalize();\n};\n\nTHREE.Curve.prototype.getTangentAt = function (u) {\n  var t = this.getUtoTmapping(u);\n  return this.getTangent(t);\n};\n/**************************************************************\n *\tUtils\n **************************************************************/\n\n\nTHREE.Curve.Utils = {\n  tangentQuadraticBezier: function (t, p0, p1, p2) {\n    return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n  },\n  // Puay Bing, thanks for helping with this derivative!\n  tangentCubicBezier: function (t, p0, p1, p2, p3) {\n    return -3 * p0 * (1 - t) * (1 - t) + 3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) + 6 * t * p2 * (1 - t) - 3 * t * t * p2 + 3 * t * t * p3;\n  },\n  tangentSpline: function (t, p0, p1, p2, p3) {\n    // To check if my formulas are correct\n    var h00 = 6 * t * t - 6 * t; // derived from 2t^3 − 3t^2 + 1\n\n    var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\n    var h01 = -6 * t * t + 6 * t; // − 2t3 + 3t2\n\n    var h11 = 3 * t * t - 2 * t; // t3 − t2\n\n    return h00 + h10 + h01 + h11;\n  },\n  // Catmull-Rom\n  interpolate: function (p0, p1, p2, p3, t) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  }\n}; // TODO: Transformation for Curves?\n\n/**************************************************************\n *\t3D Curves\n **************************************************************/\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function (constructor, getPointFunc) {\n  constructor.prototype = Object.create(THREE.Curve.prototype);\n  constructor.prototype.getPoint = getPointFunc;\n  return constructor;\n}; // File:src/extras/core/CurvePath.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\n\nTHREE.CurvePath = function () {\n  this.curves = [];\n  this.bends = [];\n  this.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.CurvePath.prototype.add = function (curve) {\n  this.curves.push(curve);\n};\n\nTHREE.CurvePath.prototype.checkConnection = function () {// TODO\n  // If the ending of curve is not connected to the starting\n  // or the next curve, then, this is not a real path\n};\n\nTHREE.CurvePath.prototype.closePath = function () {\n  // TODO Test\n  // and verify for vector3 (needs to implement equals)\n  // Add a line curve if start and end of lines are not connected\n  var startPoint = this.curves[0].getPoint(0);\n  var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n  if (!startPoint.equals(endPoint)) {\n    this.curves.push(new THREE.LineCurve(endPoint, startPoint));\n  }\n}; // To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\n\n\nTHREE.CurvePath.prototype.getPoint = function (t) {\n  var d = t * this.getLength();\n  var curveLengths = this.getCurveLengths();\n  var i = 0,\n      diff,\n      curve; // To think about boundaries points.\n\n  while (i < curveLengths.length) {\n    if (curveLengths[i] >= d) {\n      diff = curveLengths[i] - d;\n      curve = this.curves[i];\n      var u = 1 - diff / curve.getLength();\n      return curve.getPointAt(u);\n      break;\n    }\n\n    i++;\n  }\n\n  return null; // loop where sum != 0, sum > d , sum+1 <d\n};\n/*\nTHREE.CurvePath.prototype.getTangent = function( t ) {\n};*/\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\n\n\nTHREE.CurvePath.prototype.getLength = function () {\n  var lens = this.getCurveLengths();\n  return lens[lens.length - 1];\n}; // Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\nTHREE.CurvePath.prototype.getCurveLengths = function () {\n  // We use cache values if curves and cache array are same length\n  if (this.cacheLengths && this.cacheLengths.length == this.curves.length) {\n    return this.cacheLengths;\n  }\n\n  ; // Get length of subsurve\n  // Push sums into cached array\n\n  var lengths = [],\n      sums = 0;\n  var i,\n      il = this.curves.length;\n\n  for (i = 0; i < il; i++) {\n    sums += this.curves[i].getLength();\n    lengths.push(sums);\n  }\n\n  this.cacheLengths = lengths;\n  return lengths;\n}; // Returns min and max coordinates\n\n\nTHREE.CurvePath.prototype.getBoundingBox = function () {\n  var points = this.getPoints();\n  var maxX, maxY, maxZ;\n  var minX, minY, minZ;\n  maxX = maxY = Number.NEGATIVE_INFINITY;\n  minX = minY = Number.POSITIVE_INFINITY;\n  var p, i, il, sum;\n  var v3 = points[0] instanceof THREE.Vector3;\n  sum = v3 ? new THREE.Vector3() : new THREE.Vector2();\n\n  for (i = 0, il = points.length; i < il; i++) {\n    p = points[i];\n    if (p.x > maxX) maxX = p.x;else if (p.x < minX) minX = p.x;\n    if (p.y > maxY) maxY = p.y;else if (p.y < minY) minY = p.y;\n\n    if (v3) {\n      if (p.z > maxZ) maxZ = p.z;else if (p.z < minZ) minZ = p.z;\n    }\n\n    sum.add(p);\n  }\n\n  var ret = {\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY\n  };\n\n  if (v3) {\n    ret.maxZ = maxZ;\n    ret.minZ = minZ;\n  }\n\n  return ret;\n};\n/**************************************************************\n *\tCreate Geometries Helpers\n **************************************************************/\n/// Generate geometry from path points (for Line or Points objects)\n\n\nTHREE.CurvePath.prototype.createPointsGeometry = function (divisions) {\n  var pts = this.getPoints(divisions, true);\n  return this.createGeometry(pts);\n}; // Generate geometry from equidistance sampling along the path\n\n\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function (divisions) {\n  var pts = this.getSpacedPoints(divisions, true);\n  return this.createGeometry(pts);\n};\n\nTHREE.CurvePath.prototype.createGeometry = function (points) {\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < points.length; i++) {\n    geometry.vertices.push(new THREE.Vector3(points[i].x, points[i].y, points[i].z || 0));\n  }\n\n  return geometry;\n};\n/**************************************************************\n *\tBend / Wrap Helper Methods\n **************************************************************/\n// Wrap path / Bend modifiers?\n\n\nTHREE.CurvePath.prototype.addWrapPath = function (bendpath) {\n  this.bends.push(bendpath);\n};\n\nTHREE.CurvePath.prototype.getTransformedPoints = function (segments, bends) {\n  var oldPts = this.getPoints(segments); // getPoints getSpacedPoints\n\n  var i, il;\n\n  if (!bends) {\n    bends = this.bends;\n  }\n\n  for (i = 0, il = bends.length; i < il; i++) {\n    oldPts = this.getWrapPoints(oldPts, bends[i]);\n  }\n\n  return oldPts;\n};\n\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function (segments, bends) {\n  var oldPts = this.getSpacedPoints(segments);\n  var i, il;\n\n  if (!bends) {\n    bends = this.bends;\n  }\n\n  for (i = 0, il = bends.length; i < il; i++) {\n    oldPts = this.getWrapPoints(oldPts, bends[i]);\n  }\n\n  return oldPts;\n}; // This returns getPoints() bend/wrapped around the contour of a path.\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\n\n\nTHREE.CurvePath.prototype.getWrapPoints = function (oldPts, path) {\n  var bounds = this.getBoundingBox();\n  var i, il, p, oldX, oldY, xNorm;\n\n  for (i = 0, il = oldPts.length; i < il; i++) {\n    p = oldPts[i];\n    oldX = p.x;\n    oldY = p.y;\n    xNorm = oldX / bounds.maxX; // If using actual distance, for length > path, requires line extrusions\n    //xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\n\n    xNorm = path.getUtoTmapping(xNorm, oldX); // check for out of bounds?\n\n    var pathPt = path.getPoint(xNorm);\n    var normal = path.getTangent(xNorm);\n    normal.set(-normal.y, normal.x).multiplyScalar(oldY);\n    p.x = pathPt.x + normal.x;\n    p.y = pathPt.y + normal.y;\n  }\n\n  return oldPts;\n}; // File:src/extras/core/Gyroscope.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nTHREE.Gyroscope = function () {\n  THREE.Object3D.call(this);\n};\n\nTHREE.Gyroscope.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.Gyroscope.prototype.updateMatrixWorld = function () {\n  var translationObject = new THREE.Vector3();\n  var quaternionObject = new THREE.Quaternion();\n  var scaleObject = new THREE.Vector3();\n  var translationWorld = new THREE.Vector3();\n  var quaternionWorld = new THREE.Quaternion();\n  var scaleWorld = new THREE.Vector3();\n  return function (force) {\n    this.matrixAutoUpdate && this.updateMatrix(); // update matrixWorld\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent) {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        this.matrixWorld.decompose(translationWorld, quaternionWorld, scaleWorld);\n        this.matrix.decompose(translationObject, quaternionObject, scaleObject);\n        this.matrixWorld.compose(translationWorld, quaternionObject, scaleWorld);\n      } else {\n        this.matrixWorld.copy(this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  };\n}(); // File:src/extras/core/Path.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\n\n\nTHREE.Path = function (points) {\n  THREE.CurvePath.call(this);\n  this.actions = [];\n\n  if (points) {\n    this.fromPoints(points);\n  }\n};\n\nTHREE.Path.prototype = Object.create(THREE.CurvePath.prototype);\nTHREE.PathActions = {\n  MOVE_TO: 'moveTo',\n  LINE_TO: 'lineTo',\n  QUADRATIC_CURVE_TO: 'quadraticCurveTo',\n  // Bezier quadratic curve\n  BEZIER_CURVE_TO: 'bezierCurveTo',\n  // Bezier cubic curve\n  CSPLINE_THRU: 'splineThru',\n  // Catmull-rom spline\n  ARC: 'arc',\n  // Circle\n  ELLIPSE: 'ellipse'\n}; // TODO Clean up PATH API\n// Create path using straight lines to connect all points\n// - vectors: array of Vector2\n\nTHREE.Path.prototype.fromPoints = function (vectors) {\n  this.moveTo(vectors[0].x, vectors[0].y);\n\n  for (var v = 1, vlen = vectors.length; v < vlen; v++) {\n    this.lineTo(vectors[v].x, vectors[v].y);\n  }\n\n  ;\n}; // startPath() endPath()?\n\n\nTHREE.Path.prototype.moveTo = function (x, y) {\n  var args = Array.prototype.slice.call(arguments);\n  this.actions.push({\n    action: THREE.PathActions.MOVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.lineTo = function (x, y) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.LineCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(x, y));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.LINE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.quadraticCurveTo = function (aCPx, aCPy, aX, aY) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.QuadraticBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCPx, aCPy), new THREE.Vector2(aX, aY));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.QUADRATIC_CURVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.bezierCurveTo = function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  var curve = new THREE.CubicBezierCurve(new THREE.Vector2(x0, y0), new THREE.Vector2(aCP1x, aCP1y), new THREE.Vector2(aCP2x, aCP2y), new THREE.Vector2(aX, aY));\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.BEZIER_CURVE_TO,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.splineThru = function (pts\n/*Array of Vector*/\n) {\n  var args = Array.prototype.slice.call(arguments);\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1]; //---\n\n  var npts = [new THREE.Vector2(x0, y0)];\n  Array.prototype.push.apply(npts, pts);\n  var curve = new THREE.SplineCurve(npts);\n  this.curves.push(curve);\n  this.actions.push({\n    action: THREE.PathActions.CSPLINE_THRU,\n    args: args\n  });\n}; // FUTURE: Change the API or follow canvas API?\n\n\nTHREE.Path.prototype.arc = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.Path.prototype.absarc = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.Path.prototype.ellipse = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise) {\n  var lastargs = this.actions[this.actions.length - 1].args;\n  var x0 = lastargs[lastargs.length - 2];\n  var y0 = lastargs[lastargs.length - 1];\n  this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.Path.prototype.absellipse = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise) {\n  var args = Array.prototype.slice.call(arguments);\n  var curve = new THREE.EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise);\n  this.curves.push(curve);\n  var lastPoint = curve.getPoint(1);\n  args.push(lastPoint.x);\n  args.push(lastPoint.y);\n  this.actions.push({\n    action: THREE.PathActions.ELLIPSE,\n    args: args\n  });\n};\n\nTHREE.Path.prototype.getSpacedPoints = function (divisions, closedPath) {\n  if (!divisions) divisions = 40;\n  var points = [];\n\n  for (var i = 0; i < divisions; i++) {\n    points.push(this.getPoint(i / divisions)); //if( !this.getPoint( i / divisions ) ) throw \"DIE\";\n  } // if ( closedPath ) {\n  //\n  // \tpoints.push( points[ 0 ] );\n  //\n  // }\n\n\n  return points;\n};\n/* Return an array of vectors based on contour of the path */\n\n\nTHREE.Path.prototype.getPoints = function (divisions, closedPath) {\n  if (this.useSpacedPoints) {\n    console.log('tata');\n    return this.getSpacedPoints(divisions, closedPath);\n  }\n\n  divisions = divisions || 12;\n  var points = [];\n  var i, il, item, action, args;\n  var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0, laste, j, t, tx, ty;\n\n  for (i = 0, il = this.actions.length; i < il; i++) {\n    item = this.actions[i];\n    action = item.action;\n    args = item.args;\n\n    switch (action) {\n      case THREE.PathActions.MOVE_TO:\n        points.push(new THREE.Vector2(args[0], args[1]));\n        break;\n\n      case THREE.PathActions.LINE_TO:\n        points.push(new THREE.Vector2(args[0], args[1]));\n        break;\n\n      case THREE.PathActions.QUADRATIC_CURVE_TO:\n        cpx = args[2];\n        cpy = args[3];\n        cpx1 = args[0];\n        cpy1 = args[1];\n\n        if (points.length > 0) {\n          laste = points[points.length - 1];\n          cpx0 = laste.x;\n          cpy0 = laste.y;\n        } else {\n          laste = this.actions[i - 1].args;\n          cpx0 = laste[laste.length - 2];\n          cpy0 = laste[laste.length - 1];\n        }\n\n        for (j = 1; j <= divisions; j++) {\n          t = j / divisions;\n          tx = THREE.Shape.Utils.b2(t, cpx0, cpx1, cpx);\n          ty = THREE.Shape.Utils.b2(t, cpy0, cpy1, cpy);\n          points.push(new THREE.Vector2(tx, ty));\n        }\n\n        break;\n\n      case THREE.PathActions.BEZIER_CURVE_TO:\n        cpx = args[4];\n        cpy = args[5];\n        cpx1 = args[0];\n        cpy1 = args[1];\n        cpx2 = args[2];\n        cpy2 = args[3];\n\n        if (points.length > 0) {\n          laste = points[points.length - 1];\n          cpx0 = laste.x;\n          cpy0 = laste.y;\n        } else {\n          laste = this.actions[i - 1].args;\n          cpx0 = laste[laste.length - 2];\n          cpy0 = laste[laste.length - 1];\n        }\n\n        for (j = 1; j <= divisions; j++) {\n          t = j / divisions;\n          tx = THREE.Shape.Utils.b3(t, cpx0, cpx1, cpx2, cpx);\n          ty = THREE.Shape.Utils.b3(t, cpy0, cpy1, cpy2, cpy);\n          points.push(new THREE.Vector2(tx, ty));\n        }\n\n        break;\n\n      case THREE.PathActions.CSPLINE_THRU:\n        laste = this.actions[i - 1].args;\n        var last = new THREE.Vector2(laste[laste.length - 2], laste[laste.length - 1]);\n        var spts = [last];\n        var n = divisions * args[0].length;\n        spts = spts.concat(args[0]);\n        var spline = new THREE.SplineCurve(spts);\n\n        for (j = 1; j <= n; j++) {\n          points.push(spline.getPointAt(j / n));\n        }\n\n        break;\n\n      case THREE.PathActions.ARC:\n        var aX = args[0],\n            aY = args[1],\n            aRadius = args[2],\n            aStartAngle = args[3],\n            aEndAngle = args[4],\n            aClockwise = !!args[5];\n        var deltaAngle = aEndAngle - aStartAngle;\n        var angle;\n        var tdivisions = divisions * 2;\n\n        for (j = 1; j <= tdivisions; j++) {\n          t = j / tdivisions;\n\n          if (!aClockwise) {\n            t = 1 - t;\n          }\n\n          angle = aStartAngle + t * deltaAngle;\n          tx = aX + aRadius * Math.cos(angle);\n          ty = aY + aRadius * Math.sin(angle); //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n          points.push(new THREE.Vector2(tx, ty));\n        } //console.log(points);\n\n\n        break;\n\n      case THREE.PathActions.ELLIPSE:\n        var aX = args[0],\n            aY = args[1],\n            xRadius = args[2],\n            yRadius = args[3],\n            aStartAngle = args[4],\n            aEndAngle = args[5],\n            aClockwise = !!args[6];\n        var deltaAngle = aEndAngle - aStartAngle;\n        var angle;\n        var tdivisions = divisions * 2;\n\n        for (j = 1; j <= tdivisions; j++) {\n          t = j / tdivisions;\n\n          if (!aClockwise) {\n            t = 1 - t;\n          }\n\n          angle = aStartAngle + t * deltaAngle;\n          tx = aX + xRadius * Math.cos(angle);\n          ty = aY + yRadius * Math.sin(angle); //console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n          points.push(new THREE.Vector2(tx, ty));\n        } //console.log(points);\n\n\n        break;\n    } // end switch\n\n  } // Normalize to remove the closing point by default.\n\n\n  var lastPoint = points[points.length - 1];\n  var EPSILON = 0.0000000001;\n  if (Math.abs(lastPoint.x - points[0].x) < EPSILON && Math.abs(lastPoint.y - points[0].y) < EPSILON) points.splice(points.length - 1, 1);\n\n  if (closedPath) {\n    points.push(points[0]);\n  }\n\n  return points;\n}; //\n// Breaks path into shapes\n//\n//\tAssumptions (if parameter isCCW==true the opposite holds):\n//\t- solid shapes are defined clockwise (CW)\n//\t- holes are defined counterclockwise (CCW)\n//\n//\tIf parameter noHoles==true:\n//  - all subPaths are regarded as solid shapes\n//  - definition order CW/CCW has no relevance\n//\n\n\nTHREE.Path.prototype.toShapes = function (isCCW, noHoles) {\n  function extractSubpaths(inActions) {\n    var i, il, item, action, args;\n    var subPaths = [],\n        lastPath = new THREE.Path();\n\n    for (i = 0, il = inActions.length; i < il; i++) {\n      item = inActions[i];\n      args = item.args;\n      action = item.action;\n\n      if (action == THREE.PathActions.MOVE_TO) {\n        if (lastPath.actions.length != 0) {\n          subPaths.push(lastPath);\n          lastPath = new THREE.Path();\n        }\n      }\n\n      lastPath[action].apply(lastPath, args);\n    }\n\n    if (lastPath.actions.length != 0) {\n      subPaths.push(lastPath);\n    } // console.log(subPaths);\n\n\n    return subPaths;\n  }\n\n  function toShapesNoHoles(inSubpaths) {\n    var shapes = [];\n\n    for (var i = 0, il = inSubpaths.length; i < il; i++) {\n      var tmpPath = inSubpaths[i];\n      var tmpShape = new THREE.Shape();\n      tmpShape.actions = tmpPath.actions;\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n\n  ;\n\n  function isPointInsidePolygon(inPt, inPolygon) {\n    var EPSILON = 0.0000000001;\n    var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n    // toggling of inside/outside at every single! intersection point of an edge\n    //  with the horizontal line through inPt, left of inPt\n    //  not counting lowerY endpoints of edges and whole edges on that line\n\n    var inside = false;\n\n    for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n      var edgeLowPt = inPolygon[p];\n      var edgeHighPt = inPolygon[q];\n      var edgeDx = edgeHighPt.x - edgeLowPt.x;\n      var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n      if (Math.abs(edgeDy) > EPSILON) {\n        // not parallel\n        if (edgeDy < 0) {\n          edgeLowPt = inPolygon[q];\n          edgeDx = -edgeDx;\n          edgeHighPt = inPolygon[p];\n          edgeDy = -edgeDy;\n        }\n\n        if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n        if (inPt.y == edgeLowPt.y) {\n          if (inPt.x == edgeLowPt.x) return true; // inPt is on contour ?\n          // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n        } else {\n          var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n          if (perpEdge == 0) return true; // inPt is on contour ?\n\n          if (perpEdge < 0) continue;\n          inside = !inside; // true intersection left of inPt\n        }\n      } else {\n        // parallel or colinear\n        if (inPt.y != edgeLowPt.y) continue; // parallel\n        // egde lies on the same horizontal line as inPt\n\n        if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n        // continue;\n      }\n    }\n\n    return inside;\n  }\n\n  var subPaths = extractSubpaths(this.actions);\n  if (subPaths.length == 0) return [];\n  if (noHoles === true) return toShapesNoHoles(subPaths);\n  var solid,\n      tmpPath,\n      tmpShape,\n      shapes = [];\n\n  if (subPaths.length == 1) {\n    tmpPath = subPaths[0];\n    tmpShape = new THREE.Shape();\n    tmpShape.actions = tmpPath.actions;\n    tmpShape.curves = tmpPath.curves;\n    shapes.push(tmpShape);\n    return shapes;\n  }\n\n  var holesFirst = !THREE.Shape.Utils.isClockWise(subPaths[0].getPoints());\n  holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n  var betterShapeHoles = [];\n  var newShapes = [];\n  var newShapeHoles = [];\n  var mainIdx = 0;\n  var tmpPoints;\n  newShapes[mainIdx] = undefined;\n  newShapeHoles[mainIdx] = [];\n  var i, il;\n\n  for (i = 0, il = subPaths.length; i < il; i++) {\n    tmpPath = subPaths[i];\n    tmpPoints = tmpPath.getPoints();\n    solid = THREE.Shape.Utils.isClockWise(tmpPoints);\n    solid = isCCW ? !solid : solid;\n\n    if (solid) {\n      if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n      newShapes[mainIdx] = {\n        s: new THREE.Shape(),\n        p: tmpPoints\n      };\n      newShapes[mainIdx].s.actions = tmpPath.actions;\n      newShapes[mainIdx].s.curves = tmpPath.curves;\n      if (holesFirst) mainIdx++;\n      newShapeHoles[mainIdx] = []; //console.log('cw', i);\n    } else {\n      newShapeHoles[mainIdx].push({\n        h: tmpPath,\n        p: tmpPoints[0]\n      }); //console.log('ccw', i);\n    }\n  } // only Holes? -> probably all Shapes with wrong orientation\n\n\n  if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n  if (newShapes.length > 1) {\n    var ambigious = false;\n    var toChange = [];\n\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n      betterShapeHoles[sIdx] = [];\n    }\n\n    for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n      var sh = newShapes[sIdx];\n      var sho = newShapeHoles[sIdx];\n\n      for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n        var ho = sho[hIdx];\n        var hole_unassigned = true;\n\n        for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n          if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n            if (sIdx != s2Idx) toChange.push({\n              froms: sIdx,\n              tos: s2Idx,\n              hole: hIdx\n            });\n\n            if (hole_unassigned) {\n              hole_unassigned = false;\n              betterShapeHoles[s2Idx].push(ho);\n            } else {\n              ambigious = true;\n            }\n          }\n        }\n\n        if (hole_unassigned) {\n          betterShapeHoles[sIdx].push(ho);\n        }\n      }\n    } // console.log(\"ambigious: \", ambigious);\n\n\n    if (toChange.length > 0) {\n      // console.log(\"to change: \", toChange);\n      if (!ambigious) newShapeHoles = betterShapeHoles;\n    }\n  }\n\n  var tmpHoles, j, jl;\n\n  for (i = 0, il = newShapes.length; i < il; i++) {\n    tmpShape = newShapes[i].s;\n    shapes.push(tmpShape);\n    tmpHoles = newShapeHoles[i];\n\n    for (j = 0, jl = tmpHoles.length; j < jl; j++) {\n      tmpShape.holes.push(tmpHoles[j].h);\n    }\n  } //console.log(\"shape\", shapes);\n\n\n  return shapes;\n}; // File:src/extras/core/Shape.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\n\nTHREE.Shape = function () {\n  THREE.Path.apply(this, arguments);\n  this.holes = [];\n};\n\nTHREE.Shape.prototype = Object.create(THREE.Path.prototype); // Convenience method to return ExtrudeGeometry\n\nTHREE.Shape.prototype.extrude = function (options) {\n  var extruded = new THREE.ExtrudeGeometry(this, options);\n  return extruded;\n}; // Convenience method to return ShapeGeometry\n\n\nTHREE.Shape.prototype.makeGeometry = function (options) {\n  var geometry = new THREE.ShapeGeometry(this, options);\n  return geometry;\n}; // Get points of holes\n\n\nTHREE.Shape.prototype.getPointsHoles = function (divisions) {\n  var i,\n      il = this.holes.length,\n      holesPts = [];\n\n  for (i = 0; i < il; i++) {\n    holesPts[i] = this.holes[i].getTransformedPoints(divisions, this.bends);\n  }\n\n  return holesPts;\n}; // Get points of holes (spaced by regular distance)\n\n\nTHREE.Shape.prototype.getSpacedPointsHoles = function (divisions) {\n  var i,\n      il = this.holes.length,\n      holesPts = [];\n\n  for (i = 0; i < il; i++) {\n    holesPts[i] = this.holes[i].getTransformedSpacedPoints(divisions, this.bends);\n  }\n\n  return holesPts;\n}; // Get points of shape and holes (keypoints based on segments parameter)\n\n\nTHREE.Shape.prototype.extractAllPoints = function (divisions) {\n  return {\n    shape: this.getTransformedPoints(divisions),\n    holes: this.getPointsHoles(divisions)\n  };\n};\n\nTHREE.Shape.prototype.extractPoints = function (divisions) {\n  if (this.useSpacedPoints) {\n    return this.extractAllSpacedPoints(divisions);\n  }\n\n  return this.extractAllPoints(divisions);\n}; //\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\n//\n// \treturn {\n//\n// \t\tshape: this.transform( bend, divisions ),\n// \t\tholes: this.getPointsHoles( divisions, bend )\n//\n// \t};\n//\n// };\n// Get points of shape and holes (spaced by regular distance)\n\n\nTHREE.Shape.prototype.extractAllSpacedPoints = function (divisions) {\n  return {\n    shape: this.getTransformedSpacedPoints(divisions),\n    holes: this.getSpacedPointsHoles(divisions)\n  };\n};\n/**************************************************************\n *\tUtils\n **************************************************************/\n\n\nTHREE.Shape.Utils = {\n  triangulateShape: function (contour, holes) {\n    function point_in_segment_2D_colin(inSegPt1, inSegPt2, inOtherPt) {\n      // inOtherPt needs to be colinear to the inSegment\n      if (inSegPt1.x != inSegPt2.x) {\n        if (inSegPt1.x < inSegPt2.x) {\n          return inSegPt1.x <= inOtherPt.x && inOtherPt.x <= inSegPt2.x;\n        } else {\n          return inSegPt2.x <= inOtherPt.x && inOtherPt.x <= inSegPt1.x;\n        }\n      } else {\n        if (inSegPt1.y < inSegPt2.y) {\n          return inSegPt1.y <= inOtherPt.y && inOtherPt.y <= inSegPt2.y;\n        } else {\n          return inSegPt2.y <= inOtherPt.y && inOtherPt.y <= inSegPt1.y;\n        }\n      }\n    }\n\n    function intersect_segments_2D(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs) {\n      var EPSILON = 0.0000000001;\n      var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,\n          seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n      var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,\n          seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n      var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n      var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n      var limit = seg1dy * seg2dx - seg1dx * seg2dy;\n      var perpSeg1 = seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n      if (Math.abs(limit) > EPSILON) {\n        // not parallel\n        var perpSeg2;\n\n        if (limit > 0) {\n          if (perpSeg1 < 0 || perpSeg1 > limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 < 0 || perpSeg2 > limit) return [];\n        } else {\n          if (perpSeg1 > 0 || perpSeg1 < limit) return [];\n          perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n          if (perpSeg2 > 0 || perpSeg2 < limit) return [];\n        } // i.e. to reduce rounding errors\n        // intersection at endpoint of segment#1?\n\n\n        if (perpSeg2 == 0) {\n          if (inExcludeAdjacentSegs && (perpSeg1 == 0 || perpSeg1 == limit)) return [];\n          return [inSeg1Pt1];\n        }\n\n        if (perpSeg2 == limit) {\n          if (inExcludeAdjacentSegs && (perpSeg1 == 0 || perpSeg1 == limit)) return [];\n          return [inSeg1Pt2];\n        } // intersection at endpoint of segment#2?\n\n\n        if (perpSeg1 == 0) return [inSeg2Pt1];\n        if (perpSeg1 == limit) return [inSeg2Pt2]; // return real intersection point\n\n        var factorSeg1 = perpSeg2 / limit;\n        return [{\n          x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n          y: inSeg1Pt1.y + factorSeg1 * seg1dy\n        }];\n      } else {\n        // parallel or colinear\n        if (perpSeg1 != 0 || seg2dy * seg1seg2dx != seg2dx * seg1seg2dy) return []; // they are collinear or degenerate\n\n        var seg1Pt = seg1dx == 0 && seg1dy == 0; // segment1 ist just a point?\n\n        var seg2Pt = seg2dx == 0 && seg2dy == 0; // segment2 ist just a point?\n        // both segments are points\n\n        if (seg1Pt && seg2Pt) {\n          if (inSeg1Pt1.x != inSeg2Pt1.x || inSeg1Pt1.y != inSeg2Pt1.y) return []; // they are distinct  points\n\n          return [inSeg1Pt1]; // they are the same point\n        } // segment#1  is a single point\n\n\n        if (seg1Pt) {\n          if (!point_in_segment_2D_colin(inSeg2Pt1, inSeg2Pt2, inSeg1Pt1)) return []; // but not in segment#2\n\n          return [inSeg1Pt1];\n        } // segment#2  is a single point\n\n\n        if (seg2Pt) {\n          if (!point_in_segment_2D_colin(inSeg1Pt1, inSeg1Pt2, inSeg2Pt1)) return []; // but not in segment#1\n\n          return [inSeg2Pt1];\n        } // they are collinear segments, which might overlap\n\n\n        var seg1min, seg1max, seg1minVal, seg1maxVal;\n        var seg2min, seg2max, seg2minVal, seg2maxVal;\n\n        if (seg1dx != 0) {\n          // the segments are NOT on a vertical line\n          if (inSeg1Pt1.x < inSeg1Pt2.x) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.x;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.x;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.x;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.x;\n          }\n\n          if (inSeg2Pt1.x < inSeg2Pt2.x) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.x;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.x;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.x;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.x;\n          }\n        } else {\n          // the segments are on a vertical line\n          if (inSeg1Pt1.y < inSeg1Pt2.y) {\n            seg1min = inSeg1Pt1;\n            seg1minVal = inSeg1Pt1.y;\n            seg1max = inSeg1Pt2;\n            seg1maxVal = inSeg1Pt2.y;\n          } else {\n            seg1min = inSeg1Pt2;\n            seg1minVal = inSeg1Pt2.y;\n            seg1max = inSeg1Pt1;\n            seg1maxVal = inSeg1Pt1.y;\n          }\n\n          if (inSeg2Pt1.y < inSeg2Pt2.y) {\n            seg2min = inSeg2Pt1;\n            seg2minVal = inSeg2Pt1.y;\n            seg2max = inSeg2Pt2;\n            seg2maxVal = inSeg2Pt2.y;\n          } else {\n            seg2min = inSeg2Pt2;\n            seg2minVal = inSeg2Pt2.y;\n            seg2max = inSeg2Pt1;\n            seg2maxVal = inSeg2Pt1.y;\n          }\n        }\n\n        if (seg1minVal <= seg2minVal) {\n          if (seg1maxVal < seg2minVal) return [];\n\n          if (seg1maxVal == seg2minVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg2min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg2min, seg1max];\n          return [seg2min, seg2max];\n        } else {\n          if (seg1minVal > seg2maxVal) return [];\n\n          if (seg1minVal == seg2maxVal) {\n            if (inExcludeAdjacentSegs) return [];\n            return [seg1min];\n          }\n\n          if (seg1maxVal <= seg2maxVal) return [seg1min, seg1max];\n          return [seg1min, seg2max];\n        }\n      }\n    }\n\n    function isPointInsideAngle(inVertex, inLegFromPt, inLegToPt, inOtherPt) {\n      // The order of legs is important\n      var EPSILON = 0.0000000001; // translation of all points, so that Vertex is at (0,0)\n\n      var legFromPtX = inLegFromPt.x - inVertex.x,\n          legFromPtY = inLegFromPt.y - inVertex.y;\n      var legToPtX = inLegToPt.x - inVertex.x,\n          legToPtY = inLegToPt.y - inVertex.y;\n      var otherPtX = inOtherPt.x - inVertex.x,\n          otherPtY = inOtherPt.y - inVertex.y; // main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\n      var from2toAngle = legFromPtX * legToPtY - legFromPtY * legToPtX;\n      var from2otherAngle = legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n      if (Math.abs(from2toAngle) > EPSILON) {\n        // angle != 180 deg.\n        var other2toAngle = otherPtX * legToPtY - otherPtY * legToPtX; // console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n        if (from2toAngle > 0) {\n          // main angle < 180 deg.\n          return from2otherAngle >= 0 && other2toAngle >= 0;\n        } else {\n          // main angle > 180 deg.\n          return from2otherAngle >= 0 || other2toAngle >= 0;\n        }\n      } else {\n        // angle == 180 deg.\n        // console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n        return from2otherAngle > 0;\n      }\n    }\n\n    function removeHoles(contour, holes) {\n      var shape = contour.concat(); // work on this shape\n\n      var hole;\n\n      function isCutLineInsideAngles(inShapeIdx, inHoleIdx) {\n        // Check if hole point lies within angle around shape point\n        var lastShapeIdx = shape.length - 1;\n        var prevShapeIdx = inShapeIdx - 1;\n        if (prevShapeIdx < 0) prevShapeIdx = lastShapeIdx;\n        var nextShapeIdx = inShapeIdx + 1;\n        if (nextShapeIdx > lastShapeIdx) nextShapeIdx = 0;\n        var insideAngle = isPointInsideAngle(shape[inShapeIdx], shape[prevShapeIdx], shape[nextShapeIdx], hole[inHoleIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n          return false;\n        } // Check if shape point lies within angle around hole point\n\n\n        var lastHoleIdx = hole.length - 1;\n        var prevHoleIdx = inHoleIdx - 1;\n        if (prevHoleIdx < 0) prevHoleIdx = lastHoleIdx;\n        var nextHoleIdx = inHoleIdx + 1;\n        if (nextHoleIdx > lastHoleIdx) nextHoleIdx = 0;\n        insideAngle = isPointInsideAngle(hole[inHoleIdx], hole[prevHoleIdx], hole[nextHoleIdx], shape[inShapeIdx]);\n\n        if (!insideAngle) {\n          // console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n          return false;\n        }\n\n        return true;\n      }\n\n      function intersectsShapeEdge(inShapePt, inHolePt) {\n        // checks for intersections with shape edges\n        var sIdx, nextIdx, intersection;\n\n        for (sIdx = 0; sIdx < shape.length; sIdx++) {\n          nextIdx = sIdx + 1;\n          nextIdx %= shape.length;\n          intersection = intersect_segments_2D(inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true);\n          if (intersection.length > 0) return true;\n        }\n\n        return false;\n      }\n\n      var indepHoles = [];\n\n      function intersectsHoleEdge(inShapePt, inHolePt) {\n        // checks for intersections with hole edges\n        var ihIdx, chkHole, hIdx, nextIdx, intersection;\n\n        for (ihIdx = 0; ihIdx < indepHoles.length; ihIdx++) {\n          chkHole = holes[indepHoles[ihIdx]];\n\n          for (hIdx = 0; hIdx < chkHole.length; hIdx++) {\n            nextIdx = hIdx + 1;\n            nextIdx %= chkHole.length;\n            intersection = intersect_segments_2D(inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true);\n            if (intersection.length > 0) return true;\n          }\n        }\n\n        return false;\n      }\n\n      var holeIndex,\n          shapeIndex,\n          shapePt,\n          holePt,\n          holeIdx,\n          cutKey,\n          failedCuts = [],\n          tmpShape1,\n          tmpShape2,\n          tmpHole1,\n          tmpHole2;\n\n      for (var h = 0, hl = holes.length; h < hl; h++) {\n        indepHoles.push(h);\n      }\n\n      var minShapeIndex = 0;\n      var counter = indepHoles.length * 2;\n\n      while (indepHoles.length > 0) {\n        counter--;\n\n        if (counter < 0) {\n          console.log(\"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\");\n          break;\n        } // search for shape-vertex and hole-vertex,\n        // which can be connected without intersections\n\n\n        for (shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex++) {\n          shapePt = shape[shapeIndex];\n          holeIndex = -1; // search for hole which can be reached without intersections\n\n          for (var h = 0; h < indepHoles.length; h++) {\n            holeIdx = indepHoles[h]; // prevent multiple checks\n\n            cutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n            if (failedCuts[cutKey] !== undefined) continue;\n            hole = holes[holeIdx];\n\n            for (var h2 = 0; h2 < hole.length; h2++) {\n              holePt = hole[h2];\n              if (!isCutLineInsideAngles(shapeIndex, h2)) continue;\n              if (intersectsShapeEdge(shapePt, holePt)) continue;\n              if (intersectsHoleEdge(shapePt, holePt)) continue;\n              holeIndex = h2;\n              indepHoles.splice(h, 1);\n              tmpShape1 = shape.slice(0, shapeIndex + 1);\n              tmpShape2 = shape.slice(shapeIndex);\n              tmpHole1 = hole.slice(holeIndex);\n              tmpHole2 = hole.slice(0, holeIndex + 1);\n              shape = tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2);\n              minShapeIndex = shapeIndex; // Debug only, to show the selected cuts\n              // glob_CutLines.push( [ shapePt, holePt ] );\n\n              break;\n            }\n\n            if (holeIndex >= 0) break; // hole-vertex found\n\n            failedCuts[cutKey] = true; // remember failure\n          }\n\n          if (holeIndex >= 0) break; // hole-vertex found\n        }\n      }\n\n      return shape;\n      /* shape with no holes */\n    }\n\n    var i,\n        il,\n        f,\n        face,\n        key,\n        index,\n        allPointsMap = {}; // To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    var allpoints = contour.concat();\n\n    for (var h = 0, hl = holes.length; h < hl; h++) {\n      Array.prototype.push.apply(allpoints, holes[h]);\n    } //console.log( \"allpoints\",allpoints, allpoints.length );\n    // prepare all points map\n\n\n    for (i = 0, il = allpoints.length; i < il; i++) {\n      key = allpoints[i].x + \":\" + allpoints[i].y;\n\n      if (allPointsMap[key] !== undefined) {\n        console.log(\"Duplicate point\", key);\n      }\n\n      allPointsMap[key] = i;\n    } // remove holes by cutting paths to holes and adding them to the shape\n\n\n    var shapeWithoutHoles = removeHoles(contour, holes);\n    var triangles = THREE.FontUtils.Triangulate(shapeWithoutHoles, false); // True returns indices for points of spooled shape\n    //console.log( \"triangles\",triangles, triangles.length );\n    // check all face vertices against all points map\n\n    for (i = 0, il = triangles.length; i < il; i++) {\n      face = triangles[i];\n\n      for (f = 0; f < 3; f++) {\n        key = face[f].x + \":\" + face[f].y;\n        index = allPointsMap[key];\n\n        if (index !== undefined) {\n          face[f] = index;\n        }\n      }\n    }\n\n    return triangles.concat();\n  },\n  isClockWise: function (pts) {\n    return THREE.FontUtils.Triangulate.area(pts) < 0;\n  },\n  // Bezier Curves formulas obtained from\n  // http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  // Quad Bezier Functions\n  b2p0: function (t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  },\n  b2p1: function (t, p) {\n    return 2 * (1 - t) * t * p;\n  },\n  b2p2: function (t, p) {\n    return t * t * p;\n  },\n  b2: function (t, p0, p1, p2) {\n    return this.b2p0(t, p0) + this.b2p1(t, p1) + this.b2p2(t, p2);\n  },\n  // Cubic Bezier Functions\n  b3p0: function (t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  },\n  b3p1: function (t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  },\n  b3p2: function (t, p) {\n    var k = 1 - t;\n    return 3 * k * t * t * p;\n  },\n  b3p3: function (t, p) {\n    return t * t * t * p;\n  },\n  b3: function (t, p0, p1, p2, p3) {\n    return this.b3p0(t, p0) + this.b3p1(t, p1) + this.b3p2(t, p2) + this.b3p3(t, p3);\n  }\n}; // File:src/extras/curves/LineCurve.js\n\n/**************************************************************\n *\tLine\n **************************************************************/\n\nTHREE.LineCurve = function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.LineCurve.prototype.getPoint = function (t) {\n  var point = this.v2.clone().sub(this.v1);\n  point.multiplyScalar(t).add(this.v1);\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nTHREE.LineCurve.prototype.getPointAt = function (u) {\n  return this.getPoint(u);\n};\n\nTHREE.LineCurve.prototype.getTangent = function (t) {\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n}; // File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\n *\tQuadratic Bezier curve\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function (t) {\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y);\n  return vector;\n};\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function (t) {\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Curve.Utils.tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y); // returns unit vector\n\n  return vector.normalize();\n}; // File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\n *\tCubic Bezier curve\n **************************************************************/\n\n\nTHREE.CubicBezierCurve = function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.CubicBezierCurve.prototype.getPoint = function (t) {\n  var tx, ty;\n  tx = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  ty = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  return new THREE.Vector2(tx, ty);\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function (t) {\n  var tx, ty;\n  tx = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  ty = THREE.Curve.Utils.tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  var tangent = new THREE.Vector2(tx, ty);\n  tangent.normalize();\n  return tangent;\n}; // File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\n *\tSpline curve\n **************************************************************/\n\n\nTHREE.SplineCurve = function (points\n/* array of Vector2 */\n) {\n  this.points = points == undefined ? [] : points;\n};\n\nTHREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.SplineCurve.prototype.getPoint = function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var vector = new THREE.Vector2();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  return vector;\n}; // File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\n *\tEllipse curve\n **************************************************************/\n\n\nTHREE.EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise) {\n  this.aX = aX;\n  this.aY = aY;\n  this.xRadius = xRadius;\n  this.yRadius = yRadius;\n  this.aStartAngle = aStartAngle;\n  this.aEndAngle = aEndAngle;\n  this.aClockwise = aClockwise;\n};\n\nTHREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\n\nTHREE.EllipseCurve.prototype.getPoint = function (t) {\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  if (deltaAngle < 0) deltaAngle += Math.PI * 2;\n  if (deltaAngle > Math.PI * 2) deltaAngle -= Math.PI * 2;\n  var angle;\n\n  if (this.aClockwise === true) {\n    angle = this.aEndAngle + (1 - t) * (Math.PI * 2 - deltaAngle);\n  } else {\n    angle = this.aStartAngle + t * deltaAngle;\n  }\n\n  var vector = new THREE.Vector2();\n  vector.x = this.aX + this.xRadius * Math.cos(angle);\n  vector.y = this.aY + this.yRadius * Math.sin(angle);\n  return vector;\n}; // File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\n *\tArc curve\n **************************************************************/\n\n\nTHREE.ArcCurve = function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  THREE.EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n};\n\nTHREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype); // File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\n *\tLine3D\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(function (v1, v2) {\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.subVectors(this.v2, this.v1); // diff\n\n  vector.multiplyScalar(t);\n  vector.add(this.v1);\n  return vector;\n}); // File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\n *\tQuadratic Bezier 3D curve\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(function (v0, v1, v2) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x);\n  vector.y = THREE.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y);\n  vector.z = THREE.Shape.Utils.b2(t, this.v0.z, this.v1.z, this.v2.z);\n  return vector;\n}); // File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\n *\tCubic Bezier 3D curve\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(function (v0, v1, v2, v3) {\n  this.v0 = v0;\n  this.v1 = v1;\n  this.v2 = v2;\n  this.v3 = v3;\n}, function (t) {\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n  vector.y = THREE.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n  vector.z = THREE.Shape.Utils.b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z);\n  return vector;\n}); // File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\n *\tSpline 3D curve\n **************************************************************/\n\nTHREE.SplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 1) * t;\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  var point0 = points[intPoint == 0 ? intPoint : intPoint - 1];\n  var point1 = points[intPoint];\n  var point2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var point3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  vector.z = THREE.Curve.Utils.interpolate(point0.z, point1.z, point2.z, point3.z, weight);\n  return vector;\n}); // File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\n *\tClosed Spline 3D curve\n **************************************************************/\n\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(function (points\n/* array of Vector3 */\n) {\n  this.points = points == undefined ? [] : points;\n}, function (t) {\n  var points = this.points;\n  var point = (points.length - 0) * t; // This needs to be from 0-length +1\n\n  var intPoint = Math.floor(point);\n  var weight = point - intPoint;\n  intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / points.length) + 1) * points.length;\n  var point0 = points[(intPoint - 1) % points.length];\n  var point1 = points[intPoint % points.length];\n  var point2 = points[(intPoint + 1) % points.length];\n  var point3 = points[(intPoint + 2) % points.length];\n  var vector = new THREE.Vector3();\n  vector.x = THREE.Curve.Utils.interpolate(point0.x, point1.x, point2.x, point3.x, weight);\n  vector.y = THREE.Curve.Utils.interpolate(point0.y, point1.y, point2.y, point3.y, weight);\n  vector.z = THREE.Curve.Utils.interpolate(point0.z, point1.z, point2.z, point3.z, weight);\n  return vector;\n}); // File:src/extras/animation/AnimationHandler.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.AnimationHandler = {\n  LINEAR: 0,\n  CATMULLROM: 1,\n  CATMULLROM_FORWARD: 2,\n  //\n  add: function () {\n    console.warn('THREE.AnimationHandler.add() has been deprecated.');\n  },\n  get: function () {\n    console.warn('THREE.AnimationHandler.get() has been deprecated.');\n  },\n  remove: function () {\n    console.warn('THREE.AnimationHandler.remove() has been deprecated.');\n  },\n  //\n  animations: [],\n  init: function (data) {\n    if (data.initialized === true) return; // loop through all keys\n\n    for (var h = 0; h < data.hierarchy.length; h++) {\n      for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n        // remove minus times\n        if (data.hierarchy[h].keys[k].time < 0) {\n          data.hierarchy[h].keys[k].time = 0;\n        } // create quaternions\n\n\n        if (data.hierarchy[h].keys[k].rot !== undefined && !(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)) {\n          var quat = data.hierarchy[h].keys[k].rot;\n          data.hierarchy[h].keys[k].rot = new THREE.Quaternion().fromArray(quat);\n        }\n      } // prepare morph target keys\n\n\n      if (data.hierarchy[h].keys.length && data.hierarchy[h].keys[0].morphTargets !== undefined) {\n        // get all used\n        var usedMorphTargets = {};\n\n        for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n          for (var m = 0; m < data.hierarchy[h].keys[k].morphTargets.length; m++) {\n            var morphTargetName = data.hierarchy[h].keys[k].morphTargets[m];\n            usedMorphTargets[morphTargetName] = -1;\n          }\n        }\n\n        data.hierarchy[h].usedMorphTargets = usedMorphTargets; // set all used on all frames\n\n        for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n          var influences = {};\n\n          for (var morphTargetName in usedMorphTargets) {\n            for (var m = 0; m < data.hierarchy[h].keys[k].morphTargets.length; m++) {\n              if (data.hierarchy[h].keys[k].morphTargets[m] === morphTargetName) {\n                influences[morphTargetName] = data.hierarchy[h].keys[k].morphTargetsInfluences[m];\n                break;\n              }\n            }\n\n            if (m === data.hierarchy[h].keys[k].morphTargets.length) {\n              influences[morphTargetName] = 0;\n            }\n          }\n\n          data.hierarchy[h].keys[k].morphTargetsInfluences = influences;\n        }\n      } // remove all keys that are on the same time\n\n\n      for (var k = 1; k < data.hierarchy[h].keys.length; k++) {\n        if (data.hierarchy[h].keys[k].time === data.hierarchy[h].keys[k - 1].time) {\n          data.hierarchy[h].keys.splice(k, 1);\n          k--;\n        }\n      } // set index\n\n\n      for (var k = 0; k < data.hierarchy[h].keys.length; k++) {\n        data.hierarchy[h].keys[k].index = k;\n      }\n    }\n\n    data.initialized = true;\n    return data;\n  },\n  parse: function (root) {\n    var parseRecurseHierarchy = function (root, hierarchy) {\n      hierarchy.push(root);\n\n      for (var c = 0; c < root.children.length; c++) parseRecurseHierarchy(root.children[c], hierarchy);\n    }; // setup hierarchy\n\n\n    var hierarchy = [];\n\n    if (root instanceof THREE.SkinnedMesh) {\n      for (var b = 0; b < root.skeleton.bones.length; b++) {\n        hierarchy.push(root.skeleton.bones[b]);\n      }\n    } else {\n      parseRecurseHierarchy(root, hierarchy);\n    }\n\n    return hierarchy;\n  },\n  play: function (animation) {\n    if (this.animations.indexOf(animation) === -1) {\n      this.animations.push(animation);\n    }\n  },\n  stop: function (animation) {\n    var index = this.animations.indexOf(animation);\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n    }\n  },\n  update: function (deltaTimeMS) {\n    for (var i = 0; i < this.animations.length; i++) {\n      this.animations[i].resetBlendWeights();\n    }\n\n    for (var i = 0; i < this.animations.length; i++) {\n      this.animations[i].update(deltaTimeMS);\n    }\n  }\n}; // File:src/extras/animation/Animation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Animation = function (root, data) {\n  this.root = root;\n  this.data = THREE.AnimationHandler.init(data);\n  this.hierarchy = THREE.AnimationHandler.parse(root);\n  this.currentTime = 0;\n  this.timeScale = 1;\n  this.isPlaying = false;\n  this.loop = true;\n  this.weight = 0;\n  this.interpolationType = THREE.AnimationHandler.LINEAR;\n};\n\nTHREE.Animation.prototype.keyTypes = [\"pos\", \"rot\", \"scl\"];\n\nTHREE.Animation.prototype.play = function (startTime, weight) {\n  this.currentTime = startTime !== undefined ? startTime : 0;\n  this.weight = weight !== undefined ? weight : 1;\n  this.isPlaying = true;\n  this.reset();\n  THREE.AnimationHandler.play(this);\n};\n\nTHREE.Animation.prototype.stop = function () {\n  this.isPlaying = false;\n  THREE.AnimationHandler.stop(this);\n};\n\nTHREE.Animation.prototype.reset = function () {\n  for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n    var object = this.hierarchy[h];\n    object.matrixAutoUpdate = true;\n\n    if (object.animationCache === undefined) {\n      object.animationCache = {\n        animations: {},\n        blending: {\n          positionWeight: 0.0,\n          quaternionWeight: 0.0,\n          scaleWeight: 0.0\n        }\n      };\n    }\n\n    if (object.animationCache.animations[this.data.name] === undefined) {\n      object.animationCache.animations[this.data.name] = {};\n      object.animationCache.animations[this.data.name].prevKey = {\n        pos: 0,\n        rot: 0,\n        scl: 0\n      };\n      object.animationCache.animations[this.data.name].nextKey = {\n        pos: 0,\n        rot: 0,\n        scl: 0\n      };\n      object.animationCache.animations[this.data.name].originalMatrix = object.matrix;\n    }\n\n    var animationCache = object.animationCache.animations[this.data.name]; // Get keys to match our current time\n\n    for (var t = 0; t < 3; t++) {\n      var type = this.keyTypes[t];\n      var prevKey = this.data.hierarchy[h].keys[0];\n      var nextKey = this.getNextKeyWith(type, h, 1);\n\n      while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n        prevKey = nextKey;\n        nextKey = this.getNextKeyWith(type, h, nextKey.index + 1);\n      }\n\n      animationCache.prevKey[type] = prevKey;\n      animationCache.nextKey[type] = nextKey;\n    }\n  }\n};\n\nTHREE.Animation.prototype.resetBlendWeights = function () {\n  for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n    var object = this.hierarchy[h];\n\n    if (object.animationCache !== undefined) {\n      object.animationCache.blending.positionWeight = 0.0;\n      object.animationCache.blending.quaternionWeight = 0.0;\n      object.animationCache.blending.scaleWeight = 0.0;\n    }\n  }\n};\n\nTHREE.Animation.prototype.update = function () {\n  var points = [];\n  var target = new THREE.Vector3();\n  var newVector = new THREE.Vector3();\n  var newQuat = new THREE.Quaternion(); // Catmull-Rom spline\n\n  var interpolateCatmullRom = function (points, scale) {\n    var c = [],\n        v3 = [],\n        point,\n        intPoint,\n        weight,\n        w2,\n        w3,\n        pa,\n        pb,\n        pc,\n        pd;\n    point = (points.length - 1) * scale;\n    intPoint = Math.floor(point);\n    weight = point - intPoint;\n    c[0] = intPoint === 0 ? intPoint : intPoint - 1;\n    c[1] = intPoint;\n    c[2] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n    c[3] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n    pa = points[c[0]];\n    pb = points[c[1]];\n    pc = points[c[2]];\n    pd = points[c[3]];\n    w2 = weight * weight;\n    w3 = weight * w2;\n    v3[0] = interpolate(pa[0], pb[0], pc[0], pd[0], weight, w2, w3);\n    v3[1] = interpolate(pa[1], pb[1], pc[1], pd[1], weight, w2, w3);\n    v3[2] = interpolate(pa[2], pb[2], pc[2], pd[2], weight, w2, w3);\n    return v3;\n  };\n\n  var interpolate = function (p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5,\n        v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n  };\n\n  return function (delta) {\n    if (this.isPlaying === false) return;\n    this.currentTime += delta * this.timeScale;\n    if (this.weight === 0) return; //\n\n    var duration = this.data.length;\n\n    if (this.currentTime > duration || this.currentTime < 0) {\n      if (this.loop) {\n        this.currentTime %= duration;\n        if (this.currentTime < 0) this.currentTime += duration;\n        this.reset();\n      } else {\n        this.stop();\n        return;\n      }\n    }\n\n    for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n      var object = this.hierarchy[h];\n      var animationCache = object.animationCache.animations[this.data.name];\n      var blending = object.animationCache.blending; // loop through pos/rot/scl\n\n      for (var t = 0; t < 3; t++) {\n        // get keys\n        var type = this.keyTypes[t];\n        var prevKey = animationCache.prevKey[type];\n        var nextKey = animationCache.nextKey[type];\n\n        if (this.timeScale > 0 && nextKey.time <= this.currentTime || this.timeScale < 0 && prevKey.time >= this.currentTime) {\n          prevKey = this.data.hierarchy[h].keys[0];\n          nextKey = this.getNextKeyWith(type, h, 1);\n\n          while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n            prevKey = nextKey;\n            nextKey = this.getNextKeyWith(type, h, nextKey.index + 1);\n          }\n\n          animationCache.prevKey[type] = prevKey;\n          animationCache.nextKey[type] = nextKey;\n        }\n\n        object.matrixAutoUpdate = true;\n        object.matrixWorldNeedsUpdate = true;\n        var scale = (this.currentTime - prevKey.time) / (nextKey.time - prevKey.time);\n        var prevXYZ = prevKey[type];\n        var nextXYZ = nextKey[type];\n        if (scale < 0) scale = 0;\n        if (scale > 1) scale = 1; // interpolate\n\n        if (type === \"pos\") {\n          if (this.interpolationType === THREE.AnimationHandler.LINEAR) {\n            newVector.x = prevXYZ[0] + (nextXYZ[0] - prevXYZ[0]) * scale;\n            newVector.y = prevXYZ[1] + (nextXYZ[1] - prevXYZ[1]) * scale;\n            newVector.z = prevXYZ[2] + (nextXYZ[2] - prevXYZ[2]) * scale; // blend\n\n            var proportionalWeight = this.weight / (this.weight + blending.positionWeight);\n            object.position.lerp(newVector, proportionalWeight);\n            blending.positionWeight += this.weight;\n          } else if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n            points[0] = this.getPrevKeyWith(\"pos\", h, prevKey.index - 1)[\"pos\"];\n            points[1] = prevXYZ;\n            points[2] = nextXYZ;\n            points[3] = this.getNextKeyWith(\"pos\", h, nextKey.index + 1)[\"pos\"];\n            scale = scale * 0.33 + 0.33;\n            var currentPoint = interpolateCatmullRom(points, scale);\n            var proportionalWeight = this.weight / (this.weight + blending.positionWeight);\n            blending.positionWeight += this.weight; // blend\n\n            var vector = object.position;\n            vector.x = vector.x + (currentPoint[0] - vector.x) * proportionalWeight;\n            vector.y = vector.y + (currentPoint[1] - vector.y) * proportionalWeight;\n            vector.z = vector.z + (currentPoint[2] - vector.z) * proportionalWeight;\n\n            if (this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n              var forwardPoint = interpolateCatmullRom(points, scale * 1.01);\n              target.set(forwardPoint[0], forwardPoint[1], forwardPoint[2]);\n              target.sub(vector);\n              target.y = 0;\n              target.normalize();\n              var angle = Math.atan2(target.x, target.z);\n              object.rotation.set(0, angle, 0);\n            }\n          }\n        } else if (type === \"rot\") {\n          THREE.Quaternion.slerp(prevXYZ, nextXYZ, newQuat, scale); // Avoid paying the cost of an additional slerp if we don't have to\n\n          if (blending.quaternionWeight === 0) {\n            object.quaternion.copy(newQuat);\n            blending.quaternionWeight = this.weight;\n          } else {\n            var proportionalWeight = this.weight / (this.weight + blending.quaternionWeight);\n            THREE.Quaternion.slerp(object.quaternion, newQuat, object.quaternion, proportionalWeight);\n            blending.quaternionWeight += this.weight;\n          }\n        } else if (type === \"scl\") {\n          newVector.x = prevXYZ[0] + (nextXYZ[0] - prevXYZ[0]) * scale;\n          newVector.y = prevXYZ[1] + (nextXYZ[1] - prevXYZ[1]) * scale;\n          newVector.z = prevXYZ[2] + (nextXYZ[2] - prevXYZ[2]) * scale;\n          var proportionalWeight = this.weight / (this.weight + blending.scaleWeight);\n          object.scale.lerp(newVector, proportionalWeight);\n          blending.scaleWeight += this.weight;\n        }\n      }\n    }\n\n    return true;\n  };\n}(); // Get next key with\n\n\nTHREE.Animation.prototype.getNextKeyWith = function (type, h, key) {\n  var keys = this.data.hierarchy[h].keys;\n\n  if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n    key = key < keys.length - 1 ? key : keys.length - 1;\n  } else {\n    key = key % keys.length;\n  }\n\n  for (; key < keys.length; key++) {\n    if (keys[key][type] !== undefined) {\n      return keys[key];\n    }\n  }\n\n  return this.data.hierarchy[h].keys[0];\n}; // Get previous key with\n\n\nTHREE.Animation.prototype.getPrevKeyWith = function (type, h, key) {\n  var keys = this.data.hierarchy[h].keys;\n\n  if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) {\n    key = key > 0 ? key : 0;\n  } else {\n    key = key >= 0 ? key : key + keys.length;\n  }\n\n  for (; key >= 0; key--) {\n    if (keys[key][type] !== undefined) {\n      return keys[key];\n    }\n  }\n\n  return this.data.hierarchy[h].keys[keys.length - 1];\n}; // File:src/extras/animation/KeyFrameAnimation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author khang duong\n * @author erik kitson\n */\n\n\nTHREE.KeyFrameAnimation = function (data) {\n  this.root = data.node;\n  this.data = THREE.AnimationHandler.init(data);\n  this.hierarchy = THREE.AnimationHandler.parse(this.root);\n  this.currentTime = 0;\n  this.timeScale = 0.001;\n  this.isPlaying = false;\n  this.isPaused = true;\n  this.loop = true; // initialize to first keyframes\n\n  for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n    var keys = this.data.hierarchy[h].keys,\n        sids = this.data.hierarchy[h].sids,\n        obj = this.hierarchy[h];\n\n    if (keys.length && sids) {\n      for (var s = 0; s < sids.length; s++) {\n        var sid = sids[s],\n            next = this.getNextKeyWith(sid, h, 0);\n\n        if (next) {\n          next.apply(sid);\n        }\n      }\n\n      obj.matrixAutoUpdate = false;\n      this.data.hierarchy[h].node.updateMatrix();\n      obj.matrixWorldNeedsUpdate = true;\n    }\n  }\n};\n\nTHREE.KeyFrameAnimation.prototype.play = function (startTime) {\n  this.currentTime = startTime !== undefined ? startTime : 0;\n\n  if (this.isPlaying === false) {\n    this.isPlaying = true; // reset key cache\n\n    var h,\n        hl = this.hierarchy.length,\n        object,\n        node;\n\n    for (h = 0; h < hl; h++) {\n      object = this.hierarchy[h];\n      node = this.data.hierarchy[h];\n\n      if (node.animationCache === undefined) {\n        node.animationCache = {};\n        node.animationCache.prevKey = null;\n        node.animationCache.nextKey = null;\n        node.animationCache.originalMatrix = object.matrix;\n      }\n\n      var keys = this.data.hierarchy[h].keys;\n\n      if (keys.length) {\n        node.animationCache.prevKey = keys[0];\n        node.animationCache.nextKey = keys[1];\n        this.startTime = Math.min(keys[0].time, this.startTime);\n        this.endTime = Math.max(keys[keys.length - 1].time, this.endTime);\n      }\n    }\n\n    this.update(0);\n  }\n\n  this.isPaused = false;\n  THREE.AnimationHandler.play(this);\n};\n\nTHREE.KeyFrameAnimation.prototype.stop = function () {\n  this.isPlaying = false;\n  this.isPaused = false;\n  THREE.AnimationHandler.stop(this); // reset JIT matrix and remove cache\n\n  for (var h = 0; h < this.data.hierarchy.length; h++) {\n    var obj = this.hierarchy[h];\n    var node = this.data.hierarchy[h];\n\n    if (node.animationCache !== undefined) {\n      var original = node.animationCache.originalMatrix;\n      original.copy(obj.matrix);\n      obj.matrix = original;\n      delete node.animationCache;\n    }\n  }\n}; // Update\n\n\nTHREE.KeyFrameAnimation.prototype.update = function (delta) {\n  if (this.isPlaying === false) return;\n  this.currentTime += delta * this.timeScale; //\n\n  var duration = this.data.length;\n\n  if (this.loop === true && this.currentTime > duration) {\n    this.currentTime %= duration;\n  }\n\n  this.currentTime = Math.min(this.currentTime, duration);\n\n  for (var h = 0, hl = this.hierarchy.length; h < hl; h++) {\n    var object = this.hierarchy[h];\n    var node = this.data.hierarchy[h];\n    var keys = node.keys,\n        animationCache = node.animationCache;\n\n    if (keys.length) {\n      var prevKey = animationCache.prevKey;\n      var nextKey = animationCache.nextKey;\n\n      if (nextKey.time <= this.currentTime) {\n        while (nextKey.time < this.currentTime && nextKey.index > prevKey.index) {\n          prevKey = nextKey;\n          nextKey = keys[prevKey.index + 1];\n        }\n\n        animationCache.prevKey = prevKey;\n        animationCache.nextKey = nextKey;\n      }\n\n      if (nextKey.time >= this.currentTime) {\n        prevKey.interpolate(nextKey, this.currentTime);\n      } else {\n        prevKey.interpolate(nextKey, nextKey.time);\n      }\n\n      this.data.hierarchy[h].node.updateMatrix();\n      object.matrixWorldNeedsUpdate = true;\n    }\n  }\n}; // Get next key with\n\n\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function (sid, h, key) {\n  var keys = this.data.hierarchy[h].keys;\n  key = key % keys.length;\n\n  for (; key < keys.length; key++) {\n    if (keys[key].hasTarget(sid)) {\n      return keys[key];\n    }\n  }\n\n  return keys[0];\n}; // Get previous key with\n\n\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function (sid, h, key) {\n  var keys = this.data.hierarchy[h].keys;\n  key = key >= 0 ? key : key + keys.length;\n\n  for (; key >= 0; key--) {\n    if (keys[key].hasTarget(sid)) {\n      return keys[key];\n    }\n  }\n\n  return keys[keys.length - 1];\n}; // File:src/extras/animation/MorphAnimation.js\n\n/**\n * @author mrdoob / http://mrdoob.com\n */\n\n\nTHREE.MorphAnimation = function (mesh) {\n  this.mesh = mesh;\n  this.frames = mesh.morphTargetInfluences.length;\n  this.currentTime = 0;\n  this.duration = 1000;\n  this.loop = true;\n  this.isPlaying = false;\n};\n\nTHREE.MorphAnimation.prototype = {\n  play: function () {\n    this.isPlaying = true;\n  },\n  pause: function () {\n    this.isPlaying = false;\n  },\n  update: function () {\n    var lastFrame = 0;\n    var currentFrame = 0;\n    return function (delta) {\n      if (this.isPlaying === false) return;\n      this.currentTime += delta;\n\n      if (this.loop === true && this.currentTime > this.duration) {\n        this.currentTime %= this.duration;\n      }\n\n      this.currentTime = Math.min(this.currentTime, this.duration);\n      var interpolation = this.duration / this.frames;\n      var frame = Math.floor(this.currentTime / interpolation);\n\n      if (frame != currentFrame) {\n        this.mesh.morphTargetInfluences[lastFrame] = 0;\n        this.mesh.morphTargetInfluences[currentFrame] = 1;\n        this.mesh.morphTargetInfluences[frame] = 0;\n        lastFrame = currentFrame;\n        currentFrame = frame;\n      }\n\n      this.mesh.morphTargetInfluences[frame] = this.currentTime % interpolation / interpolation;\n      this.mesh.morphTargetInfluences[lastFrame] = 1 - this.mesh.morphTargetInfluences[frame];\n    };\n  }()\n}; // File:src/extras/geometries/BoxGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n */\n\nTHREE.BoxGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  THREE.Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.widthSegments = widthSegments || 1;\n  this.heightSegments = heightSegments || 1;\n  this.depthSegments = depthSegments || 1;\n  var scope = this;\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var depth_half = depth / 2;\n  buildPlane('z', 'y', -1, -1, depth, height, width_half, 0); // px\n\n  buildPlane('z', 'y', 1, -1, depth, height, -width_half, 1); // nx\n\n  buildPlane('x', 'z', 1, 1, width, depth, height_half, 2); // py\n\n  buildPlane('x', 'z', 1, -1, width, depth, -height_half, 3); // ny\n\n  buildPlane('x', 'y', 1, -1, width, height, depth_half, 4); // pz\n\n  buildPlane('x', 'y', -1, -1, width, height, -depth_half, 5); // nz\n\n  function buildPlane(u, v, udir, vdir, width, height, depth, materialIndex) {\n    var w,\n        ix,\n        iy,\n        gridX = scope.widthSegments,\n        gridY = scope.heightSegments,\n        width_half = width / 2,\n        height_half = height / 2,\n        offset = scope.vertices.length;\n\n    if (u === 'x' && v === 'y' || u === 'y' && v === 'x') {\n      w = 'z';\n    } else if (u === 'x' && v === 'z' || u === 'z' && v === 'x') {\n      w = 'y';\n      gridY = scope.depthSegments;\n    } else if (u === 'z' && v === 'y' || u === 'y' && v === 'z') {\n      w = 'x';\n      gridX = scope.depthSegments;\n    }\n\n    var gridX1 = gridX + 1,\n        gridY1 = gridY + 1,\n        segment_width = width / gridX,\n        segment_height = height / gridY,\n        normal = new THREE.Vector3();\n    normal[w] = depth > 0 ? 1 : -1;\n\n    for (iy = 0; iy < gridY1; iy++) {\n      for (ix = 0; ix < gridX1; ix++) {\n        var vector = new THREE.Vector3();\n        vector[u] = (ix * segment_width - width_half) * udir;\n        vector[v] = (iy * segment_height - height_half) * vdir;\n        vector[w] = depth;\n        scope.vertices.push(vector);\n      }\n    }\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy;\n        var uva = new THREE.Vector2(ix / gridX, 1 - iy / gridY);\n        var uvb = new THREE.Vector2(ix / gridX, 1 - (iy + 1) / gridY);\n        var uvc = new THREE.Vector2((ix + 1) / gridX, 1 - (iy + 1) / gridY);\n        var uvd = new THREE.Vector2((ix + 1) / gridX, 1 - iy / gridY);\n        var face = new THREE.Face3(a + offset, b + offset, d + offset);\n        face.normal.copy(normal);\n        face.vertexNormals.push(normal.clone(), normal.clone(), normal.clone());\n        face.materialIndex = materialIndex;\n        scope.faces.push(face);\n        scope.faceVertexUvs[0].push([uva, uvb, uvd]);\n        face = new THREE.Face3(b + offset, c + offset, d + offset);\n        face.normal.copy(normal);\n        face.vertexNormals.push(normal.clone(), normal.clone(), normal.clone());\n        face.materialIndex = materialIndex;\n        scope.faces.push(face);\n        scope.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n      }\n    }\n  }\n\n  this.mergeVertices();\n};\n\nTHREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/CircleGeometry.js\n\n/**\n * @author hughes\n */\n\nTHREE.CircleGeometry = function (radius, segments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  var i,\n      uvs = [],\n      center = new THREE.Vector3(),\n      centerUV = new THREE.Vector2(0.5, 0.5);\n  this.vertices.push(center);\n  uvs.push(centerUV);\n\n  for (i = 0; i <= segments; i++) {\n    var vertex = new THREE.Vector3();\n    var segment = thetaStart + i / segments * thetaLength;\n    vertex.x = radius * Math.cos(segment);\n    vertex.y = radius * Math.sin(segment);\n    this.vertices.push(vertex);\n    uvs.push(new THREE.Vector2((vertex.x / radius + 1) / 2, (vertex.y / radius + 1) / 2));\n  }\n\n  var n = new THREE.Vector3(0, 0, 1);\n\n  for (i = 1; i <= segments; i++) {\n    this.faces.push(new THREE.Face3(i, i + 1, 0, [n.clone(), n.clone(), n.clone()]));\n    this.faceVertexUvs[0].push([uvs[i].clone(), uvs[i + 1].clone(), centerUV.clone()]);\n  }\n\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/CubeGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeGeometry = function (width, height, depth, widthSegments, heightSegments, depthSegments) {\n  console.warn('THREE.CubeGeometry has been renamed to THREE.BoxGeometry.');\n  return new THREE.BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments);\n}; // File:src/extras/geometries/CylinderGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.CylinderGeometry = function (radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded) {\n  THREE.Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded\n  };\n  radiusTop = radiusTop !== undefined ? radiusTop : 20;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n  height = height !== undefined ? height : 100;\n  radialSegments = radialSegments || 8;\n  heightSegments = heightSegments || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  var heightHalf = height / 2;\n  var x,\n      y,\n      vertices = [],\n      uvs = [];\n\n  for (y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var uvsRow = [];\n    var v = y / heightSegments;\n    var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var vertex = new THREE.Vector3();\n      vertex.x = radius * Math.sin(u * Math.PI * 2);\n      vertex.y = -v * height + heightHalf;\n      vertex.z = radius * Math.cos(u * Math.PI * 2);\n      this.vertices.push(vertex);\n      verticesRow.push(this.vertices.length - 1);\n      uvsRow.push(new THREE.Vector2(u, 1 - v));\n    }\n\n    vertices.push(verticesRow);\n    uvs.push(uvsRow);\n  }\n\n  var tanTheta = (radiusBottom - radiusTop) / height;\n  var na, nb;\n\n  for (x = 0; x < radialSegments; x++) {\n    if (radiusTop !== 0) {\n      na = this.vertices[vertices[0][x]].clone();\n      nb = this.vertices[vertices[0][x + 1]].clone();\n    } else {\n      na = this.vertices[vertices[1][x]].clone();\n      nb = this.vertices[vertices[1][x + 1]].clone();\n    }\n\n    na.setY(Math.sqrt(na.x * na.x + na.z * na.z) * tanTheta).normalize();\n    nb.setY(Math.sqrt(nb.x * nb.x + nb.z * nb.z) * tanTheta).normalize();\n\n    for (y = 0; y < heightSegments; y++) {\n      var v1 = vertices[y][x];\n      var v2 = vertices[y + 1][x];\n      var v3 = vertices[y + 1][x + 1];\n      var v4 = vertices[y][x + 1];\n      var n1 = na.clone();\n      var n2 = na.clone();\n      var n3 = nb.clone();\n      var n4 = nb.clone();\n      var uv1 = uvs[y][x].clone();\n      var uv2 = uvs[y + 1][x].clone();\n      var uv3 = uvs[y + 1][x + 1].clone();\n      var uv4 = uvs[y][x + 1].clone();\n      this.faces.push(new THREE.Face3(v1, v2, v4, [n1, n2, n4]));\n      this.faceVertexUvs[0].push([uv1, uv2, uv4]);\n      this.faces.push(new THREE.Face3(v2, v3, v4, [n2.clone(), n3, n4.clone()]));\n      this.faceVertexUvs[0].push([uv2.clone(), uv3, uv4.clone()]);\n    }\n  } // top cap\n\n\n  if (openEnded === false && radiusTop > 0) {\n    this.vertices.push(new THREE.Vector3(0, heightHalf, 0));\n\n    for (x = 0; x < radialSegments; x++) {\n      var v1 = vertices[0][x];\n      var v2 = vertices[0][x + 1];\n      var v3 = this.vertices.length - 1;\n      var n1 = new THREE.Vector3(0, 1, 0);\n      var n2 = new THREE.Vector3(0, 1, 0);\n      var n3 = new THREE.Vector3(0, 1, 0);\n      var uv1 = uvs[0][x].clone();\n      var uv2 = uvs[0][x + 1].clone();\n      var uv3 = new THREE.Vector2(uv2.x, 0);\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n1, n2, n3]));\n      this.faceVertexUvs[0].push([uv1, uv2, uv3]);\n    }\n  } // bottom cap\n\n\n  if (openEnded === false && radiusBottom > 0) {\n    this.vertices.push(new THREE.Vector3(0, -heightHalf, 0));\n\n    for (x = 0; x < radialSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = this.vertices.length - 1;\n      var n1 = new THREE.Vector3(0, -1, 0);\n      var n2 = new THREE.Vector3(0, -1, 0);\n      var n3 = new THREE.Vector3(0, -1, 0);\n      var uv1 = uvs[y][x + 1].clone();\n      var uv2 = uvs[y][x].clone();\n      var uv3 = new THREE.Vector2(uv2.x, 1);\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n1, n2, n3]));\n      this.faceVertexUvs[0].push([uv1, uv2, uv3]);\n    }\n  }\n\n  this.computeFaceNormals();\n};\n\nTHREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n *\n *  material: <int> // material index for front and back faces\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ExtrudeGeometry = function (shapes, options) {\n  if (typeof shapes === \"undefined\") {\n    shapes = [];\n    return;\n  }\n\n  THREE.Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  shapes = shapes instanceof Array ? shapes : [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals(); // can't really use automatic vertex normals\n  // as then front and back sides get smoothed too\n  // should do separate smoothing just for sides\n  //this.computeVertexNormals();\n  //console.log( \"took\", ( Date.now() - startTime ) );\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function (shapes, options) {\n  var sl = shapes.length;\n\n  for (var s = 0; s < sl; s++) {\n    var shape = shapes[s];\n    this.addShape(shape, options);\n  }\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function (shape, options) {\n  var amount = options.amount !== undefined ? options.amount : 100;\n  var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\n  var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\n  var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n  var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var steps = options.steps !== undefined ? options.steps : 1;\n  var extrudePath = options.extrudePath;\n  var extrudePts,\n      extrudeByPath = false;\n  var material = options.material;\n  var extrudeMaterial = options.extrudeMaterial; // Use default WorldUVGenerator if no UV generators are specified.\n\n  var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n  var splineTube, binormal, normal, position2;\n\n  if (extrudePath) {\n    extrudePts = extrudePath.getSpacedPoints(steps);\n    extrudeByPath = true;\n    bevelEnabled = false; // bevels not supported for path extrusion\n    // SETUP TNB variables\n    // Reuse TNB from TubeGeomtry for now.\n    // TODO1 - have a .isClosed in spline?\n\n    splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    binormal = new THREE.Vector3();\n    normal = new THREE.Vector3();\n    position2 = new THREE.Vector3();\n  } // Safeguards if bevels are not enabled\n\n\n  if (!bevelEnabled) {\n    bevelSegments = 0;\n    bevelThickness = 0;\n    bevelSize = 0;\n  } // Variables initalization\n\n\n  var ahole, h, hl; // looping of holes\n\n  var scope = this;\n  var bevelPoints = [];\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.Shape.Utils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n\n      if (THREE.Shape.Utils.isClockWise(ahole)) {\n        holes[h] = ahole.reverse();\n      }\n    }\n\n    reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n  }\n\n  var faces = THREE.Shape.Utils.triangulateShape(vertices, holes);\n  /* Vertices */\n\n  var contour = vertices; // vertices has all points but contour has only points of circumference\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    vertices = vertices.concat(ahole);\n  }\n\n  function scalePt2(pt, vec, size) {\n    if (!vec) console.log(\"die\");\n    return vec.clone().multiplyScalar(size).add(pt);\n  }\n\n  var b,\n      bs,\n      t,\n      z,\n      vert,\n      vlen = vertices.length,\n      face,\n      flen = faces.length,\n      cont,\n      clen = contour.length; // Find directions for point movement\n\n  var RAD_TO_DEGREES = 180 / Math.PI;\n\n  function getBevelVec(inPt, inPrev, inNext) {\n    var EPSILON = 0.0000000001; // computes for inPt the corresponding point inPt' on a new contour\n    //   shiftet by 1 unit (length of normalized vector) to the left\n    // if we walk along contour clockwise, this new contour is outside the old one\n    //\n    // inPt' is the intersection of the two lines parallel to the two\n    //  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n    var v_trans_x,\n        v_trans_y,\n        shrink_by = 1; // resulting translation vector for inPt\n    // good reading for geometry algorithms (here: line-line intersection)\n    // http://geomalgorithms.com/a05-_intersect-1.html\n\n    var v_prev_x = inPt.x - inPrev.x,\n        v_prev_y = inPt.y - inPrev.y;\n    var v_next_x = inNext.x - inPt.x,\n        v_next_y = inNext.y - inPt.y;\n    var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for colinear edges\n\n    var colinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n    if (Math.abs(colinear0) > EPSILON) {\n      // not colinear\n      // length of vectors for normalizing\n      var v_prev_len = Math.sqrt(v_prev_lensq);\n      var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n      var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n      var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n      var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n      var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n      var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n      v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n      v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n      //  but prevent crazy spikes\n\n      var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n      if (v_trans_lensq <= 2) {\n        return new THREE.Vector2(v_trans_x, v_trans_y);\n      } else {\n        shrink_by = Math.sqrt(v_trans_lensq / 2);\n      }\n    } else {\n      // handle special case of colinear edges\n      var direction_eq = false; // assumes: opposite\n\n      if (v_prev_x > EPSILON) {\n        if (v_next_x > EPSILON) {\n          direction_eq = true;\n        }\n      } else {\n        if (v_prev_x < -EPSILON) {\n          if (v_next_x < -EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (Math.sign(v_prev_y) == Math.sign(v_next_y)) {\n            direction_eq = true;\n          }\n        }\n      }\n\n      if (direction_eq) {\n        // console.log(\"Warning: lines are a straight sequence\");\n        v_trans_x = -v_prev_y;\n        v_trans_y = v_prev_x;\n        shrink_by = Math.sqrt(v_prev_lensq);\n      } else {\n        // console.log(\"Warning: lines are a straight spike\");\n        v_trans_x = v_prev_x;\n        v_trans_y = v_prev_y;\n        shrink_by = Math.sqrt(v_prev_lensq / 2);\n      }\n    }\n\n    return new THREE.Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n  }\n\n  var contourMovements = [];\n\n  for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n    if (j === il) j = 0;\n    if (k === il) k = 0; //  (j)---(i)---(k)\n    // console.log('i,j,k', i, j , k)\n\n    var pt_i = contour[i];\n    var pt_j = contour[j];\n    var pt_k = contour[k];\n    contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n  }\n\n  var holesMovements = [],\n      oneHoleMovements,\n      verticesMovements = contourMovements.concat();\n\n  for (h = 0, hl = holes.length; h < hl; h++) {\n    ahole = holes[h];\n    oneHoleMovements = [];\n\n    for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n\n      oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n    }\n\n    holesMovements.push(oneHoleMovements);\n    verticesMovements = verticesMovements.concat(oneHoleMovements);\n  } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n  for (b = 0; b < bevelSegments; b++) {\n    //for ( b = bevelSegments; b > 0; b -- ) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //z = bevelThickness * t;\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // curved\n    //bs = bevelSize * t ; // linear\n    // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, -z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      }\n    }\n  }\n\n  bs = bevelSize; // Back facing vertices\n\n  for (i = 0; i < vlen; i++) {\n    vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n    if (!extrudeByPath) {\n      v(vert.x, vert.y, 0);\n    } else {\n      // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n      normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n      binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n      position2.copy(extrudePts[0]).add(normal).add(binormal);\n      v(position2.x, position2.y, position2.z);\n    }\n  } // Add stepped vertices...\n  // Including front facing vertices\n\n\n  var s;\n\n  for (s = 1; s <= steps; s++) {\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, amount / steps * s);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n        normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[s]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    }\n  } // Add bevel segments planes\n  //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n  for (b = bevelSegments - 1; b >= 0; b--) {\n    t = b / bevelSegments;\n    z = bevelThickness * (1 - t); //bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\n    bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n    for (i = 0, il = contour.length; i < il; i++) {\n      vert = scalePt2(contour[i], contourMovements[i], bs);\n      v(vert.x, vert.y, amount + z);\n    } // expand holes\n\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = holesMovements[h];\n\n      for (i = 0, il = ahole.length; i < il; i++) {\n        vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, amount + z);\n        } else {\n          v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n        }\n      }\n    }\n  }\n  /* Faces */\n  // Top and bottom faces\n\n\n  buildLidFaces(); // Sides faces\n\n  buildSideFaces(); /////  Internal functions\n\n  function buildLidFaces() {\n    if (bevelEnabled) {\n      var layer = 0; // steps + 1\n\n      var offset = vlen * layer; // Bottom faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2] + offset, face[1] + offset, face[0] + offset);\n      }\n\n      layer = steps + bevelSegments * 2;\n      offset = vlen * layer; // Top faces\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + offset, face[1] + offset, face[2] + offset);\n      }\n    } else {\n      // Bottom faces\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[2], face[1], face[0]);\n      } // Top faces\n\n\n      for (i = 0; i < flen; i++) {\n        face = faces[i];\n        f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n      }\n    }\n  } // Create faces for the z-sides of the shape\n\n\n  function buildSideFaces() {\n    var layeroffset = 0;\n    sidewalls(contour, layeroffset);\n    layeroffset += contour.length;\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      sidewalls(ahole, layeroffset); //, true\n\n      layeroffset += ahole.length;\n    }\n  }\n\n  function sidewalls(contour, layeroffset) {\n    var j, k;\n    i = contour.length;\n\n    while (--i >= 0) {\n      j = i;\n      k = i - 1;\n      if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n      var s = 0,\n          sl = steps + bevelSegments * 2;\n\n      for (s = 0; s < sl; s++) {\n        var slen1 = vlen * s;\n        var slen2 = vlen * (s + 1);\n        var a = layeroffset + j + slen1,\n            b = layeroffset + k + slen1,\n            c = layeroffset + k + slen2,\n            d = layeroffset + j + slen2;\n        f4(a, b, c, d, contour, s, sl, j, k);\n      }\n    }\n  }\n\n  function v(x, y, z) {\n    scope.vertices.push(new THREE.Vector3(x, y, z));\n  }\n\n  function f3(a, b, c) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset; // normal, color, material\n\n    scope.faces.push(new THREE.Face3(a, b, c, null, null, material));\n    var uvs = uvgen.generateTopUV(scope, a, b, c);\n    scope.faceVertexUvs[0].push(uvs);\n  }\n\n  function f4(a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2) {\n    a += shapesOffset;\n    b += shapesOffset;\n    c += shapesOffset;\n    d += shapesOffset;\n    scope.faces.push(new THREE.Face3(a, b, d, null, null, extrudeMaterial));\n    scope.faces.push(new THREE.Face3(b, c, d, null, null, extrudeMaterial));\n    var uvs = uvgen.generateSideWallUV(scope, a, b, c, d);\n    scope.faceVertexUvs[0].push([uvs[0], uvs[1], uvs[3]]);\n    scope.faceVertexUvs[0].push([uvs[1], uvs[2], uvs[3]]);\n  }\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n  generateTopUV: function (geometry, indexA, indexB, indexC) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    return [new THREE.Vector2(a.x, a.y), new THREE.Vector2(b.x, b.y), new THREE.Vector2(c.x, c.y)];\n  },\n  generateSideWallUV: function (geometry, indexA, indexB, indexC, indexD) {\n    var vertices = geometry.vertices;\n    var a = vertices[indexA];\n    var b = vertices[indexB];\n    var c = vertices[indexC];\n    var d = vertices[indexD];\n\n    if (Math.abs(a.y - b.y) < 0.01) {\n      return [new THREE.Vector2(a.x, 1 - a.z), new THREE.Vector2(b.x, 1 - b.z), new THREE.Vector2(c.x, 1 - c.z), new THREE.Vector2(d.x, 1 - d.z)];\n    } else {\n      return [new THREE.Vector2(a.y, 1 - a.z), new THREE.Vector2(b.y, 1 - b.z), new THREE.Vector2(c.y, 1 - c.z), new THREE.Vector2(d.y, 1 - d.z)];\n    }\n  }\n}; // File:src/extras/geometries/ShapeGeometry.js\n\n/**\n * @author jonobr1 / http://jonobr1.com\n *\n * Creates a one-sided polygonal geometry from a path shape. Similar to\n * ExtrudeGeometry.\n *\n * parameters = {\n *\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n *\n *\tmaterial: <int> // material index for front and back faces\n *\tuvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ShapeGeometry = function (shapes, options) {\n  THREE.Geometry.call(this);\n  this.type = 'ShapeGeometry';\n  if (shapes instanceof Array === false) shapes = [shapes];\n  this.addShapeList(shapes, options);\n  this.computeFaceNormals();\n};\n\nTHREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\n/**\n * Add an array of shapes to THREE.ShapeGeometry.\n */\n\nTHREE.ShapeGeometry.prototype.addShapeList = function (shapes, options) {\n  for (var i = 0, l = shapes.length; i < l; i++) {\n    this.addShape(shapes[i], options);\n  }\n\n  return this;\n};\n/**\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n */\n\n\nTHREE.ShapeGeometry.prototype.addShape = function (shape, options) {\n  if (options === undefined) options = {};\n  var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n  var material = options.material;\n  var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator; //\n\n  var i, l, hole, s;\n  var shapesOffset = this.vertices.length;\n  var shapePoints = shape.extractPoints(curveSegments);\n  var vertices = shapePoints.shape;\n  var holes = shapePoints.holes;\n  var reverse = !THREE.Shape.Utils.isClockWise(vertices);\n\n  if (reverse) {\n    vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    for (i = 0, l = holes.length; i < l; i++) {\n      hole = holes[i];\n\n      if (THREE.Shape.Utils.isClockWise(hole)) {\n        holes[i] = hole.reverse();\n      }\n    }\n\n    reverse = false;\n  }\n\n  var faces = THREE.Shape.Utils.triangulateShape(vertices, holes); // Vertices\n\n  var contour = vertices;\n\n  for (i = 0, l = holes.length; i < l; i++) {\n    hole = holes[i];\n    vertices = vertices.concat(hole);\n  } //\n\n\n  var vert,\n      vlen = vertices.length;\n  var face,\n      flen = faces.length;\n  var cont,\n      clen = contour.length;\n\n  for (i = 0; i < vlen; i++) {\n    vert = vertices[i];\n    this.vertices.push(new THREE.Vector3(vert.x, vert.y, 0));\n  }\n\n  for (i = 0; i < flen; i++) {\n    face = faces[i];\n    var a = face[0] + shapesOffset;\n    var b = face[1] + shapesOffset;\n    var c = face[2] + shapesOffset;\n    this.faces.push(new THREE.Face3(a, b, c, null, null, material));\n    this.faceVertexUvs[0].push(uvgen.generateTopUV(this, a, b, c));\n  }\n}; // File:src/extras/geometries/LatheGeometry.js\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://exocortex.com\n */\n// points - to create a closed torus, one must use a set of points \n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2*PI) range of the lathed section\n//    2*pi is a closed lathe, less than 2PI is a portion.\n\n\nTHREE.LatheGeometry = function (points, segments, phiStart, phiLength) {\n  THREE.Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = segments || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || 2 * Math.PI;\n  var inversePointLength = 1.0 / (points.length - 1);\n  var inverseSegments = 1.0 / segments;\n\n  for (var i = 0, il = segments; i <= il; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var c = Math.cos(phi),\n        s = Math.sin(phi);\n\n    for (var j = 0, jl = points.length; j < jl; j++) {\n      var pt = points[j];\n      var vertex = new THREE.Vector3();\n      vertex.x = c * pt.x - s * pt.y;\n      vertex.y = s * pt.x + c * pt.y;\n      vertex.z = pt.z;\n      this.vertices.push(vertex);\n    }\n  }\n\n  var np = points.length;\n\n  for (var i = 0, il = segments; i < il; i++) {\n    for (var j = 0, jl = points.length - 1; j < jl; j++) {\n      var base = j + np * i;\n      var a = base;\n      var b = base + np;\n      var c = base + 1 + np;\n      var d = base + 1;\n      var u0 = i * inverseSegments;\n      var v0 = j * inversePointLength;\n      var u1 = u0 + inverseSegments;\n      var v1 = v0 + inversePointLength;\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([new THREE.Vector2(u0, v0), new THREE.Vector2(u1, v0), new THREE.Vector2(u0, v1)]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([new THREE.Vector2(u1, v0), new THREE.Vector2(u1, v1), new THREE.Vector2(u0, v1)]);\n    }\n  }\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/PlaneGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneGeometry = function (width, height, widthSegments, heightSegments) {\n  console.info('THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.');\n  THREE.Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new THREE.PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n};\n\nTHREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneBufferGeometry = function (width, height, widthSegments, heightSegments) {\n  THREE.BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = widthSegments || 1;\n  var gridY = heightSegments || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var vertices = new Float32Array(gridX1 * gridY1 * 3);\n  var normals = new Float32Array(gridX1 * gridY1 * 3);\n  var uvs = new Float32Array(gridX1 * gridY1 * 2);\n  var offset = 0;\n  var offset2 = 0;\n\n  for (var iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (var ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices[offset] = x;\n      vertices[offset + 1] = -y;\n      normals[offset + 2] = 1;\n      uvs[offset2] = ix / gridX;\n      uvs[offset2 + 1] = 1 - iy / gridY;\n      offset += 3;\n      offset2 += 2;\n    }\n  }\n\n  offset = 0;\n  var indices = new (vertices.length / 3 > 65535 ? Uint32Array : Uint16Array)(gridX * gridY * 6);\n\n  for (var iy = 0; iy < gridY; iy++) {\n    for (var ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy;\n      indices[offset] = a;\n      indices[offset + 1] = b;\n      indices[offset + 2] = d;\n      indices[offset + 3] = b;\n      indices[offset + 4] = c;\n      indices[offset + 5] = d;\n      offset += 6;\n    }\n  }\n\n  this.addAttribute('index', new THREE.BufferAttribute(indices, 1));\n  this.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n  this.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype); // File:src/extras/geometries/RingGeometry.js\n\n/**\n * @author Kaleb Murphy\n */\n\nTHREE.RingGeometry = function (innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 0;\n  outerRadius = outerRadius || 50;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 8;\n  var i,\n      o,\n      uvs = [],\n      radius = innerRadius,\n      radiusStep = (outerRadius - innerRadius) / phiSegments;\n\n  for (i = 0; i < phiSegments + 1; i++) {\n    // concentric circles inside ring\n    for (o = 0; o < thetaSegments + 1; o++) {\n      // number of segments per circle\n      var vertex = new THREE.Vector3();\n      var segment = thetaStart + o / thetaSegments * thetaLength;\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      this.vertices.push(vertex);\n      uvs.push(new THREE.Vector2((vertex.x / outerRadius + 1) / 2, (vertex.y / outerRadius + 1) / 2));\n    }\n\n    radius += radiusStep;\n  }\n\n  var n = new THREE.Vector3(0, 0, 1);\n\n  for (i = 0; i < phiSegments; i++) {\n    // concentric circles inside ring\n    var thetaSegment = i * (thetaSegments + 1);\n\n    for (o = 0; o < thetaSegments; o++) {\n      // number of segments per circle\n      var segment = o + thetaSegment;\n      var v1 = segment;\n      var v2 = segment + thetaSegments + 1;\n      var v3 = segment + thetaSegments + 2;\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n.clone(), n.clone(), n.clone()]));\n      this.faceVertexUvs[0].push([uvs[v1].clone(), uvs[v2].clone(), uvs[v3].clone()]);\n      v1 = segment;\n      v2 = segment + thetaSegments + 2;\n      v3 = segment + 1;\n      this.faces.push(new THREE.Face3(v1, v2, v3, [n.clone(), n.clone(), n.clone()]));\n      this.faceVertexUvs[0].push([uvs[v1].clone(), uvs[v2].clone(), uvs[v3].clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function (radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  THREE.Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 50;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var x,\n      y,\n      vertices = [],\n      uvs = [];\n\n  for (y = 0; y <= heightSegments; y++) {\n    var verticesRow = [];\n    var uvsRow = [];\n\n    for (x = 0; x <= widthSegments; x++) {\n      var u = x / widthSegments;\n      var v = y / heightSegments;\n      var vertex = new THREE.Vector3();\n      vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n      vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      this.vertices.push(vertex);\n      verticesRow.push(this.vertices.length - 1);\n      uvsRow.push(new THREE.Vector2(u, 1 - v));\n    }\n\n    vertices.push(verticesRow);\n    uvs.push(uvsRow);\n  }\n\n  for (y = 0; y < heightSegments; y++) {\n    for (x = 0; x < widthSegments; x++) {\n      var v1 = vertices[y][x + 1];\n      var v2 = vertices[y][x];\n      var v3 = vertices[y + 1][x];\n      var v4 = vertices[y + 1][x + 1];\n      var n1 = this.vertices[v1].clone().normalize();\n      var n2 = this.vertices[v2].clone().normalize();\n      var n3 = this.vertices[v3].clone().normalize();\n      var n4 = this.vertices[v4].clone().normalize();\n      var uv1 = uvs[y][x + 1].clone();\n      var uv2 = uvs[y][x].clone();\n      var uv3 = uvs[y + 1][x].clone();\n      var uv4 = uvs[y + 1][x + 1].clone();\n\n      if (Math.abs(this.vertices[v1].y) === radius) {\n        uv1.x = (uv1.x + uv2.x) / 2;\n        this.faces.push(new THREE.Face3(v1, v3, v4, [n1, n3, n4]));\n        this.faceVertexUvs[0].push([uv1, uv3, uv4]);\n      } else if (Math.abs(this.vertices[v3].y) === radius) {\n        uv3.x = (uv3.x + uv4.x) / 2;\n        this.faces.push(new THREE.Face3(v1, v2, v3, [n1, n2, n3]));\n        this.faceVertexUvs[0].push([uv1, uv2, uv3]);\n      } else {\n        this.faces.push(new THREE.Face3(v1, v2, v4, [n1, n2, n4]));\n        this.faceVertexUvs[0].push([uv1, uv2, uv4]);\n        this.faces.push(new THREE.Face3(v2, v3, v4, [n2.clone(), n3, n4.clone()]));\n        this.faceVertexUvs[0].push([uv2.clone(), uv3, uv4.clone()]);\n      }\n    }\n  }\n\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n};\n\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/TextGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For creating 3D text geometry in three.js\n *\n * Text = 3D Text\n *\n * parameters = {\n *  size: \t\t\t<float>, \t// size of the text\n *  height: \t\t<float>, \t// thickness to extrude text\n *  curveSegments: \t<int>,\t\t// number of points on the curves\n *\n *  font: \t\t\t<string>,\t\t// font name\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\n *\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\n *  }\n *\n */\n\n/*\tUsage Examples\n\n\t// TextGeometry wrapper\n\n\tvar text3d = new TextGeometry( text, options );\n\n\t// Complete manner\n\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\n\n*/\n\nTHREE.TextGeometry = function (text, parameters) {\n  parameters = parameters || {};\n  var textShapes = THREE.FontUtils.generateShapes(text, parameters); // translate parameters to ExtrudeGeometry API\n\n  parameters.amount = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  THREE.ExtrudeGeometry.call(this, textShapes, parameters);\n  this.type = 'TextGeometry';\n};\n\nTHREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype); // File:src/extras/geometries/TorusGeometry.js\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n */\n\nTHREE.TorusGeometry = function (radius, tube, radialSegments, tubularSegments, arc) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 8;\n  tubularSegments = tubularSegments || 6;\n  arc = arc || Math.PI * 2;\n  var center = new THREE.Vector3(),\n      uvs = [],\n      normals = [];\n\n  for (var j = 0; j <= radialSegments; j++) {\n    for (var i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2;\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      var vertex = new THREE.Vector3();\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      this.vertices.push(vertex);\n      uvs.push(new THREE.Vector2(i / tubularSegments, j / radialSegments));\n      normals.push(vertex.clone().sub(center).normalize());\n    }\n  }\n\n  for (var j = 1; j <= radialSegments; j++) {\n    for (var i = 1; i <= tubularSegments; i++) {\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i;\n      var face = new THREE.Face3(a, b, d, [normals[a].clone(), normals[b].clone(), normals[d].clone()]);\n      this.faces.push(face);\n      this.faceVertexUvs[0].push([uvs[a].clone(), uvs[b].clone(), uvs[d].clone()]);\n      face = new THREE.Face3(b, c, d, [normals[b].clone(), normals[c].clone(), normals[d].clone()]);\n      this.faces.push(face);\n      this.faceVertexUvs[0].push([uvs[b].clone(), uvs[c].clone(), uvs[d].clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n};\n\nTHREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\n * @author oosmoxiecode\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\n */\n\nTHREE.TorusKnotGeometry = function (radius, tube, radialSegments, tubularSegments, p, q, heightScale) {\n  THREE.Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    p: p,\n    q: q,\n    heightScale: heightScale\n  };\n  radius = radius || 100;\n  tube = tube || 40;\n  radialSegments = radialSegments || 64;\n  tubularSegments = tubularSegments || 8;\n  p = p || 2;\n  q = q || 3;\n  heightScale = heightScale || 1;\n  var grid = new Array(radialSegments);\n  var tang = new THREE.Vector3();\n  var n = new THREE.Vector3();\n  var bitan = new THREE.Vector3();\n\n  for (var i = 0; i < radialSegments; ++i) {\n    grid[i] = new Array(tubularSegments);\n    var u = i / radialSegments * 2 * p * Math.PI;\n    var p1 = getPos(u, q, p, radius, heightScale);\n    var p2 = getPos(u + 0.01, q, p, radius, heightScale);\n    tang.subVectors(p2, p1);\n    n.addVectors(p2, p1);\n    bitan.crossVectors(tang, n);\n    n.crossVectors(bitan, tang);\n    bitan.normalize();\n    n.normalize();\n\n    for (var j = 0; j < tubularSegments; ++j) {\n      var v = j / tubularSegments * 2 * Math.PI;\n      var cx = -tube * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      var cy = tube * Math.sin(v);\n      var pos = new THREE.Vector3();\n      pos.x = p1.x + cx * n.x + cy * bitan.x;\n      pos.y = p1.y + cx * n.y + cy * bitan.y;\n      pos.z = p1.z + cx * n.z + cy * bitan.z;\n      grid[i][j] = this.vertices.push(pos) - 1;\n    }\n  }\n\n  for (var i = 0; i < radialSegments; ++i) {\n    for (var j = 0; j < tubularSegments; ++j) {\n      var ip = (i + 1) % radialSegments;\n      var jp = (j + 1) % tubularSegments;\n      var a = grid[i][j];\n      var b = grid[ip][j];\n      var c = grid[ip][jp];\n      var d = grid[i][jp];\n      var uva = new THREE.Vector2(i / radialSegments, j / tubularSegments);\n      var uvb = new THREE.Vector2((i + 1) / radialSegments, j / tubularSegments);\n      var uvc = new THREE.Vector2((i + 1) / radialSegments, (j + 1) / tubularSegments);\n      var uvd = new THREE.Vector2(i / radialSegments, (j + 1) / tubularSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n\n  function getPos(u, in_q, in_p, radius, heightScale) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = in_q / in_p * u;\n    var cs = Math.cos(quOverP);\n    var tx = radius * (2 + cs) * 0.5 * cu;\n    var ty = radius * (2 + cs) * su * 0.5;\n    var tz = heightScale * radius * Math.sin(quOverP) * 0.5;\n    return new THREE.Vector3(tx, ty, tz);\n  }\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/TubeGeometry.js\n\n/**\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n *\n * Modified from the TorusKnotGeometry by @oosmoxiecode\n *\n * Creates a tube which extrudes along a 3d spline\n *\n * Uses parallel transport frames as described in\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n */\n\nTHREE.TubeGeometry = function (path, segments, radius, radialSegments, closed) {\n  THREE.Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    segments: segments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  segments = segments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  var grid = [];\n  var scope = this,\n      tangent,\n      normal,\n      binormal,\n      numpoints = segments + 1,\n      x,\n      y,\n      z,\n      tx,\n      ty,\n      tz,\n      u,\n      v,\n      cx,\n      cy,\n      pos,\n      pos2 = new THREE.Vector3(),\n      i,\n      j,\n      ip,\n      jp,\n      a,\n      b,\n      c,\n      d,\n      uva,\n      uvb,\n      uvc,\n      uvd;\n  var frames = new THREE.TubeGeometry.FrenetFrames(path, segments, closed),\n      tangents = frames.tangents,\n      normals = frames.normals,\n      binormals = frames.binormals; // proxy internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals;\n\n  function vert(x, y, z) {\n    return scope.vertices.push(new THREE.Vector3(x, y, z)) - 1;\n  } // consruct the grid\n\n\n  for (i = 0; i < numpoints; i++) {\n    grid[i] = [];\n    u = i / (numpoints - 1);\n    pos = path.getPointAt(u);\n    tangent = tangents[i];\n    normal = normals[i];\n    binormal = binormals[i];\n\n    for (j = 0; j < radialSegments; j++) {\n      v = j / radialSegments * 2 * Math.PI;\n      cx = -radius * Math.cos(v); // TODO: Hack: Negating it so it faces outside.\n\n      cy = radius * Math.sin(v);\n      pos2.copy(pos);\n      pos2.x += cx * normal.x + cy * binormal.x;\n      pos2.y += cx * normal.y + cy * binormal.y;\n      pos2.z += cx * normal.z + cy * binormal.z;\n      grid[i][j] = vert(pos2.x, pos2.y, pos2.z);\n    }\n  } // construct the mesh\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < radialSegments; j++) {\n      ip = closed ? (i + 1) % segments : i + 1;\n      jp = (j + 1) % radialSegments;\n      a = grid[i][j]; // *** NOT NECESSARILY PLANAR ! ***\n\n      b = grid[ip][j];\n      c = grid[ip][jp];\n      d = grid[i][jp];\n      uva = new THREE.Vector2(i / segments, j / radialSegments);\n      uvb = new THREE.Vector2((i + 1) / segments, j / radialSegments);\n      uvc = new THREE.Vector2((i + 1) / segments, (j + 1) / radialSegments);\n      uvd = new THREE.Vector2(i / segments, (j + 1) / radialSegments);\n      this.faces.push(new THREE.Face3(a, b, d));\n      this.faceVertexUvs[0].push([uva, uvb, uvd]);\n      this.faces.push(new THREE.Face3(b, c, d));\n      this.faceVertexUvs[0].push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  }\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype); // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\nTHREE.TubeGeometry.FrenetFrames = function (path, segments, closed) {\n  var tangent = new THREE.Vector3(),\n      normal = new THREE.Vector3(),\n      binormal = new THREE.Vector3(),\n      tangents = [],\n      normals = [],\n      binormals = [],\n      vec = new THREE.Vector3(),\n      mat = new THREE.Matrix4(),\n      numpoints = segments + 1,\n      theta,\n      epsilon = 0.0001,\n      smallest,\n      tx,\n      ty,\n      tz,\n      i,\n      u,\n      v; // expose internals\n\n  this.tangents = tangents;\n  this.normals = normals;\n  this.binormals = binormals; // compute the tangent vectors for each segment on the path\n\n  for (i = 0; i < numpoints; i++) {\n    u = i / (numpoints - 1);\n    tangents[i] = path.getTangentAt(u);\n    tangents[i].normalize();\n  }\n\n  initialNormal3();\n  /*\n  function initialNormal1(lastBinormal) {\n  \t// fixed start binormal. Has dangers of 0 vectors\n  \tnormals[ 0 ] = new THREE.Vector3();\n  \tbinormals[ 0 ] = new THREE.Vector3();\n  \tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n  \tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n  }\n  \tfunction initialNormal2() {\n  \t\t// This uses the Frenet-Serret formula for deriving binormal\n  \tvar t2 = path.getTangentAt( epsilon );\n  \t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n  \tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n  \t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n  \tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n  \t}\n  */\n\n  function initialNormal3() {\n    // select an initial normal vector perpenicular to the first tangent vector,\n    // and in the direction of the smallest tangent xyz component\n    normals[0] = new THREE.Vector3();\n    binormals[0] = new THREE.Vector3();\n    smallest = Number.MAX_VALUE;\n    tx = Math.abs(tangents[0].x);\n    ty = Math.abs(tangents[0].y);\n    tz = Math.abs(tangents[0].z);\n\n    if (tx <= smallest) {\n      smallest = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= smallest) {\n      smallest = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= smallest) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]);\n  } // compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\n  for (i = 1; i < numpoints; i++) {\n    normals[i] = normals[i - 1].clone();\n    binormals[i] = binormals[i - 1].clone();\n    vec.crossVectors(tangents[i - 1], tangents[i]);\n\n    if (vec.length() > epsilon) {\n      vec.normalize();\n      theta = Math.acos(THREE.Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n      normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n    }\n\n    binormals[i].crossVectors(tangents[i], normals[i]);\n  } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n  if (closed) {\n    theta = Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints - 1]), -1, 1));\n    theta /= numpoints - 1;\n\n    if (tangents[0].dot(vec.crossVectors(normals[0], normals[numpoints - 1])) > 0) {\n      theta = -theta;\n    }\n\n    for (i = 1; i < numpoints; i++) {\n      // twist a little...\n      normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    }\n  }\n}; // File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n*/\n\n\nTHREE.PolyhedronGeometry = function (vertices, indices, radius, detail) {\n  THREE.Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0;\n  var that = this;\n\n  for (var i = 0, l = vertices.length; i < l; i += 3) {\n    prepare(new THREE.Vector3(vertices[i], vertices[i + 1], vertices[i + 2]));\n  }\n\n  var midpoints = [],\n      p = this.vertices;\n  var faces = [];\n\n  for (var i = 0, j = 0, l = indices.length; i < l; i += 3, j++) {\n    var v1 = p[indices[i]];\n    var v2 = p[indices[i + 1]];\n    var v3 = p[indices[i + 2]];\n    faces[j] = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()]);\n  }\n\n  var centroid = new THREE.Vector3();\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    subdivide(faces[i], detail);\n  } // Handle case when face straddles the seam\n\n\n  for (var i = 0, l = this.faceVertexUvs[0].length; i < l; i++) {\n    var uvs = this.faceVertexUvs[0][i];\n    var x0 = uvs[0].x;\n    var x1 = uvs[1].x;\n    var x2 = uvs[2].x;\n    var max = Math.max(x0, Math.max(x1, x2));\n    var min = Math.min(x0, Math.min(x1, x2));\n\n    if (max > 0.9 && min < 0.1) {\n      // 0.9 is somewhat arbitrary\n      if (x0 < 0.2) uvs[0].x += 1;\n      if (x1 < 0.2) uvs[1].x += 1;\n      if (x2 < 0.2) uvs[2].x += 1;\n    }\n  } // Apply radius\n\n\n  for (var i = 0, l = this.vertices.length; i < l; i++) {\n    this.vertices[i].multiplyScalar(radius);\n  } // Merge vertices\n\n\n  this.mergeVertices();\n  this.computeFaceNormals();\n  this.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius); // Project vector onto sphere's surface\n\n  function prepare(vector) {\n    var vertex = vector.normalize().clone();\n    vertex.index = that.vertices.push(vertex) - 1; // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    var u = azimuth(vector) / 2 / Math.PI + 0.5;\n    var v = inclination(vector) / Math.PI + 0.5;\n    vertex.uv = new THREE.Vector2(u, 1 - v);\n    return vertex;\n  } // Approximate a curved face with recursively sub-divided triangles.\n\n\n  function make(v1, v2, v3) {\n    var face = new THREE.Face3(v1.index, v2.index, v3.index, [v1.clone(), v2.clone(), v3.clone()]);\n    that.faces.push(face);\n    centroid.copy(v1).add(v2).add(v3).divideScalar(3);\n    var azi = azimuth(centroid);\n    that.faceVertexUvs[0].push([correctUV(v1.uv, v1, azi), correctUV(v2.uv, v2, azi), correctUV(v3.uv, v3, azi)]);\n  } // Analytically subdivide a face to the required detail level.\n\n\n  function subdivide(face, detail) {\n    var cols = Math.pow(2, detail);\n    var cells = Math.pow(4, detail);\n    var a = prepare(that.vertices[face.a]);\n    var b = prepare(that.vertices[face.b]);\n    var c = prepare(that.vertices[face.c]);\n    var v = []; // Construct all of the vertices for this subdivision.\n\n    for (var i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = prepare(a.clone().lerp(c, i / cols));\n      var bj = prepare(b.clone().lerp(c, i / cols));\n      var rows = cols - i;\n\n      for (var j = 0; j <= rows; j++) {\n        if (j == 0 && i == cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = prepare(aj.clone().lerp(bj, j / rows));\n        }\n      }\n    } // Construct all of the faces.\n\n\n    for (var i = 0; i < cols; i++) {\n      for (var j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 == 0) {\n          make(v[i][k + 1], v[i + 1][k], v[i][k]);\n        } else {\n          make(v[i][k + 1], v[i + 1][k + 1], v[i + 1][k]);\n        }\n      }\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  } // Texture fixing helper. Spheres have some odd behaviours.\n\n\n  function correctUV(uv, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) uv = new THREE.Vector2(uv.x - 1, uv.y);\n    if (vector.x === 0 && vector.z === 0) uv = new THREE.Vector2(azimuth / 2 / Math.PI + 0.5, uv.y);\n    return uv.clone();\n  }\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\n * @author Abe Pazos / https://hamoid.com\n */\n\nTHREE.DodecahedronGeometry = function (radius, detail) {\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.IcosahedronGeometry = function (radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/OctahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.OctahedronGeometry = function (radius, detail) {\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.TetrahedronGeometry = function (radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  THREE.PolyhedronGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/geometries/ParametricGeometry.js\n\n/**\n * @author zz85 / https://github.com/zz85\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n *\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n *\n */\n\nTHREE.ParametricGeometry = function (func, slices, stacks) {\n  THREE.Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  var verts = this.vertices;\n  var faces = this.faces;\n  var uvs = this.faceVertexUvs[0];\n  var i, il, j, p;\n  var u, v;\n  var stackCount = stacks + 1;\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      u = j / slices;\n      p = func(u, v);\n      verts.push(p);\n    }\n  }\n\n  var a, b, c, d;\n  var uva, uvb, uvc, uvd;\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      a = i * sliceCount + j;\n      b = i * sliceCount + j + 1;\n      c = (i + 1) * sliceCount + j + 1;\n      d = (i + 1) * sliceCount + j;\n      uva = new THREE.Vector2(j / slices, i / stacks);\n      uvb = new THREE.Vector2((j + 1) / slices, i / stacks);\n      uvc = new THREE.Vector2((j + 1) / slices, (i + 1) / stacks);\n      uvd = new THREE.Vector2(j / slices, (i + 1) / stacks);\n      faces.push(new THREE.Face3(a, b, d));\n      uvs.push([uva, uvb, uvd]);\n      faces.push(new THREE.Face3(b, c, d));\n      uvs.push([uvb.clone(), uvc, uvd.clone()]);\n    }\n  } // console.log(this);\n  // magic bullet\n  // var diff = this.mergeVertices();\n  // console.log('removed ', diff, ' vertices by merging');\n\n\n  this.computeFaceNormals();\n  this.computeVertexNormals();\n};\n\nTHREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype); // File:src/extras/helpers/AxisHelper.js\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AxisHelper = function (size) {\n  size = size || 1;\n  var vertices = new Float32Array([0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size]);\n  var colors = new Float32Array([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1]);\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  THREE.Line.call(this, geometry, material, THREE.LinePieces);\n};\n\nTHREE.AxisHelper.prototype = Object.create(THREE.Line.prototype); // File:src/extras/helpers/ArrowHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://exocortex.com\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nTHREE.ArrowHelper = function () {\n  var lineGeometry = new THREE.Geometry();\n  lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n  var coneGeometry = new THREE.CylinderGeometry(0, 0.5, 1, 5, 1);\n  coneGeometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, -0.5, 0));\n  return function (dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    THREE.Object3D.call(this);\n    if (color === undefined) color = 0xffff00;\n    if (length === undefined) length = 1;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.position.copy(origin);\n    this.line = new THREE.Line(lineGeometry, new THREE.LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  };\n}();\n\nTHREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.ArrowHelper.prototype.setDirection = function () {\n  var axis = new THREE.Vector3();\n  var radians;\n  return function (dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nTHREE.ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n  this.line.scale.set(1, length, 1);\n  this.line.updateMatrix();\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nTHREE.ArrowHelper.prototype.setColor = function (color) {\n  this.line.material.color.set(color);\n  this.cone.material.color.set(color);\n}; // File:src/extras/helpers/BoxHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.BoxHelper = function (object) {\n  var geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(72), 3));\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: 0xffff00\n  }), THREE.LinePieces);\n\n  if (object !== undefined) {\n    this.update(object);\n  }\n};\n\nTHREE.BoxHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.BoxHelper.prototype.update = function (object) {\n  var geometry = object.geometry;\n\n  if (geometry.boundingBox === null) {\n    geometry.computeBoundingBox();\n  }\n\n  var min = geometry.boundingBox.min;\n  var max = geometry.boundingBox.max;\n  /*\n    5____4\n  1/___0/|\n  | 6__|_7\n  2/___3/\n  \t0: max.x, max.y, max.z\n  1: min.x, max.y, max.z\n  2: min.x, min.y, max.z\n  3: max.x, min.y, max.z\n  4: max.x, max.y, min.z\n  5: min.x, max.y, min.z\n  6: min.x, min.y, min.z\n  7: max.x, min.y, min.z\n  */\n\n  var vertices = this.geometry.attributes.position.array;\n  vertices[0] = max.x;\n  vertices[1] = max.y;\n  vertices[2] = max.z;\n  vertices[3] = min.x;\n  vertices[4] = max.y;\n  vertices[5] = max.z;\n  vertices[6] = min.x;\n  vertices[7] = max.y;\n  vertices[8] = max.z;\n  vertices[9] = min.x;\n  vertices[10] = min.y;\n  vertices[11] = max.z;\n  vertices[12] = min.x;\n  vertices[13] = min.y;\n  vertices[14] = max.z;\n  vertices[15] = max.x;\n  vertices[16] = min.y;\n  vertices[17] = max.z;\n  vertices[18] = max.x;\n  vertices[19] = min.y;\n  vertices[20] = max.z;\n  vertices[21] = max.x;\n  vertices[22] = max.y;\n  vertices[23] = max.z; //\n\n  vertices[24] = max.x;\n  vertices[25] = max.y;\n  vertices[26] = min.z;\n  vertices[27] = min.x;\n  vertices[28] = max.y;\n  vertices[29] = min.z;\n  vertices[30] = min.x;\n  vertices[31] = max.y;\n  vertices[32] = min.z;\n  vertices[33] = min.x;\n  vertices[34] = min.y;\n  vertices[35] = min.z;\n  vertices[36] = min.x;\n  vertices[37] = min.y;\n  vertices[38] = min.z;\n  vertices[39] = max.x;\n  vertices[40] = min.y;\n  vertices[41] = min.z;\n  vertices[42] = max.x;\n  vertices[43] = min.y;\n  vertices[44] = min.z;\n  vertices[45] = max.x;\n  vertices[46] = max.y;\n  vertices[47] = min.z; //\n\n  vertices[48] = max.x;\n  vertices[49] = max.y;\n  vertices[50] = max.z;\n  vertices[51] = max.x;\n  vertices[52] = max.y;\n  vertices[53] = min.z;\n  vertices[54] = min.x;\n  vertices[55] = max.y;\n  vertices[56] = max.z;\n  vertices[57] = min.x;\n  vertices[58] = max.y;\n  vertices[59] = min.z;\n  vertices[60] = min.x;\n  vertices[61] = min.y;\n  vertices[62] = max.z;\n  vertices[63] = min.x;\n  vertices[64] = min.y;\n  vertices[65] = min.z;\n  vertices[66] = max.x;\n  vertices[67] = min.y;\n  vertices[68] = max.z;\n  vertices[69] = max.x;\n  vertices[70] = min.y;\n  vertices[71] = min.z;\n  this.geometry.attributes.position.needsUpdate = true;\n  this.geometry.computeBoundingSphere();\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n}; // File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n// a helper to show the world-axis-aligned bounding box for an object\n\n\nTHREE.BoundingBoxHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0x888888;\n  this.object = object;\n  this.box = new THREE.Box3();\n  THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n    color: color,\n    wireframe: true\n  }));\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n  this.box.setFromObject(this.object);\n  this.box.size(this.scale);\n  this.box.center(this.position);\n}; // File:src/extras/helpers/CameraHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\n\nTHREE.CameraHelper = function (camera) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: THREE.FaceColors\n  });\n  var pointMap = {}; // colors\n\n  var hexFrustum = 0xffaa00;\n  var hexCone = 0xff0000;\n  var hexUp = 0x00aaff;\n  var hexTarget = 0xffffff;\n  var hexCross = 0x333333; // near\n\n  addLine(\"n1\", \"n2\", hexFrustum);\n  addLine(\"n2\", \"n4\", hexFrustum);\n  addLine(\"n4\", \"n3\", hexFrustum);\n  addLine(\"n3\", \"n1\", hexFrustum); // far\n\n  addLine(\"f1\", \"f2\", hexFrustum);\n  addLine(\"f2\", \"f4\", hexFrustum);\n  addLine(\"f4\", \"f3\", hexFrustum);\n  addLine(\"f3\", \"f1\", hexFrustum); // sides\n\n  addLine(\"n1\", \"f1\", hexFrustum);\n  addLine(\"n2\", \"f2\", hexFrustum);\n  addLine(\"n3\", \"f3\", hexFrustum);\n  addLine(\"n4\", \"f4\", hexFrustum); // cone\n\n  addLine(\"p\", \"n1\", hexCone);\n  addLine(\"p\", \"n2\", hexCone);\n  addLine(\"p\", \"n3\", hexCone);\n  addLine(\"p\", \"n4\", hexCone); // up\n\n  addLine(\"u1\", \"u2\", hexUp);\n  addLine(\"u2\", \"u3\", hexUp);\n  addLine(\"u3\", \"u1\", hexUp); // target\n\n  addLine(\"c\", \"t\", hexTarget);\n  addLine(\"p\", \"c\", hexCross); // cross\n\n  addLine(\"cn1\", \"cn2\", hexCross);\n  addLine(\"cn3\", \"cn4\", hexCross);\n  addLine(\"cf1\", \"cf2\", hexCross);\n  addLine(\"cf3\", \"cf4\", hexCross);\n\n  function addLine(a, b, hex) {\n    addPoint(a, hex);\n    addPoint(b, hex);\n  }\n\n  function addPoint(id, hex) {\n    geometry.vertices.push(new THREE.Vector3());\n    geometry.colors.push(new THREE.Color(hex));\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(geometry.vertices.length - 1);\n  }\n\n  THREE.Line.call(this, geometry, material, THREE.LinePieces);\n  this.camera = camera;\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n};\n\nTHREE.CameraHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.CameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new THREE.Vector3();\n  var camera = new THREE.Camera();\n\n  var setPoint = function (point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      for (var i = 0, il = points.length; i < il; i++) {\n        geometry.vertices[points[i]].copy(vector);\n      }\n    }\n  };\n\n  return function () {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint(\"c\", 0, 0, -1);\n    setPoint(\"t\", 0, 0, 1); // near\n\n    setPoint(\"n1\", -w, -h, -1);\n    setPoint(\"n2\", w, -h, -1);\n    setPoint(\"n3\", -w, h, -1);\n    setPoint(\"n4\", w, h, -1); // far\n\n    setPoint(\"f1\", -w, -h, 1);\n    setPoint(\"f2\", w, -h, 1);\n    setPoint(\"f3\", -w, h, 1);\n    setPoint(\"f4\", w, h, 1); // up\n\n    setPoint(\"u1\", w * 0.7, h * 1.1, -1);\n    setPoint(\"u2\", -w * 0.7, h * 1.1, -1);\n    setPoint(\"u3\", 0, h * 2, -1); // cross\n\n    setPoint(\"cf1\", -w, 0, 1);\n    setPoint(\"cf2\", w, 0, 1);\n    setPoint(\"cf3\", 0, -h, 1);\n    setPoint(\"cf4\", 0, h, 1);\n    setPoint(\"cn1\", -w, 0, -1);\n    setPoint(\"cn2\", w, 0, -1);\n    setPoint(\"cn3\", 0, -h, -1);\n    setPoint(\"cn4\", 0, h, -1);\n    geometry.verticesNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nTHREE.DirectionalLightHelper = function (light, size) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  size = size || 1;\n  var geometry = new THREE.Geometry();\n  geometry.vertices.push(new THREE.Vector3(-size, size, 0), new THREE.Vector3(size, size, 0), new THREE.Vector3(size, -size, 0), new THREE.Vector3(-size, -size, 0), new THREE.Vector3(-size, size, 0));\n  var material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  this.lightPlane = new THREE.Line(geometry, material);\n  this.add(this.lightPlane);\n  geometry = new THREE.Geometry();\n  geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3());\n  material = new THREE.LineBasicMaterial({\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  this.targetLine = new THREE.Line(geometry, material);\n  this.add(this.targetLine);\n  this.update();\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n  var v1 = new THREE.Vector3();\n  var v2 = new THREE.Vector3();\n  var v3 = new THREE.Vector3();\n  return function () {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    this.lightPlane.lookAt(v3);\n    this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.targetLine.geometry.vertices[1].copy(v3);\n    this.targetLine.geometry.verticesNeedUpdate = true;\n    this.targetLine.material.color.copy(this.lightPlane.material.color);\n  };\n}(); // File:src/extras/helpers/EdgesHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nTHREE.EdgesHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  var edge = [0, 0],\n      hash = {};\n\n  var sortFunction = function (a, b) {\n    return a - b;\n  };\n\n  var keys = ['a', 'b', 'c'];\n  var geometry = new THREE.BufferGeometry();\n  var geometry2 = object.geometry.clone();\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var vertices = geometry2.vertices;\n  var faces = geometry2.faces;\n  var numEdges = 0;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge[0] = face[keys[j]];\n      edge[1] = face[keys[(j + 1) % 3]];\n      edge.sort(sortFunction);\n      var key = edge.toString();\n\n      if (hash[key] === undefined) {\n        hash[key] = {\n          vert1: edge[0],\n          vert2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n        numEdges++;\n      } else {\n        hash[key].face2 = i;\n      }\n    }\n  }\n\n  var coords = new Float32Array(numEdges * 2 * 3);\n  var index = 0;\n\n  for (var key in hash) {\n    var h = hash[key];\n\n    if (h.face2 === undefined || faces[h.face1].normal.dot(faces[h.face2].normal) < 0.9999) {\n      // hardwired const OK\n      var vertex = vertices[h.vert1];\n      coords[index++] = vertex.x;\n      coords[index++] = vertex.y;\n      coords[index++] = vertex.z;\n      vertex = vertices[h.vert2];\n      coords[index++] = vertex.x;\n      coords[index++] = vertex.y;\n      coords[index++] = vertex.z;\n    }\n  }\n\n  geometry.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color\n  }), THREE.LinePieces);\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.EdgesHelper.prototype = Object.create(THREE.Line.prototype); // File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.FaceNormalsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1;\n  var geometry = new THREE.Geometry();\n  var faces = this.object.geometry.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3());\n  }\n\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  }), THREE.LinePieces);\n  this.matrixAutoUpdate = false;\n  this.normalMatrix = new THREE.Matrix3();\n  this.update();\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n  var vertices = this.geometry.vertices;\n  var object = this.object;\n  var objectVertices = object.geometry.vertices;\n  var objectFaces = object.geometry.faces;\n  var objectWorldMatrix = object.matrixWorld;\n  object.updateMatrixWorld(true);\n  this.normalMatrix.getNormalMatrix(objectWorldMatrix);\n\n  for (var i = 0, i2 = 0, l = objectFaces.length; i < l; i++, i2 += 2) {\n    var face = objectFaces[i];\n    vertices[i2].copy(objectVertices[face.a]).add(objectVertices[face.b]).add(objectVertices[face.c]).divideScalar(3).applyMatrix4(objectWorldMatrix);\n    vertices[i2 + 1].copy(face.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(vertices[i2]);\n  }\n\n  this.geometry.verticesNeedUpdate = true;\n  return this;\n}; // File:src/extras/helpers/GridHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.GridHelper = function (size, step) {\n  var geometry = new THREE.Geometry();\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors\n  });\n  this.color1 = new THREE.Color(0x444444);\n  this.color2 = new THREE.Color(0x888888);\n\n  for (var i = -size; i <= size; i += step) {\n    geometry.vertices.push(new THREE.Vector3(-size, 0, i), new THREE.Vector3(size, 0, i), new THREE.Vector3(i, 0, -size), new THREE.Vector3(i, 0, size));\n    var color = i === 0 ? this.color1 : this.color2;\n    geometry.colors.push(color, color, color, color);\n  }\n\n  THREE.Line.call(this, geometry, material, THREE.LinePieces);\n};\n\nTHREE.GridHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.GridHelper.prototype.setColors = function (colorCenterLine, colorGrid) {\n  this.color1.set(colorCenterLine);\n  this.color2.set(colorGrid);\n  this.geometry.colorsNeedUpdate = true;\n}; // File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.HemisphereLightHelper = function (light, sphereSize, arrowLength, domeSize) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.colors = [new THREE.Color(), new THREE.Color()];\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  geometry.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\n\n  for (var i = 0, il = 8; i < il; i++) {\n    geometry.faces[i].color = this.colors[i < 4 ? 0 : 1];\n  }\n\n  var material = new THREE.MeshBasicMaterial({\n    vertexColors: THREE.FaceColors,\n    wireframe: true\n  });\n  this.lightSphere = new THREE.Mesh(geometry, material);\n  this.add(this.lightSphere);\n  this.update();\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n  this.lightSphere.geometry.dispose();\n  this.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  return function () {\n    this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n    this.lightSphere.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    this.lightSphere.geometry.colorsNeedUpdate = true;\n  };\n}(); // File:src/extras/helpers/PointLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.PointLightHelper = function (light, sphereSize) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  var geometry = new THREE.SphereGeometry(sphereSize, 4, 2);\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  THREE.Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  /*\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n  \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n  \tvar d = light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  \tthis.add( this.lightDistance );\n  */\n};\n\nTHREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n  this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  /*\n  var d = this.light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.visible = true;\n  \tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  */\n}; // File:src/extras/helpers/SkeletonHelper.js\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n */\n\n\nTHREE.SkeletonHelper = function (object) {\n  this.bones = this.getBoneList(object);\n  var geometry = new THREE.Geometry();\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.colors.push(new THREE.Color(0, 0, 1));\n      geometry.colors.push(new THREE.Color(0, 1, 0));\n    }\n  }\n\n  var material = new THREE.LineBasicMaterial({\n    vertexColors: THREE.VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  THREE.Line.call(this, geometry, material, THREE.LinePieces);\n  this.root = object;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.SkeletonHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.SkeletonHelper.prototype.getBoneList = function (object) {\n  var boneList = [];\n\n  if (object instanceof THREE.Bone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, this.getBoneList(object.children[i]));\n  }\n\n  return boneList;\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n  var geometry = this.geometry;\n  var matrixWorldInv = new THREE.Matrix4().getInverse(this.root.matrixWorld);\n  var boneMatrix = new THREE.Matrix4();\n  var j = 0;\n\n  for (var i = 0; i < this.bones.length; i++) {\n    var bone = this.bones[i];\n\n    if (bone.parent instanceof THREE.Bone) {\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n      geometry.vertices[j].setFromMatrixPosition(boneMatrix);\n      boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n      geometry.vertices[j + 1].setFromMatrixPosition(boneMatrix);\n      j += 2;\n    }\n  }\n\n  geometry.verticesNeedUpdate = true;\n  geometry.computeBoundingSphere();\n}; // File:src/extras/helpers/SpotLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\n\nTHREE.SpotLightHelper = function (light) {\n  THREE.Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  var geometry = new THREE.CylinderGeometry(0, 1, 1, 8, 1, true);\n  geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, -0.5, 0));\n  geometry.applyMatrix(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\n  var material = new THREE.MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  this.cone = new THREE.Mesh(geometry, material);\n  this.add(this.cone);\n  this.update();\n};\n\nTHREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n  var vector = new THREE.Vector3();\n  var vector2 = new THREE.Vector3();\n  return function () {\n    var coneLength = this.light.distance ? this.light.distance : 10000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n    this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n  };\n}(); // File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\n\nTHREE.VertexNormalsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1;\n  var geometry = new THREE.Geometry();\n  var vertices = object.geometry.vertices;\n  var faces = object.geometry.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n      geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3());\n    }\n  }\n\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  }), THREE.LinePieces);\n  this.matrixAutoUpdate = false;\n  this.normalMatrix = new THREE.Matrix3();\n  this.update();\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.VertexNormalsHelper.prototype.update = function (object) {\n  var v1 = new THREE.Vector3();\n  return function (object) {\n    var keys = ['a', 'b', 'c', 'd'];\n    this.object.updateMatrixWorld(true);\n    this.normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var vertices = this.geometry.vertices;\n    var verts = this.object.geometry.vertices;\n    var faces = this.object.geometry.faces;\n    var worldMatrix = this.object.matrixWorld;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        var vertexId = face[keys[j]];\n        var vertex = verts[vertexId];\n        var normal = face.vertexNormals[j];\n        vertices[idx].copy(vertex).applyMatrix4(worldMatrix);\n        v1.copy(normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);\n        v1.add(vertices[idx]);\n        idx = idx + 1;\n        vertices[idx].copy(v1);\n        idx = idx + 1;\n      }\n    }\n\n    this.geometry.verticesNeedUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/VertexTangentsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\n\nTHREE.VertexTangentsHelper = function (object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0x0000ff;\n  var width = linewidth !== undefined ? linewidth : 1;\n  var geometry = new THREE.Geometry();\n  var vertices = object.geometry.vertices;\n  var faces = object.geometry.faces;\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0, jl = face.vertexTangents.length; j < jl; j++) {\n      geometry.vertices.push(new THREE.Vector3());\n      geometry.vertices.push(new THREE.Vector3());\n    }\n  }\n\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color,\n    linewidth: width\n  }), THREE.LinePieces);\n  this.matrixAutoUpdate = false;\n  this.update();\n};\n\nTHREE.VertexTangentsHelper.prototype = Object.create(THREE.Line.prototype);\n\nTHREE.VertexTangentsHelper.prototype.update = function (object) {\n  var v1 = new THREE.Vector3();\n  return function (object) {\n    var keys = ['a', 'b', 'c', 'd'];\n    this.object.updateMatrixWorld(true);\n    var vertices = this.geometry.vertices;\n    var verts = this.object.geometry.vertices;\n    var faces = this.object.geometry.faces;\n    var worldMatrix = this.object.matrixWorld;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0, jl = face.vertexTangents.length; j < jl; j++) {\n        var vertexId = face[keys[j]];\n        var vertex = verts[vertexId];\n        var tangent = face.vertexTangents[j];\n        vertices[idx].copy(vertex).applyMatrix4(worldMatrix);\n        v1.copy(tangent).transformDirection(worldMatrix).multiplyScalar(this.size);\n        v1.add(vertices[idx]);\n        idx = idx + 1;\n        vertices[idx].copy(v1);\n        idx = idx + 1;\n      }\n    }\n\n    this.geometry.verticesNeedUpdate = true;\n    return this;\n  };\n}(); // File:src/extras/helpers/WireframeHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.WireframeHelper = function (object, hex) {\n  var color = hex !== undefined ? hex : 0xffffff;\n  var edge = [0, 0],\n      hash = {};\n\n  var sortFunction = function (a, b) {\n    return a - b;\n  };\n\n  var keys = ['a', 'b', 'c'];\n  var geometry = new THREE.BufferGeometry();\n\n  if (object.geometry instanceof THREE.Geometry) {\n    var vertices = object.geometry.vertices;\n    var faces = object.geometry.faces;\n    var numEdges = 0; // allocate maximal size\n\n    var edges = new Uint32Array(6 * faces.length);\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge[0] = face[keys[j]];\n        edge[1] = face[keys[(j + 1) % 3]];\n        edge.sort(sortFunction);\n        var key = edge.toString();\n\n        if (hash[key] === undefined) {\n          edges[2 * numEdges] = edge[0];\n          edges[2 * numEdges + 1] = edge[1];\n          hash[key] = true;\n          numEdges++;\n        }\n      }\n    }\n\n    var coords = new Float32Array(numEdges * 2 * 3);\n\n    for (var i = 0, l = numEdges; i < l; i++) {\n      for (var j = 0; j < 2; j++) {\n        var vertex = vertices[edges[2 * i + j]];\n        var index = 6 * i + 3 * j;\n        coords[index + 0] = vertex.x;\n        coords[index + 1] = vertex.y;\n        coords[index + 2] = vertex.z;\n      }\n    }\n\n    geometry.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n  } else if (object.geometry instanceof THREE.BufferGeometry) {\n    if (object.geometry.attributes.index !== undefined) {\n      // Indexed BufferGeometry\n      var vertices = object.geometry.attributes.position.array;\n      var indices = object.geometry.attributes.index.array;\n      var drawcalls = object.geometry.drawcalls;\n      var numEdges = 0;\n\n      if (drawcalls.length === 0) {\n        drawcalls = [{\n          count: indices.length,\n          index: 0,\n          start: 0\n        }];\n      } // allocate maximal size\n\n\n      var edges = new Uint32Array(2 * indices.length);\n\n      for (var o = 0, ol = drawcalls.length; o < ol; ++o) {\n        var start = drawcalls[o].start;\n        var count = drawcalls[o].count;\n        var index = drawcalls[o].index;\n\n        for (var i = start, il = start + count; i < il; i += 3) {\n          for (var j = 0; j < 3; j++) {\n            edge[0] = index + indices[i + j];\n            edge[1] = index + indices[i + (j + 1) % 3];\n            edge.sort(sortFunction);\n            var key = edge.toString();\n\n            if (hash[key] === undefined) {\n              edges[2 * numEdges] = edge[0];\n              edges[2 * numEdges + 1] = edge[1];\n              hash[key] = true;\n              numEdges++;\n            }\n          }\n        }\n      }\n\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numEdges; i < l; i++) {\n        for (var j = 0; j < 2; j++) {\n          var index = 6 * i + 3 * j;\n          var index2 = 3 * edges[2 * i + j];\n          coords[index + 0] = vertices[index2];\n          coords[index + 1] = vertices[index2 + 1];\n          coords[index + 2] = vertices[index2 + 2];\n        }\n      }\n\n      geometry.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    } else {\n      // non-indexed BufferGeometry\n      var vertices = object.geometry.attributes.position.array;\n      var numEdges = vertices.length / 3;\n      var numTris = numEdges / 3;\n      var coords = new Float32Array(numEdges * 2 * 3);\n\n      for (var i = 0, l = numTris; i < l; i++) {\n        for (var j = 0; j < 3; j++) {\n          var index = 18 * i + 6 * j;\n          var index1 = 9 * i + 3 * j;\n          coords[index + 0] = vertices[index1];\n          coords[index + 1] = vertices[index1 + 1];\n          coords[index + 2] = vertices[index1 + 2];\n          var index2 = 9 * i + 3 * ((j + 1) % 3);\n          coords[index + 3] = vertices[index2];\n          coords[index + 4] = vertices[index2 + 1];\n          coords[index + 5] = vertices[index2 + 2];\n        }\n      }\n\n      geometry.addAttribute('position', new THREE.BufferAttribute(coords, 3));\n    }\n  }\n\n  THREE.Line.call(this, geometry, new THREE.LineBasicMaterial({\n    color: color\n  }), THREE.LinePieces);\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n};\n\nTHREE.WireframeHelper.prototype = Object.create(THREE.Line.prototype); // File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ImmediateRenderObject = function () {\n  THREE.Object3D.call(this);\n\n  this.render = function (renderCallback) {};\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype); // File:src/extras/objects/MorphBlendMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphBlendMesh = function (geometry, material) {\n  THREE.Mesh.call(this, geometry, material);\n  this.animationsMap = {};\n  this.animationsList = []; // prepare default animation\n  // (all frames played together in 1 second)\n\n  var numFrames = this.geometry.morphTargets.length;\n  var name = \"__default\";\n  var startFrame = 0;\n  var endFrame = numFrames - 1;\n  var fps = numFrames / 1;\n  this.createAnimation(name, startFrame, endFrame, fps);\n  this.setAnimationWeight(name, 1);\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function (name, start, end, fps) {\n  var animation = {\n    startFrame: start,\n    endFrame: end,\n    length: end - start + 1,\n    fps: fps,\n    duration: (end - start) / fps,\n    lastFrame: 0,\n    currentFrame: 0,\n    active: false,\n    time: 0,\n    direction: 1,\n    weight: 1,\n    directionBackwards: false,\n    mirroredLoop: false\n  };\n  this.animationsMap[name] = animation;\n  this.animationsList.push(animation);\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function (fps) {\n  var pattern = /([a-z]+)_?(\\d+)/;\n  var firstAnimation,\n      frameRanges = {};\n  var geometry = this.geometry;\n\n  for (var i = 0, il = geometry.morphTargets.length; i < il; i++) {\n    var morph = geometry.morphTargets[i];\n    var chunks = morph.name.match(pattern);\n\n    if (chunks && chunks.length > 1) {\n      var name = chunks[1];\n      var num = chunks[2];\n      if (!frameRanges[name]) frameRanges[name] = {\n        start: Infinity,\n        end: -Infinity\n      };\n      var range = frameRanges[name];\n      if (i < range.start) range.start = i;\n      if (i > range.end) range.end = i;\n      if (!firstAnimation) firstAnimation = name;\n    }\n  }\n\n  for (var name in frameRanges) {\n    var range = frameRanges[name];\n    this.createAnimation(name, range.start, range.end, fps);\n  }\n\n  this.firstAnimation = firstAnimation;\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = 1;\n    animation.directionBackwards = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.direction = -1;\n    animation.directionBackwards = true;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function (name, fps) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.fps = fps;\n    animation.duration = (animation.end - animation.start) / animation.fps;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function (name, duration) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.duration = duration;\n    animation.fps = (animation.end - animation.start) / animation.duration;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function (name, weight) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.weight = weight;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function (name, time) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = time;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function (name) {\n  var time = 0;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    time = animation.time;\n  }\n\n  return time;\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function (name) {\n  var duration = -1;\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    duration = animation.duration;\n  }\n\n  return duration;\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.time = 0;\n    animation.active = true;\n  } else {\n    console.warn(\"animation[\" + name + \"] undefined\");\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function (name) {\n  var animation = this.animationsMap[name];\n\n  if (animation) {\n    animation.active = false;\n  }\n};\n\nTHREE.MorphBlendMesh.prototype.update = function (delta) {\n  for (var i = 0, il = this.animationsList.length; i < il; i++) {\n    var animation = this.animationsList[i];\n    if (!animation.active) continue;\n    var frameTime = animation.duration / animation.length;\n    animation.time += animation.direction * delta;\n\n    if (animation.mirroredLoop) {\n      if (animation.time > animation.duration || animation.time < 0) {\n        animation.direction *= -1;\n\n        if (animation.time > animation.duration) {\n          animation.time = animation.duration;\n          animation.directionBackwards = true;\n        }\n\n        if (animation.time < 0) {\n          animation.time = 0;\n          animation.directionBackwards = false;\n        }\n      }\n    } else {\n      animation.time = animation.time % animation.duration;\n      if (animation.time < 0) animation.time += animation.duration;\n    }\n\n    var keyframe = animation.startFrame + THREE.Math.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n    var weight = animation.weight;\n\n    if (keyframe !== animation.currentFrame) {\n      this.morphTargetInfluences[animation.lastFrame] = 0;\n      this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n      this.morphTargetInfluences[keyframe] = 0;\n      animation.lastFrame = animation.currentFrame;\n      animation.currentFrame = keyframe;\n    }\n\n    var mix = animation.time % frameTime / frameTime;\n    if (animation.directionBackwards) mix = 1 - mix;\n    this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n    this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n  }\n}; // Export the THREE object for **Node.js**, with\n// backwards-compatibility for the old `require()` API. If we're in\n// the browser, add `_` as a global object via a string identifier,\n// for Closure Compiler \"advanced\" mode.\n\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    exports = module.exports = THREE;\n  }\n\n  exports.THREE = THREE;\n} else {\n  this['THREE'] = THREE;\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/node_modules/three/three.js"],"names":["self","THREE","REVISION","module","exports","Math","sign","undefined","x","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","SphericalReflectionMapping","SphericalRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Color","color","arguments","length","setRGB","set","prototype","constructor","r","g","b","value","copy","setHex","setStyle","hex","floor","setHSL","h","s","l","hue2rgb","p","q","t","style","test","exec","min","parseInt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","sqrt","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","toString","slice","getHSL","optionalTarget","hsl","max","hue","saturation","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","c","fromArray","array","toArray","clone","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","console","warn","multiplyQuaternions","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","vector","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","offset","onChange","callback","qa","qm","Vector2","setX","setY","setComponent","index","getComponent","addVectors","sub","subVectors","divide","divideScalar","scalar","invScalar","clamp","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","setZ","multiplyVectors","applyEuler","error","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","project","matrix","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","lengthManhattan","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","PI","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","atan2","setFromQuaternion","sqx","sqy","sqz","sqw","reorder","newOrder","Line3","start","end","line","center","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","size","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","positions","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","determinant","f","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","makeRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","target","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","tan","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToSegment","v0","optionalPointOnRay","optionalPointOnSegment","segCenter","segDir","segExtent","diff","a01","b0","b1","s0","sqrDist","extDet","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","split","uuid","Array","rnd","random","join","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","Spline","v3","intPoint","weight","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","k","interpolate","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","linearDistance","realDistance","sampling","newpoints","sl","push","t2","t3","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","now","Date","stop","getElapsedTime","getDelta","newTime","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","listenerArray","splice","event","call","Raycaster","params","Sprite","Mesh","PointCloud","threshold","LOD","Line","descSort","intersectObject","raycaster","intersects","recursive","raycast","children","precision","linePrecision","sort","intersectObjects","objects","log","Object3D","Object","defineProperty","Object3DIdCount","name","parent","DefaultUp","rotation","onRotationChange","onQuaternionChange","defineProperties","enumerable","renderDepth","rotationAutoUpdate","matrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","userData","eulerOrder","useQuaternion","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getChildByName","getObjectByName","getObjectById","id","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","updateMatrix","force","toJSON","output","metadata","version","generator","geometries","parseGeometry","json","materials","parseMaterial","material","parseObject","data","JSON","stringify","PerspectiveCamera","OrthographicCamera","AmbientLight","DirectionalLight","intensity","PointLight","SpotLight","exponent","HemisphereLight","groundColor","parse","Projector","projectVector","unprojectVector","pickingRay","Face3","materialIndex","vertexNormals","vertexColors","vertexTangents","face","Face4","BufferAttribute","itemSize","needsUpdate","copyAt","index1","attribute","index2","setXY","setXYZ","setXYZW","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","GeometryIdCount","attributesKeys","drawcalls","offsets","boundingBox","addAttribute","keys","getAttribute","addDrawCall","count","indexOffset","fromGeometry","settings","faces","faceVertexUvs","hasFaceVertexUv","hasFaceVertexNormals","normals","colors","uvs","i3","na","nb","nc","fc","vca","vcb","vcc","uva","uvb","uvc","computeBoundingBox","bb","isNaN","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","cb","ab","indices","jl","normalizeNormals","computeTangents","uv","nVertices","tangent","tangents","tan1","tan2","uvA","uvB","uvC","x1","y1","z1","sdir","tdir","handleTriangle","iA","iB","iC","tmp2","n2","handleVertex","computeOffsets","indexBufferSize","verticesCount","facesCount","sortedIndices","Uint16Array","indexPtr","vertexPtr","duplicatedVertices","newVerticeMaps","faceVertices","Int32Array","vertexMap","revVertexMap","findex","vo","vid","faceMax","new_offset","new_vid","reorderBuffers","merge","indexBuffer","indexMap","vertexCount","sortedAttributes","attr","sourceArray","attrArray","attrSize","sortedAttr","numItems","key","typeArray","sourceAttr","dispose","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","hasTangents","dynamic","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","tangentsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","fromBufferGeometry","tempNormals","tempUVs","addFace","fl","areaWeighted","vl","vD","db","dc","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","vertexIndex","context","ua","ub","uc","faceIndex","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","uvs2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeVertices","verticesMap","unique","changes","precisionPoints","pow","faceIndicesToRemove","dupIndex","idx","parameters","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","Camera","matrixWorldInverse","create","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","renderer","scene","generateMipmaps","activeCubeFace","render","zoom","updateProjectionMatrix","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","width","height","Light","light","AreaLight","constantAttenuation","linearAttenuation","quadraticAttenuation","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","skyColor","shadowCameraFov","Cache","files","file","get","clear","Loader","showStatus","statusDomElement","addStatusElement","imageLoader","ImageLoader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","document","createElement","fontSize","textAlign","background","padding","zIndex","innerHTML","updateProgress","progress","message","loaded","toFixed","extractUrlBase","url","parts","pop","initMaterials","texturePath","createMaterial","needsTangents","ShaderMaterial","nearest_pow2","LN2","create_texture","where","sourceFile","repeat","wrap","anisotropy","fullPath","texture","loader","Handlers","load","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","rgb2hex","rgb","mtype","mpars","opacity","map","lightMap","normalMap","bumpMap","wireframe","shading","toLowerCase","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorAmbient","ambient","colorEmissive","emissive","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","shader","ShaderLib","uniforms","UniformsUtils","mapNormalFactor","specularMap","fragmentShader","vertexShader","lights","fog","DbgName","handlers","regex","XHRLoader","manager","cache","DefaultLoadingManager","onLoad","onProgress","onError","cached","request","XMLHttpRequest","open","response","itemEnd","responseType","send","itemStart","setResponseType","setCrossOrigin","src","JSONLoader","withCredentials","loadAjaxJSON","callbackProgress","xhr","onreadystatechange","readyState","DONE","status","responseText","LOADING","getResponseHeader","HEADERS_RECEIVED","parseModel","parseSkin","parseMorphing","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","bones","animation","animations","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","BufferGeometryLoader","text","typedArray","MaterialLoader","ObjectLoader","parseGeometries","parseMaterials","geometryLoader","bufferGeometryLoader","PlaneGeometry","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleGeometry","segments","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","IcosahedronGeometry","detail","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","Scene","Group","TextureLoader","CompressedTextureLoader","_parser","images","CompressedTexture","loadTexture","buffer","texDatas","mipmaps","mipmapCount","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","overdraw","setValues","values","newValue","currentValue","Number","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshNormalMaterial","MeshDepthMaterial","SpriteMaterial","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","wrapAround","wrapRGB","metal","normalScale","MeshFaceMaterial","PointCloudMaterial","sizeAttenuation","ParticleBasicMaterial","ParticleSystemMaterial","defines","defaultAttributeValues","index0AttributeName","RawShaderMaterial","mapping","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","_needsUpdate","onUpdate","CubeTexture","DataTexture","VideoTexture","video","requestAnimationFrame","HAVE_ENOUGH_DATA","sortParticles","inverseMatrix","localThreshold","testPoint","rayPointDistance","intersectPoint","distanceToRay","oi","ol","pointCount","ParticleSystem","mode","LineStrip","LinePieces","precisionSq","nbVertices","interSegment","interRay","step","distSq","updateMorphTargets","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","intersectionPoint","isFaceMaterial","objectMaterials","morphInfluences","tl","influence","targets","Bone","belongsToSkin","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","bind","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","time","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","match","label","num","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","mix","interpolateTargets","influences","addLevel","getObjectForDistance","matrixPosition","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","common","bump","normalmap","particle","shadowmap","WebGLRenderer","_canvas","_context","_precision","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_logarithmicDepthBuffer","logarithmicDepthBuffer","_clearColor","_clearAlpha","_webglObjects","_webglObjectsImmediate","opaqueObjects","transparentObjects","sprites","domElement","devicePixelRatio","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","gammaInput","gammaOutput","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","shadowMapCascade","maxMorphTargets","maxMorphNormals","autoScaleCubemaps","info","memory","programs","textures","calls","_this","_programs","_currentProgram","_currentFramebuffer","_currentMaterialId","_currentGeometryGroupHash","_currentCamera","_usedTextureUnits","_oldDoubleSided","_oldFlipSided","_oldBlending","_oldBlendEquation","_oldBlendSrc","_oldBlendDst","_oldDepthTest","_oldDepthWrite","_oldPolygonOffset","_oldPolygonOffsetFactor","_oldPolygonOffsetUnits","_oldLineWidth","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_currentWidth","_currentHeight","_newAttributes","Uint8Array","_enabledAttributes","_frustum","_projScreenMatrix","_projScreenMatrixPS","_vector3","_direction","_lightsNeedUpdate","_lights","directional","distances","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","_gl","getShaderPrecisionFormat","extensions","WebGLExtensions","setDefaultGLState","clearColor","clearDepth","clearStencil","enable","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","viewport","_maxTextures","MAX_TEXTURE_IMAGE_UNITS","_maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","_maxTextureSize","MAX_TEXTURE_SIZE","_maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","_supportsVertexTextures","_supportsBoneTextures","_vertexShaderPrecisionHighpFloat","VERTEX_SHADER","HIGH_FLOAT","_vertexShaderPrecisionMediumpFloat","MEDIUM_FLOAT","_vertexShaderPrecisionLowpFloat","LOW_FLOAT","_fragmentShaderPrecisionHighpFloat","FRAGMENT_SHADER","_fragmentShaderPrecisionMediumpFloat","_fragmentShaderPrecisionLowpFloat","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","highpAvailable","mediumpAvailable","shadowMapPlugin","ShadowMapPlugin","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","supportsVertexTextures","supportsFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","getMaxAnisotropy","extension","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","setSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","disable","setClearColor","setClearColorHex","getClearColor","getClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","resetGLState","createParticleBuffers","__webglVertexBuffer","createBuffer","__webglColorBuffer","createLineBuffers","__webglLineDistanceBuffer","createMeshBuffers","geometryGroup","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","numMorphTargets","__webglMorphTargetsBuffers","numMorphNormals","__webglMorphNormalsBuffers","onObjectRemoved","removeObject","onGeometryDispose","deallocateGeometry","onTextureDispose","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","deleteBuffers","buffers","deleteBuffer","__webglCustomAttributesList","__webglInit","geometryGroupsList","geometryGroups","__webglTextureCube","deleteTexture","__webglTexture","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","program","programInfo","deleteProgram","usedTimes","newPrograms","initCustomAttributes","nvertices","__webglInitialized","createUniqueBuffers","belongsToAttribute","initParticleBuffers","__vertexArray","__colorArray","__sortArray","__webglParticleCount","initLineBuffers","__lineDistanceArray","__webglLineCount","initMeshBuffers","faces3","ntris","nlines","getBufferMaterial","__normalArray","__uvArray","__uv2Array","__tangentArray","__skinIndexArray","__skinWeightArray","UintArray","Uint32Array","__typeArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__webglFaceCount","originalAttribute","property","__original","__inittedArrays","materialNeedsSmoothNormals","setParticleBuffers","hint","vertexArray","colorArray","sortArray","dirtyVertices","dirtyElements","dirtyColors","customAttributes","ca","cal","customAttribute","numericalSort","boundTo","bindBuffer","ARRAY_BUFFER","bufferData","setLineBuffers","dl","lineDistanceArray","dirtyLineDistances","setMeshBuffers","needsSmoothNormals","faceColor","uv2","v4","t4","n1","n3","n4","sw1","sw2","sw3","sw4","si1","si2","si3","si4","sa1","sa2","sa3","sa4","sb1","sb2","sb3","sb4","vn","uvi","uv2i","vk","vkl","vka","nka","chf","offset_uv","offset_uv2","offset_face","offset_normal","offset_tangent","offset_line","offset_color","offset_skin","offset_morphTarget","offset_custom","offset_customSrc","uvArray","uv2Array","normalArray","tangentArray","skinIndexArray","skinWeightArray","morphTargetsArrays","morphNormalsArrays","faceArray","lineArray","dirtyUvs","dirtyNormals","dirtyTangents","dirtyMorphTargets","morphTargetsNeedUpdate","chunk_faces3","obj_faces","obj_uvs","obj_uvs2","obj_colors","obj_skinIndices","obj_skinWeights","ELEMENT_ARRAY_BUFFER","pp","setDirectBuffers","bufferType","STATIC_DRAW","renderBufferImmediate","initAttributes","hasPositions","hasNormals","hasUvs","__webglUvBuffer","hasColors","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","FLOAT","nx","ny","nz","nax","nbx","ncx","nay","nby","ncy","naz","nbz","ncz","disableUnusedAttributes","drawArrays","TRIANGLES","setupVertexAttributes","startIndex","geometryAttributes","programAttributes","programAttributesKeys","programAttribute","geometryAttribute","vertexAttrib2fv","vertexAttrib3fv","renderBufferDirect","setProgram","updateBuffers","wireframeBit","geometryHash","LINES","UNSIGNED_INT","UNSIGNED_SHORT","drawElements","POINTS","LINE_STRIP","setLineWidth","renderBuffer","geometryGroupHash","setupMorphTargets","skinIndex","skinWeight","lineDistance","enableVertexAttribArray","disableVertexAttribArray","numSupportedMorphTargets","__webglMorphTargetInfluences","activeInfluenceIndices","numSupportedMorphNormals","influenceIndex","uniform1fv","painterSortStable","reversePainterSortStable","forceClear","projectObject","webglObject","setupMatrices","unrollImmediateBufferMaterial","setBlending","setDepthTest","setDepthWrite","setPolygonOffset","renderObjects","renderObjectsImmediate","updateRenderTargetMipmap","initObject","webglObjects","updateObject","unrollBufferMaterial","renderList","useBlending","setMaterialFaces","materialType","renderImmediateObject","immediateRenderCallback","globject","opaque","_modelViewMatrix","_normalMatrix","initGeometryGroups","__webglActive","addBuffer","ImmediateRenderObject","addBufferImmediate","geometryGroupCounter","makeGroups","usesFaceMaterial","maxVerticesInGroup","groupHash","hash_map","group","groups","groupsList","counter","addBuffers","objlist","customAttributesDirty","areCustomAttributesDirty","clearCustomAttributes","removeInstances","o","initMaterial","shaderID","__webglShader","maxLightCount","allocateLights","maxShadows","allocateShadows","maxBones","allocateBones","useFog","fogExp","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","code","pl","WebGLProgram","base","uniformsList","location","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","refreshUniformsLambert","mNear","mFar","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","diffuse","uvScaleMap","offsetRepeat","flipEnvMap","useRefract","totalSize","psColor","fogColor","fogNear","fogFar","fogDensity","ambientLightColor","directionalLightColor","directionalLightDirection","pointLightColor","pointLightPosition","pointLightDistance","spotLightColor","spotLightPosition","spotLightDistance","spotLightDirection","spotLightAngleCos","spotLightExponent","hemisphereLightSkyColor","hemisphereLightGroundColor","hemisphereLightDirection","boolean","modelViewMatrix","uniformMatrix3fv","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform2fv","uniform3fv","uniform4fv","_array","setCubeTexture","setCubeTextureDynamic","setColorGamma","intensitySq","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","setFaceCulling","frontFaceDirection","CW","FRONT","FRONT_AND_BACK","depthMask","lineWidth","polygonoffset","factor","units","POLYGON_OFFSET_FILL","ONE","ZERO","ONE_MINUS_SRC_COLOR","SRC_COLOR","blendEquationSeparate","blendFuncSeparate","paramThreeToGL","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__oldAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","uploadTexture","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","glFormat","glType","mipmap","texImage2D","compressedTexImage2D","generateMipmap","slot","activeTexture","TEXTURE0","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","nVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","nVertexMatrices","dirLights","pointLights","spotLights","hemiLights","addPrePlugin","addPostPlugin","updateShadowMap","WebGLRenderTarget","options","gl","getExtension","programIdCount","generateDefines","chunk","cacheUniformLocations","identifiers","getUniformLocation","cacheAttributeLocations","getAttribLocation","shadowMapTypeDefine","customDefines","createProgram","prefix_vertex","prefix_fragment","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteShader","addLineNumbers","string","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","init","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","prefix","_renderer","_depthMaterial","_depthMaterialMorph","_depthMaterialSkin","_depthMaterialMorphSkin","_min","_max","_matrixPosition","_renderList","depthShader","depthUniforms","virtualLight","createVirtualLight","originalCamera","gyro","Gyroscope","updateVirtualLight","shadowFilter","pars","cameraHelper","CameraHelper","isVirtual","updateShadowCamera","objectMaterial","useMorphing","useSkinning","getObjectMaterial","customDepthMaterial","clearAlpha","cascade","pointsWorld","pointsFrustum","nearZ","farZ","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","characterPts","allPts","resolution","String","fontPaths","path","Path","ret","extractGlyphPoints","paths","pts","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","glyph","glyphs","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","_typeface_js","typeface_js","Audio","source","createBufferSource","gain","createGain","connect","destination","panner","createPanner","onload","decodeAudioData","setLoop","loop","setRefDistance","refDistance","setRolloffFactor","rolloffFactor","AudioListener","window","AudioContext","webkitAudioContext","orientation","velocity","positionPrev","setOrientation","setVelocity","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","bounds","oldX","oldY","xNorm","pathPt","translationObject","quaternionObject","scaleObject","translationWorld","quaternionWorld","scaleWorld","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vectors","vlen","args","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","concat","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambigious","toChange","sIdx","sLen","sh","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","indepHoles","intersectsHoleEdge","ihIdx","chkHole","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","failedCuts","tmpShape1","tmpShape2","tmpHole1","tmpHole2","hl","minShapeIndex","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","quat","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","play","deltaTimeMS","resetBlendWeights","Animation","currentTime","timeScale","isPlaying","interpolationType","keyTypes","reset","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","obj","sid","next","endTime","original","hasTarget","MorphAnimation","mesh","frames","pause","lastFrame","currentFrame","interpolation","frame","width_half","height_half","depth_half","buildPlane","udir","vdir","gridX","gridY","gridX1","gridY1","segment_width","segment_height","uvd","centerUV","segment","CubeGeometry","heightHalf","verticesRow","uvsRow","tanTheta","uv1","uv3","uv4","addShapeList","addShape","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","extrudePts","extrudeByPath","extrudeMaterial","uvgen","UVGenerator","WorldUVGenerator","splineTube","binormal","position2","TubeGeometry","FrenetFrames","ahole","bevelPoints","shapesOffset","shapePoints","reverse","scalePt2","pt","bs","vert","flen","cont","clen","RAD_TO_DEGREES","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","colinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","pt_i","pt_j","pt_k","holesMovements","oneHoleMovements","verticesMovements","binormals","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","slen1","slen2","f4","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","phi","np","u0","u1","PlaneBufferGeometry","offset2","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegment","TextGeometry","textShapes","grid","tang","bitan","getPos","ip","jp","in_q","in_p","cu","su","quOverP","cs","tz","closed","numpoints","pos2","mat","smallest","initialNormal3","MAX_VALUE","PolyhedronGeometry","that","prepare","midpoints","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","cells","aj","bj","rows","DodecahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","func","slices","stacks","stackCount","sliceCount","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","edge","sortFunction","numEdges","vert1","vert2","face1","face2","FaceNormalsHelper","objectVertices","objectFaces","objectWorldMatrix","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","arrowLength","domeSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","worldMatrix","vertexId","VertexTangentsHelper","WireframeHelper","edges","numTris","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","sourcesContent":["var self = self || {};// File:src/Three.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = { REVISION: '69' };\n\n// browserify support\n\nif ( typeof module === 'object' ) {\n\n\tmodule.exports = THREE;\n\n}\n\n// polyfills\n\nif ( Math.sign === undefined ) {\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : 0;\n\n\t};\n\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n// GL STATE CONSTANTS\n\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\n\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1;\n\n// SHADOWING TYPES\n\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2;\n\n// MATERIAL CONSTANTS\n\n// side\n\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2;\n\n// shading\n\nTHREE.NoShading = 0;\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2;\n\n// colors\n\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2;\n\n// blending modes\n\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5;\n\n// custom blending equations\n// (numbers start from 100 not to clash with other\n//  mappings to OpenGL constants defined in Texture.js)\n\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104;\n\n// custom blending destination factors\n\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207;\n\n// custom blending source factors\n\n//THREE.ZeroFactor = 200;\n//THREE.OneFactor = 201;\n//THREE.SrcAlphaFactor = 204;\n//THREE.OneMinusSrcAlphaFactor = 205;\n//THREE.DstAlphaFactor = 206;\n//THREE.OneMinusDstAlphaFactor = 207;\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210;\n\n\n// TEXTURE CONSTANTS\n\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2;\n\n// Mapping modes\n\nTHREE.UVMapping = function () {};\n\nTHREE.CubeReflectionMapping = function () {};\nTHREE.CubeRefractionMapping = function () {};\n\nTHREE.SphericalReflectionMapping = function () {};\nTHREE.SphericalRefractionMapping = function () {};\n\n// Wrapping modes\n\nTHREE.RepeatWrapping = 1000;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002;\n\n// Filters\n\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008;\n\n// Data types\n\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\n\n// Pixel types\n\n//THREE.UnsignedByteType = 1009;\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018;\n\n// Pixel formats\n\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023;\n\n// DDS / ST3C Compressed texture formats\n\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\n\n\n// PVRTC compressed texture formats\n\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\n\n\n// File:src/math/Color.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Color = function ( color ) {\n\n\tif ( arguments.length === 3 ) {\n\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\n\n\t}\n\n\treturn this.set( color )\n\n};\n\nTHREE.Color.prototype = {\n\n\tconstructor: THREE.Color,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value instanceof THREE.Color ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function ( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tvar hue2rgb = function ( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t};\n\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetStyle: function ( style ) {\n\n\t\t// rgb(255,0,0)\n\n\t\tif ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\n\n\t\t\tvar color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\n\n\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// rgb(100%,0%,0%)\n\n\t\tif ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\n\n\t\t\tvar color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\n\n\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// #ff0000\n\n\t\tif ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\n\n\t\t\tvar color = /^\\#([0-9a-f]{6})$/i.exec( style );\n\n\t\t\tthis.setHex( parseInt( color[ 1 ], 16 ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// #f00\n\n\t\tif ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\n\n\t\t\tvar color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\n\n\t\t\tthis.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// red\n\n\t\tif ( /^(\\w+)$/i.test( style ) ) {\n\n\t\t\tthis.setHex( THREE.ColorKeywords[ style ] );\n\n\t\t\treturn this;\n\n\t\t}\n\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color ) {\n\n\t\tthis.r = color.r * color.r;\n\t\tthis.g = color.g * color.g;\n\t\tthis.b = color.b * color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color ) {\n\n\t\tthis.r = Math.sqrt( color.r );\n\t\tthis.g = Math.sqrt( color.g );\n\t\tthis.b = Math.sqrt( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis.r = array[ 0 ];\n\t\tthis.g = array[ 1 ];\n\t\tthis.b = array[ 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\treturn [ this.r, this.g, this.b ];\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Color().setRGB( this.r, this.g, this.b );\n\n\t}\n\n};\n\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n// File:src/math/Quaternion.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Quaternion = function ( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Quaternion.prototype = {\n\n\tconstructor: THREE.Quaternion,\n\n\t_x: 0,_y: 0, _z: 0, _w: 0,\n\n\tget x () {\n\n\t\treturn this._x;\n\n\t},\n\n\tset x ( value ) {\n\n\t\tthis._x = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget y () {\n\n\t\treturn this._y;\n\n\t},\n\n\tset y ( value ) {\n\n\t\tthis._y = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget z () {\n\n\t\treturn this._z;\n\n\t},\n\n\tset z ( value ) {\n\n\t\tthis._z = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget w () {\n\n\t\treturn this._w;\n\n\t},\n\n\tset w ( value ) {\n\n\t\tthis._w = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\t\t}\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1, r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function ( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\tthis.normalize();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}(),\n\n\tinverse: function () {\n\n\t\tthis.conjugate().normalize();\n\n\t\treturn this;\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {},\n\n\tclone: function () {\n\n\t\treturn new THREE.Quaternion( this._x, this._y, this._z, this._w );\n\n\t}\n\n};\n\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\n\n\treturn qm.copy( qa ).slerp( qb, t );\n\n}\n\n// File:src/math/Vector2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.Vector2 = function ( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n};\n\nTHREE.Vector2.prototype = {\n\n\tconstructor: THREE.Vector2,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\tif ( scalar !== 0 ) {\n\n\t\t\tvar invScalar = 1 / scalar;\n\n\t\t\tthis.x *= invScalar;\n\t\t\tthis.y *= invScalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tif ( this.x > v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y > v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tif ( this.x < v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y < v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tif ( this.x < min.x ) {\n\n\t\t\tthis.x = min.x;\n\n\t\t} else if ( this.x > max.x ) {\n\n\t\t\tthis.x = max.x;\n\n\t\t}\n\n\t\tif ( this.y < min.y ) {\n\n\t\t\tthis.y = min.y;\n\n\t\t} else if ( this.y > max.y ) {\n\n\t\t\tthis.y = max.y;\n\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclampScalar: ( function () {\n\n\t\tvar min, max;\n\n\t\treturn function ( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector2();\n\t\t\t\tmax = new THREE.Vector2();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t} )(),\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tsetLength: function ( l ) {\n\n\t\tvar oldLength = this.length();\n\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\n\n\t\t\tthis.multiplyScalar( l / oldLength );\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Vector2( this.x, this.y );\n\n\t}\n\n};\n\n// File:src/math/Vector3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector3 = function ( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n};\n\nTHREE.Vector3.prototype = {\n\n\tconstructor: THREE.Vector3,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion;\n\n\t\treturn function ( euler ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion;\n\n\t\treturn function ( axis, angle ) {\n\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x;\n\t\tvar y = this.y;\n\t\tvar z = this.z;\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tapplyProjection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 projection matrix\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tvar e = m.elements;\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x;\n\t\tvar y = this.y;\n\t\tvar z = this.z;\n\n\t\tvar qx = q.x;\n\t\tvar qy = q.y;\n\t\tvar qz = q.z;\n\t\tvar qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix;\n\n\t\treturn function ( camera ) {\n\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyProjection( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix;\n\n\t\treturn function ( camera ) {\n\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyProjection( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\tthis.normalize();\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\tif ( scalar !== 0 ) {\n\n\t\t\tvar invScalar = 1 / scalar;\n\n\t\t\tthis.x *= invScalar;\n\t\t\tthis.y *= invScalar;\n\t\t\tthis.z *= invScalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tif ( this.x > v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y > v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\tif ( this.z > v.z ) {\n\n\t\t\tthis.z = v.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tif ( this.x < v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y < v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\tif ( this.z < v.z ) {\n\n\t\t\tthis.z = v.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tif ( this.x < min.x ) {\n\n\t\t\tthis.x = min.x;\n\n\t\t} else if ( this.x > max.x ) {\n\n\t\t\tthis.x = max.x;\n\n\t\t}\n\n\t\tif ( this.y < min.y ) {\n\n\t\t\tthis.y = min.y;\n\n\t\t} else if ( this.y > max.y ) {\n\n\t\t\tthis.y = max.y;\n\n\t\t}\n\n\t\tif ( this.z < min.z ) {\n\n\t\t\tthis.z = min.z;\n\n\t\t} else if ( this.z > max.z ) {\n\n\t\t\tthis.z = max.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: ( function () {\n\n\t\tvar min, max;\n\n\t\treturn function ( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector3();\n\t\t\t\tmax = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t} )(),\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tsetLength: function ( l ) {\n\n\t\tvar oldLength = this.length();\n\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\n\n\t\t\tthis.multiplyScalar( l / oldLength );\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\tthis.x = y * v.z - z * v.y;\n\t\tthis.y = z * v.x - x * v.z;\n\t\tthis.z = x * v.y - y * v.x;\n\n\t\treturn this;\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function () {\n\n\t\tvar v1, dot;\n\n\t\treturn function ( vector ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tv1.copy( vector ).normalize();\n\n\t\t\tdot = this.dot( v1 );\n\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\n\n\t\t};\n\n\t}(),\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1;\n\n\t\treturn function ( planeNormal ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t}\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1;\n\n\t\treturn function ( normal ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t}\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x;\n\t\tvar dy = this.y - v.y;\n\t\tvar dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tsetEulerFromRotationMatrix: function ( m, order ) {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\n\tsetEulerFromQuaternion: function ( q, order ) {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\n\t\treturn this.setFromMatrixScale( m );\n\t},\n\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\n\t\treturn this.setFromMatrixColumn( index, matrix );\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tthis.x = m.elements[ 12 ];\n\t\tthis.y = m.elements[ 13 ];\n\t\tthis.z = m.elements[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\t},\n\n\tsetFromMatrixColumn: function ( index, matrix ) {\n\n\t\tvar offset = index * 4;\n\n\t\tvar me = matrix.elements;\n\n\t\tthis.x = me[ offset ];\n\t\tthis.y = me[ offset + 1 ];\n\t\tthis.z = me[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Vector3( this.x, this.y, this.z );\n\n\t}\n\n};\n\n// File:src/math/Vector4.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Vector4 = function ( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n};\n\nTHREE.Vector4.prototype = {\n\n\tconstructor: THREE.Vector4,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x;\n\t\tvar y = this.y;\n\t\tvar z = this.z;\n\t\tvar w = this.w;\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\tif ( scalar !== 0 ) {\n\n\t\t\tvar invScalar = 1 / scalar;\n\n\t\t\tthis.x *= invScalar;\n\t\t\tthis.y *= invScalar;\n\t\t\tthis.z *= invScalar;\n\t\t\tthis.w *= invScalar;\n\n\t\t} else {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\t\t\tthis.w = 1;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\t this.x = 1;\n\t\t\t this.y = 0;\n\t\t\t this.z = 0;\n\n\t\t} else {\n\n\t\t\t this.x = q.x / s;\n\t\t\t this.y = q.y / s;\n\t\t\t this.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) { // m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else { // m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tif ( this.x > v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y > v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\tif ( this.z > v.z ) {\n\n\t\t\tthis.z = v.z;\n\n\t\t}\n\n\t\tif ( this.w > v.w ) {\n\n\t\t\tthis.w = v.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tif ( this.x < v.x ) {\n\n\t\t\tthis.x = v.x;\n\n\t\t}\n\n\t\tif ( this.y < v.y ) {\n\n\t\t\tthis.y = v.y;\n\n\t\t}\n\n\t\tif ( this.z < v.z ) {\n\n\t\t\tthis.z = v.z;\n\n\t\t}\n\n\t\tif ( this.w < v.w ) {\n\n\t\t\tthis.w = v.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\tif ( this.x < min.x ) {\n\n\t\t\tthis.x = min.x;\n\n\t\t} else if ( this.x > max.x ) {\n\n\t\t\tthis.x = max.x;\n\n\t\t}\n\n\t\tif ( this.y < min.y ) {\n\n\t\t\tthis.y = min.y;\n\n\t\t} else if ( this.y > max.y ) {\n\n\t\t\tthis.y = max.y;\n\n\t\t}\n\n\t\tif ( this.z < min.z ) {\n\n\t\t\tthis.z = min.z;\n\n\t\t} else if ( this.z > max.z ) {\n\n\t\t\tthis.z = max.z;\n\n\t\t}\n\n\t\tif ( this.w < min.w ) {\n\n\t\t\tthis.w = min.w;\n\n\t\t} else if ( this.w > max.w ) {\n\n\t\t\tthis.w = max.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: ( function () {\n\n\t\tvar min, max;\n\n\t\treturn function ( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new THREE.Vector4();\n\t\t\t\tmax = new THREE.Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t} )(),\n\n    floor: function () {\n\n        this.x = Math.floor( this.x );\n        this.y = Math.floor( this.y );\n        this.z = Math.floor( this.z );\n        this.w = Math.floor( this.w );\n\n        return this;\n\n    },\n\n    ceil: function () {\n\n        this.x = Math.ceil( this.x );\n        this.y = Math.ceil( this.y );\n        this.z = Math.ceil( this.z );\n        this.w = Math.ceil( this.w );\n\n        return this;\n\n    },\n\n    round: function () {\n\n        this.x = Math.round( this.x );\n        this.y = Math.round( this.y );\n        this.z = Math.round( this.z );\n        this.w = Math.round( this.w );\n\n        return this;\n\n    },\n\n    roundToZero: function () {\n\n        this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n        this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n        this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n        this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n        return this;\n\n    },\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tlengthManhattan: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() );\n\n\t},\n\n\tsetLength: function ( l ) {\n\n\t\tvar oldLength = this.length();\n\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\n\n\t\t\tthis.multiplyScalar( l / oldLength );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Vector4( this.x, this.y, this.z, this.w );\n\n\t}\n\n};\n\n// File:src/math/Euler.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Euler = function ( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || THREE.Euler.DefaultOrder;\n\n};\n\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nTHREE.Euler.DefaultOrder = 'XYZ';\n\nTHREE.Euler.prototype = {\n\n\tconstructor: THREE.Euler,\n\n\t_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\n\n\tget x () {\n\n\t\treturn this._x;\n\n\t},\n\n\tset x ( value ) {\n\n\t\tthis._x = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget y () {\n\n\t\treturn this._y;\n\n\t},\n\n\tset y ( value ) {\n\n\t\tthis._y = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget z () {\n\n\t\treturn this._z;\n\n\t},\n\n\tset z ( value ) {\n\n\t\tthis._z = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tget order () {\n\n\t\treturn this._order;\n\n\t},\n\n\tset order ( value ) {\n\n\t\tthis._order = value;\n\t\tthis.onChangeCallback();\n\n\t},\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order ) {\n\n\t\tvar clamp = THREE.Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\tvar clamp = THREE.Math.clamp;\n\n\t\t// q is assumed to be normalized\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n\n\t\tvar sqx = q.x * q.x;\n\t\tvar sqy = q.y * q.y;\n\t\tvar sqz = q.z * q.z;\n\t\tvar sqw = q.w * q.w;\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = Math.atan2( 2 * ( q.x * q.w - q.y * q.z ), ( sqw - sqx - sqy + sqz ) );\n\t\t\tthis._y = Math.asin(  clamp( 2 * ( q.x * q.z + q.y * q.w ), - 1, 1 ) );\n\t\t\tthis._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw + sqx - sqy - sqz ) );\n\n\t\t} else if ( order ===  'YXZ' ) {\n\n\t\t\tthis._x = Math.asin(  clamp( 2 * ( q.x * q.w - q.y * q.z ), - 1, 1 ) );\n\t\t\tthis._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw - sqx - sqy + sqz ) );\n\t\t\tthis._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw - sqx + sqy - sqz ) );\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin(  clamp( 2 * ( q.x * q.w + q.y * q.z ), - 1, 1 ) );\n\t\t\tthis._y = Math.atan2( 2 * ( q.y * q.w - q.z * q.x ), ( sqw - sqx - sqy + sqz ) );\n\t\t\tthis._z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw - sqx + sqy - sqz ) );\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = Math.atan2( 2 * ( q.x * q.w + q.z * q.y ), ( sqw - sqx - sqy + sqz ) );\n\t\t\tthis._y = Math.asin(  clamp( 2 * ( q.y * q.w - q.x * q.z ), - 1, 1 ) );\n\t\t\tthis._z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw + sqx - sqy - sqz ) );\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = Math.atan2( 2 * ( q.x * q.w - q.z * q.y ), ( sqw - sqx + sqy - sqz ) );\n\t\t\tthis._y = Math.atan2( 2 * ( q.y * q.w - q.x * q.z ), ( sqw + sqx - sqy - sqz ) );\n\t\t\tthis._z = Math.asin(  clamp( 2 * ( q.x * q.y + q.z * q.w ), - 1, 1 ) );\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = Math.atan2( 2 * ( q.x * q.w + q.y * q.z ), ( sqw - sqx + sqy - sqz ) );\n\t\t\tthis._y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw + sqx - sqy - sqz ) );\n\t\t\tthis._z = Math.asin(  clamp( 2 * ( q.z * q.w - q.x * q.y ), - 1, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromQuaternion() given unsupported order: ' + order )\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new THREE.Quaternion();\n\n\t\treturn function ( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\t\t\tthis.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\treturn [ this._x, this._y, this._z, this._order ];\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {},\n\n\tclone: function () {\n\n\t\treturn new THREE.Euler( this._x, this._y, this._z, this._order );\n\n\t}\n\n};\n\n// File:src/math/Line3.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Line3 = function ( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\n\n};\n\nTHREE.Line3.prototype = {\n\n\tconstructor: THREE.Line3,\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new THREE.Vector3();\n\t\tvar startEnd = new THREE.Vector3();\n\n\t\treturn function ( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Line3().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Box2.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Box2 = function ( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\n\n};\n\nTHREE.Box2.prototype = {\n\n\tconstructor: THREE.Box2,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] )\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new THREE.Vector2();\n\n\t\treturn function ( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tsize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tisIntersectionBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector2();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Box2().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Box3.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Box3 = function ( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\n\n};\n\nTHREE.Box3.prototype = {\n\n\tconstructor: THREE.Box3,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] )\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and childrens', world transforms\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( object ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\n\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tsize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t     point.y < this.min.y || point.y > this.max.y ||\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tisIntersectionBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\n\n\t\t\tresult.center = this.center();\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3()\n\t\t];\n\n\t\treturn function ( matrix ) {\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\n\n\t\t\tthis.makeEmpty();\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Box3().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Matrix3.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Matrix3 = function () {\n\n\tthis.elements = new Float32Array( [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t] );\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n};\n\nTHREE.Matrix3.prototype = {\n\n\tconstructor: THREE.Matrix3,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\treturn this.applyToVector3Array( a );\n\n\t},\n\n\tapplyToVector3Array: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( array, offset, length ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\tfor ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\n\n\t\t\t\tv1.x = array[ j ];\n\t\t\t\tv1.y = array[ j + 1 ];\n\t\t\t\tv1.z = array[ j + 2 ];\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tarray[ j ]     = v1.x;\n\t\t\t\tarray[ j + 1 ] = v1.y;\n\t\t\t\tarray[ j + 2 ] = v1.z;\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t};\n\n\t}(),\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnInvertible ) {\n\n\t\t// input: THREE.Matrix4\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\n\n\t\tvar me = matrix.elements;\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\n\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\n\n\t\t// no inverse\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnInvertible || false ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\tthis.identity();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.multiplyScalar( 1.0 / det );\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset     ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\treturn array;\n\n\t},\n\n\tgetNormalMatrix: function ( m ) {\n\n\t\t// input: THREE.Matrix4\n\n\t\tthis.getInverse( m ).transpose();\n\n\t\treturn this;\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis.elements.set( array );\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\tvar te = this.elements;\n\n\t\treturn [\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\n\t\t];\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Matrix3().fromArray( this.elements );\n\n\t}\n\n};\n\n// File:src/math/Matrix4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://exocortex.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Matrix4 = function () {\n\n\tthis.elements = new Float32Array( [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t] );\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n};\n\nTHREE.Matrix4.prototype = {\n\n\tconstructor: THREE.Matrix4,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tthis.elements.set( m.elements );\n\n\t\treturn this;\n\n\t},\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new THREE.Vector3();\n\t\tvar y = new THREE.Vector3();\n\t\tvar z = new THREE.Vector3();\n\n\t\treturn function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\tif ( z.length() === 0 ) {\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\tif ( x.length() === 0 ) {\n\n\t\t\t\tz.x += 0.0001;\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t}\n\n\t\t\ty.crossVectors( z, x );\n\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyToArray: function ( a, b, r ) {\n\n\t\tvar te = this.elements;\n\n\t\tthis.multiplyMatrices( a, b );\n\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\treturn vector.applyProjection( this );\n\n\t},\n\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\n\tmultiplyVector3Array: function ( a ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\treturn this.applyToVector3Array( a );\n\n\t},\n\n\tapplyToVector3Array: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( array, offset, length ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\tfor ( var i = 0, j = offset, il; i < length; i += 3, j += 3 ) {\n\n\t\t\t\tv1.x = array[ j ];\n\t\t\t\tv1.y = array[ j + 1 ];\n\t\t\t\tv1.z = array[ j + 2 ];\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tarray[ j ]     = v1.x;\n\t\t\t\tarray[ j + 1 ] = v1.y;\n\t\t\t\tarray[ j + 2 ] = v1.z;\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t};\n\n\t}(),\n\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\n\t\tv.transformDirection( this );\n\n\t},\n\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset     ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t},\n\n\tgetPosition: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\tvar te = this.elements;\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\n\n\t\t};\n\n\t}(),\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnInvertible ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\n\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\n\n\t\tif ( det == 0 ) {\n\n\t\t\tvar msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnInvertible || false ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\tthis.identity();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.multiplyScalar( 1 / det );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\n\trotateByAxis: function ( axis, angle ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0,  0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s,  c, 0,\n\t\t\t0, 0,  0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts,  c, 0, 0,\n\t\t\t0,  0, 1, 0,\n\t\t\t0,  0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar matrix = new THREE.Matrix4();\n\n\t\treturn function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) {\n\t\t\t\tsx = - sx;\n\t\t\t}\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\n\t\tvar ymin = - ymax;\n\t\tvar xmin = ymin * aspect;\n\t\tvar xmax = ymax * aspect;\n\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = right - left;\n\t\tvar h = top - bottom;\n\t\tvar p = far - near;\n\n\t\tvar x = ( right + left ) / w;\n\t\tvar y = ( top + bottom ) / h;\n\t\tvar z = ( far + near ) / p;\n\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis.elements.set( array );\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\tvar te = this.elements;\n\n\t\treturn [\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\n\t\t];\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\n\n\t}\n\n};\n\n// File:src/math/Ray.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Ray = function ( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\n\n};\n\nTHREE.Ray.prototype = {\n\n\tconstructor: THREE.Ray,\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceTo( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceTo( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\tvar segCenter = v0.clone().add( v1 ).multiplyScalar( 0.5 );\n\t\tvar segDir = v1.clone().sub( v0 ).normalize();\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tvar diff = this.origin.clone().sub( segCenter );\n\t\tvar a01 = - this.direction.dot( segDir );\n\t\tvar b0 = diff.dot( this.direction );\n\t\tvar b1 = - diff.dot( segDir );\n\t\tvar c = diff.lengthSq();\n\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\tvar s0, s1, sqrDist, extDet;\n\n\t\tif ( det >= 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction.clone().multiplyScalar( s0 ).add( this.origin ) );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( segDir.clone().multiplyScalar( s1 ).add( segCenter ) );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t},\n\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tintersectSphere: function () {\n\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\n\t\t\tvar tca = v1.dot( this.direction );\n\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0 \n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t}\n\n\t}(),\n\n\tisIntersectionPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\t\tif ( denominator == 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) == 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t :  null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\tisIntersectionBox: function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function ( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t}(),\n\n\tintersectBox: function ( box , optionalTarget ) {\n\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n\n\t\tvar tmin,tmax,tymin,tymax,tzmin,tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new THREE.Vector3();\n\t\tvar edge1 = new THREE.Vector3();\n\t\tvar edge2 = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.sub( this.origin );\n\t\tthis.direction.normalize();\n\n\t\treturn this;\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Ray().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Sphere.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Sphere = function ( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n};\n\nTHREE.Sphere.prototype = {\n\n\tconstructor: THREE.Sphere,\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function ( points, optionalCenter )  {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).center( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n \t\t};\n\n\t}(),\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new THREE.Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Sphere().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Frustum.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\n\n\t];\n\n};\n\nTHREE.Frustum.prototype = {\n\n\tconstructor: THREE.Frustum,\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\treturn function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new THREE.Vector3(),\n\t\t\tp2 = new THREE.Vector3();\n\n\t\treturn function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t}(),\n\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Frustum().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Plane.js\n\n/**\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Plane = function ( normal, constant ) {\n\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n};\n\nTHREE.Plane.prototype = {\n\n\tconstructor: THREE.Plane,\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\n\t\treturn function ( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t},\n\n\torthoPoint: function ( point, optionalTarget ) {\n\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t},\n\n\tisIntersectionLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator == 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) == 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar m1 = new THREE.Matrix3();\n\n\t\treturn function ( matrix, optionalNormalMatrix ) {\n\n\t\t\t// compute new normal based on theory here:\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\n\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Plane().copy( this );\n\n\t}\n\n};\n\n// File:src/math/Math.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Math = {\n\n\tgenerateUUID: function () {\n\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\tvar uuid = new Array( 36 );\n\t\tvar rnd = 0, r;\n\n\t\treturn function () {\n\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\tif ( i == 8 || i == 13 || i == 18 || i == 23 ) {\n\n\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t} else if ( i == 14 ) {\n\n\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\tuuid[ i ] = chars[ ( i == 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uuid.join( '' );\n\n\t\t};\n\n\t}(),\n\n\t// Clamp value to range <a, b>\n\n\tclamp: function ( x, a, b ) {\n\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\n\n\t},\n\n\t// Clamp value to range <a, inf)\n\n\tclampBottom: function ( x, a ) {\n\n\t\treturn x < a ? a : x;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random float from <0, 1> with 16 bits of randomness\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\n\n\trandom16: function () {\n\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function () {\n\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\n\n\t\treturn function ( degrees ) {\n\n\t\t\treturn degrees * degreeToRadiansFactor;\n\n\t\t};\n\n\t}(),\n\n\tradToDeg: function () {\n\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\n\n\t\treturn function ( radians ) {\n\n\t\t\treturn radians * radianToDegreesFactor;\n\n\t\t};\n\n\t}(),\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t}\n\n};\n\n// File:src/math/Spline.js\n\n/**\n * Spline from Tween.js, slightly optimized (and trashed)\n * http://sole.github.com/tween.js/examples/05_spline.html\n *\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Spline = function ( points ) {\n\n\tthis.points = points;\n\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\tpoint, intPoint, weight, w2, w3,\n\tpa, pb, pc, pd;\n\n\tthis.initFromArray = function ( a ) {\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t}\n\n\t};\n\n\tthis.getPoint = function ( k ) {\n\n\t\tpoint = ( this.points.length - 1 ) * k;\n\t\tintPoint = Math.floor( point );\n\t\tweight = point - intPoint;\n\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\tc[ 1 ] = intPoint;\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\tpa = this.points[ c[ 0 ] ];\n\t\tpb = this.points[ c[ 1 ] ];\n\t\tpc = this.points[ c[ 2 ] ];\n\t\tpd = this.points[ c[ 3 ] ];\n\n\t\tw2 = weight * weight;\n\t\tw3 = weight * w2;\n\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\treturn v3;\n\n\t};\n\n\tthis.getControlPointsArray = function () {\n\n\t\tvar i, p, l = this.points.length,\n\t\t\tcoords = [];\n\n\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\tp = this.points[ i ];\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t}\n\n\t\treturn coords;\n\n\t};\n\n\t// approximate length by summing linear segments\n\n\tthis.getLength = function ( nSubDivisions ) {\n\n\t\tvar i, index, nSamples, position,\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\toldPosition = new THREE.Vector3(),\n\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\tchunkLengths = [],\n\t\t\ttotalLength = 0;\n\n\t\t// first point has 0 length\n\n\t\tchunkLengths[ 0 ] = 0;\n\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\tindex = i / nSamples;\n\n\t\t\tposition = this.getPoint( index );\n\t\t\ttmpVec.copy( position );\n\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\toldPosition.copy( position );\n\n\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\tintPoint = Math.floor( point );\n\n\t\t\tif ( intPoint != oldIntPoint ) {\n\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// last point ends with total length\n\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t};\n\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\tvar i, j,\n\t\t\tindex, indexCurrent, indexNext,\n\t\t\tlinearDistance, realDistance,\n\t\t\tsampling, position,\n\t\t\tnewpoints = [],\n\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\tsl = this.getLength();\n\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t}\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t}\n\n\t\tthis.points = newpoints;\n\n\t};\n\n\t// Catmull-Rom\n\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t};\n\n};\n\n// File:src/math/Triangle.js\n\n/**\n * @author bhouston / http://exocortex.com\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Triangle = function ( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\n\n};\n\nTHREE.Triangle.normal = function () {\n\n\tvar v0 = new THREE.Vector3();\n\n\treturn function ( a, b, c, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tresult.subVectors( c, b );\n\t\tv0.subVectors( a, b );\n\t\tresult.cross( v0 );\n\n\t\tvar resultLengthSq = result.lengthSq();\n\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t}\n\n\t\treturn result.set( 0, 0, 0 );\n\n\t};\n\n}();\n\n// static/instance method to calculate barycoordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nTHREE.Triangle.barycoordFromPoint = function () {\n\n\tvar v0 = new THREE.Vector3();\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\n\treturn function ( point, a, b, c, optionalTarget ) {\n\n\t\tv0.subVectors( c, a );\n\t\tv1.subVectors( b, a );\n\t\tv2.subVectors( point, a );\n\n\t\tvar dot00 = v0.dot( v0 );\n\t\tvar dot01 = v0.dot( v1 );\n\t\tvar dot02 = v0.dot( v2 );\n\t\tvar dot11 = v1.dot( v1 );\n\t\tvar dot12 = v1.dot( v2 );\n\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t// colinear or singular triangle\n\t\tif ( denom == 0 ) {\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn result.set( - 2, - 1, - 1 );\n\t\t}\n\n\t\tvar invDenom = 1 / denom;\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycoordinates must always sum to 1\n\t\treturn result.set( 1 - u - v, v, u );\n\n\t};\n\n}();\n\nTHREE.Triangle.containsPoint = function () {\n\n\tvar v1 = new THREE.Vector3();\n\n\treturn function ( point, a, b, c ) {\n\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t};\n\n}();\n\nTHREE.Triangle.prototype = {\n\n\tconstructor: THREE.Triangle,\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.Triangle().copy( this );\n\n\t}\n\n};\n\n// File:src/core/Clock.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Clock = function ( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n};\n\nTHREE.Clock.prototype = {\n\n\tconstructor: THREE.Clock,\n\n\tstart: function () {\n\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\n\t\t\t\t\t ? self.performance.now()\n\t\t\t\t\t : Date.now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.running = true;\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\n\t\t\t\t\t ? self.performance.now()\n\t\t\t\t\t : Date.now();\n\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n};\n\n// File:src/core/EventDispatcher.js\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nTHREE.EventDispatcher = function () {}\n\nTHREE.EventDispatcher.prototype = {\n\n\tconstructor: THREE.EventDispatcher,\n\n\tapply: function ( object ) {\n\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n\n\t},\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = [];\n\t\t\tvar length = listenerArray.length;\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/core/Raycaster.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://exocortex.com/\n * @author stephomi / http://stephaneginier.com/\n */\n\n( function ( THREE ) {\n\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\n\n\t\tthis.ray = new THREE.Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\n\t\tthis.params = {\n\t\t\tSprite: {},\n\t\t\tMesh: {},\n\t\t\tPointCloud: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tLine: {}\n\t\t};\n\n\t};\n\n\tvar descSort = function ( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t};\n\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t//\n\n\tTHREE.Raycaster.prototype = {\n\n\t\tconstructor: THREE.Raycaster,\n\n\t\tprecision: 0.0001,\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.ray.set( origin, direction );\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( descSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\tvar intersects = [];\n\n\t\t\tif ( objects instanceof Array === false ) {\n\n\t\t\t\tconsole.log( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( descSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t};\n\n}( THREE ) );\n\n// File:src/core/Object3D.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.Object3D = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = undefined;\n\tthis.children = [];\n\n\tthis.up = THREE.Object3D.DefaultUp.clone();\n\n\tvar scope = this;\n\n\tvar position = new THREE.Vector3();\n\tvar rotation = new THREE.Euler();\n\tvar quaternion = new THREE.Quaternion();\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\n\n\tvar onRotationChange = function () {\n\t\tquaternion.setFromEuler( rotation, false );\n\t};\n\n\tvar onQuaternionChange = function () {\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\t};\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t} );\n\n\tthis.renderDepth = null;\n\n\tthis.rotationAutoUpdate = true;\n\n\tthis.matrix = new THREE.Matrix4();\n\tthis.matrixWorld = new THREE.Matrix4();\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\n\tthis.userData = {};\n\n};\n\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\n\nTHREE.Object3D.prototype = {\n\n\tconstructor: THREE.Object3D,\n\n\tget eulerOrder () {\n\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\n\n\t\treturn this.rotation.order;\n\n\t},\n\n\tset eulerOrder ( value ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\n\n\t\tthis.rotation.order = value;\n\n\t},\n\n\tget useQuaternion () {\n\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t},\n\n\tset useQuaternion ( value ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new THREE.Quaternion();\n\n\t\treturn function ( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\treturn function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function ( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}(),\n\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\treturn function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function ( vector ) {\n\n\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add:\", object, \"can't be added as a child of itself.\" );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object instanceof THREE.Object3D ) {\n\n\t\t\tif ( object.parent !== undefined ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add:\", object, \"is not an instance of THREE.Object3D.\" );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = undefined;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t},\n\n\tgetChildByName: function ( name, recursive ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name, recursive );\n\n\t},\n\n\tgetObjectById: function ( id, recursive ) {\n\n\t\tif ( this.id === id ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectById( id, recursive );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetObjectByName: function ( name, recursive ) {\n\n\t\tif ( this.name === name ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByName( name, recursive );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar scale = new THREE.Vector3();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t}\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t}\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t}\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t}\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\tif ( this.parent === undefined ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.3,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'ObjectExporter'\n\t\t\t}\n\t\t};\n\n\t\t//\n\n\t\tvar geometries = {};\n\n\t\tvar parseGeometry = function ( geometry ) {\n\n\t\t\tif ( output.geometries === undefined ) {\n\n\t\t\t\toutput.geometries = [];\n\n\t\t\t}\n\n\t\t\tif ( geometries[ geometry.uuid ] === undefined ) {\n\n\t\t\t\tvar json = geometry.toJSON();\n\n\t\t\t\tdelete json.metadata;\n\n\t\t\t\tgeometries[ geometry.uuid ] = json;\n\n\t\t\t\toutput.geometries.push( json );\n\n\t\t\t}\n\n\t\t\treturn geometry.uuid;\n\n\t\t};\n\n\t\t//\n\n\t\tvar materials = {};\n\n\t\tvar parseMaterial = function ( material ) {\n\n\t\t\tif ( output.materials === undefined ) {\n\n\t\t\t\toutput.materials = [];\n\n\t\t\t}\n\n\t\t\tif ( materials[ material.uuid ] === undefined ) {\n\n\t\t\t\tvar json = material.toJSON();\n\n\t\t\t\tdelete json.metadata;\n\n\t\t\t\tmaterials[ material.uuid ] = json;\n\n\t\t\t\toutput.materials.push( json );\n\n\t\t\t}\n\n\t\t\treturn material.uuid;\n\n\t\t};\n\n\t\t//\n\n\t\tvar parseObject = function ( object ) {\n\n\t\t\tvar data = {};\n\n\t\t\tdata.uuid = object.uuid;\n\t\t\tdata.type = object.type;\n\n\t\t\tif ( object.name !== '' ) data.name = object.name;\n\t\t\tif ( JSON.stringify( object.userData ) !== '{}' ) data.userData = object.userData;\n\t\t\tif ( object.visible !== true ) data.visible = object.visible;\n\n\t\t\tif ( object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tdata.fov = object.fov;\n\t\t\t\tdata.aspect = object.aspect;\n\t\t\t\tdata.near = object.near;\n\t\t\t\tdata.far = object.far;\n\n\t\t\t} else if ( object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tdata.left = object.left;\n\t\t\t\tdata.right = object.right;\n\t\t\t\tdata.top = object.top;\n\t\t\t\tdata.bottom = object.bottom;\n\t\t\t\tdata.near = object.near;\n\t\t\t\tdata.far = object.far;\n\n\t\t\t} else if ( object instanceof THREE.AmbientLight ) {\n\n\t\t\t\tdata.color = object.color.getHex();\n\n\t\t\t} else if ( object instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tdata.color = object.color.getHex();\n\t\t\t\tdata.intensity = object.intensity;\n\n\t\t\t} else if ( object instanceof THREE.PointLight ) {\n\n\t\t\t\tdata.color = object.color.getHex();\n\t\t\t\tdata.intensity = object.intensity;\n\t\t\t\tdata.distance = object.distance;\n\n\t\t\t} else if ( object instanceof THREE.SpotLight ) {\n\n\t\t\t\tdata.color = object.color.getHex();\n\t\t\t\tdata.intensity = object.intensity;\n\t\t\t\tdata.distance = object.distance;\n\t\t\t\tdata.angle = object.angle;\n\t\t\t\tdata.exponent = object.exponent;\n\n\t\t\t} else if ( object instanceof THREE.HemisphereLight ) {\n\n\t\t\t\tdata.color = object.color.getHex();\n\t\t\t\tdata.groundColor = object.groundColor.getHex();\n\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\n\t\t\t\tdata.material = parseMaterial( object.material );\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\n\t\t\t\tdata.material = parseMaterial( object.material );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tdata.material = parseMaterial( object.material );\n\n\t\t\t}\n\n\t\t\tdata.matrix = object.matrix.toArray();\n\n\t\t\tif ( object.children.length > 0 ) {\n\n\t\t\t\tdata.children = [];\n\n\t\t\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\t\t\tdata.children.push( parseObject( object.children[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\toutput.object = parseObject( this );\n\n\t\treturn output;\n\n\t},\n\n\tclone: function ( object, recursive ) {\n\n\t\tif ( object === undefined ) object = new THREE.Object3D();\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tobject.name = this.name;\n\n\t\tobject.up.copy( this.up );\n\n\t\tobject.position.copy( this.position );\n\t\tobject.quaternion.copy( this.quaternion );\n\t\tobject.scale.copy( this.scale );\n\n\t\tobject.renderDepth = this.renderDepth;\n\n\t\tobject.rotationAutoUpdate = this.rotationAutoUpdate;\n\n\t\tobject.matrix.copy( this.matrix );\n\t\tobject.matrixWorld.copy( this.matrixWorld );\n\n\t\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\n\t\tobject.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n\n\t\tobject.visible = this.visible;\n\n\t\tobject.castShadow = this.castShadow;\n\t\tobject.receiveShadow = this.receiveShadow;\n\n\t\tobject.frustumCulled = this.frustumCulled;\n\n\t\tobject.userData = JSON.parse( JSON.stringify( this.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tobject.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\n\nTHREE.Object3DIdCount = 0;\n\n// File:src/core/Projector.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Projector = function () {\n\n\tconsole.warn( 'THREE.Projector has been moved to /examples/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() has been removed.' );\n\n\t};\n\n};\n\n// File:src/core/Face3.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n\tthis.vertexNormals = normal instanceof Array ? normal : [];\n\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\n\tthis.vertexColors = color instanceof Array ? color : [];\n\n\tthis.vertexTangents = [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n};\n\nTHREE.Face3.prototype = {\n\n\tconstructor: THREE.Face3,\n\n\tclone: function () {\n\n\t\tvar face = new THREE.Face3( this.a, this.b, this.c );\n\n\t\tface.normal.copy( this.normal );\n\t\tface.color.copy( this.color );\n\n\t\tface.materialIndex = this.materialIndex;\n\n\t\tfor ( var i = 0, il = this.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tface.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tface.vertexColors[ i ] = this.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.vertexTangents.length; i < il; i ++ ) {\n\n\t\t\tface.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n};\n\n// File:src/core/Face4.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' )\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\n\n};\n\n// File:src/core/BufferAttribute.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferAttribute = function ( array, itemSize ) {\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\n\tthis.needsUpdate = false;\n\n};\n\nTHREE.BufferAttribute.prototype = {\n\n\tconstructor: THREE.BufferAttribute,\n\n\tget length () {\n\n\t\treturn this.array.length;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.array.set( value );\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index     ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index     ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index     ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new THREE.BufferAttribute( new this.array.constructor( this.array ), this.itemSize );\n\n\t}\n\n};\n\n//\n\nTHREE.Int8Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint8Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint8ClampedAttribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n\n};\n\nTHREE.Int16Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint16Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Int32Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Uint32Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Float32Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\nTHREE.Float64Attribute = function ( data, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\n\treturn new THREE.BufferAttribute( data, itemSize );\n\n};\n\n// File:src/core/BufferGeometry.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometry = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.attributes = {};\n\tthis.attributesKeys = [];\n\n\tthis.drawcalls = [];\n\tthis.offsets = this.drawcalls; // backwards compatibility\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n};\n\nTHREE.BufferGeometry.prototype = {\n\n\tconstructor: THREE.BufferGeometry,\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( attribute instanceof THREE.BufferAttribute === false ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.attributes[ name ] = { array: arguments[ 1 ], itemSize: arguments[ 2 ] };\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\t\tthis.attributesKeys = Object.keys( this.attributes );\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tthis.drawcalls.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tindex: indexOffset !== undefined ? indexOffset : 0\n\n\t\t} );\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcenter: function () {\n\n\t\t// TODO\n\n\t},\n\n\tfromGeometry: function ( geometry, settings ) {\n\n\t\tsettings = settings || { 'vertexColors': THREE.NoColors };\n\n\t\tvar vertices = geometry.vertices;\n\t\tvar faces = geometry.faces;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\t\tvar vertexColors = settings.vertexColors;\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexNormals = faces[ 0 ].vertexNormals.length == 3;\n\n\t\tvar positions = new Float32Array( faces.length * 3 * 3 );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\t\tvar normals = new Float32Array( faces.length * 3 * 3 );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\n\t\tif ( vertexColors !== THREE.NoColors ) {\n\n\t\t\tvar colors = new Float32Array( faces.length * 3 * 3 );\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\t\t}\n\n\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\tvar uvs = new Float32Array( faces.length * 3 * 2 );\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t\t}\n\n\t\tfor ( var i = 0, i2 = 0, i3 = 0; i < faces.length; i ++, i2 += 6, i3 += 9 ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = vertices[ face.a ];\n\t\t\tvar b = vertices[ face.b ];\n\t\t\tvar c = vertices[ face.c ];\n\n\t\t\tpositions[ i3     ] = a.x;\n\t\t\tpositions[ i3 + 1 ] = a.y;\n\t\t\tpositions[ i3 + 2 ] = a.z;\n\n\t\t\tpositions[ i3 + 3 ] = b.x;\n\t\t\tpositions[ i3 + 4 ] = b.y;\n\t\t\tpositions[ i3 + 5 ] = b.z;\n\n\t\t\tpositions[ i3 + 6 ] = c.x;\n\t\t\tpositions[ i3 + 7 ] = c.y;\n\t\t\tpositions[ i3 + 8 ] = c.z;\n\n\t\t\tif ( hasFaceVertexNormals === true ) {\n\n\t\t\t\tvar na = face.vertexNormals[ 0 ];\n\t\t\t\tvar nb = face.vertexNormals[ 1 ];\n\t\t\t\tvar nc = face.vertexNormals[ 2 ];\n\n\t\t\t\tnormals[ i3     ] = na.x;\n\t\t\t\tnormals[ i3 + 1 ] = na.y;\n\t\t\t\tnormals[ i3 + 2 ] = na.z;\n\n\t\t\t\tnormals[ i3 + 3 ] = nb.x;\n\t\t\t\tnormals[ i3 + 4 ] = nb.y;\n\t\t\t\tnormals[ i3 + 5 ] = nb.z;\n\n\t\t\t\tnormals[ i3 + 6 ] = nc.x;\n\t\t\t\tnormals[ i3 + 7 ] = nc.y;\n\t\t\t\tnormals[ i3 + 8 ] = nc.z;\n\n\t\t\t} else {\n\n\t\t\t\tvar n = face.normal;\n\n\t\t\t\tnormals[ i3     ] = n.x;\n\t\t\t\tnormals[ i3 + 1 ] = n.y;\n\t\t\t\tnormals[ i3 + 2 ] = n.z;\n\n\t\t\t\tnormals[ i3 + 3 ] = n.x;\n\t\t\t\tnormals[ i3 + 4 ] = n.y;\n\t\t\t\tnormals[ i3 + 5 ] = n.z;\n\n\t\t\t\tnormals[ i3 + 6 ] = n.x;\n\t\t\t\tnormals[ i3 + 7 ] = n.y;\n\t\t\t\tnormals[ i3 + 8 ] = n.z;\n\n\t\t\t}\n\n\t\t\tif ( vertexColors === THREE.FaceColors ) {\n\n\t\t\t\tvar fc = face.color;\n\n\t\t\t\tcolors[ i3     ] = fc.r;\n\t\t\t\tcolors[ i3 + 1 ] = fc.g;\n\t\t\t\tcolors[ i3 + 2 ] = fc.b;\n\n\t\t\t\tcolors[ i3 + 3 ] = fc.r;\n\t\t\t\tcolors[ i3 + 4 ] = fc.g;\n\t\t\t\tcolors[ i3 + 5 ] = fc.b;\n\n\t\t\t\tcolors[ i3 + 6 ] = fc.r;\n\t\t\t\tcolors[ i3 + 7 ] = fc.g;\n\t\t\t\tcolors[ i3 + 8 ] = fc.b;\n\n\t\t\t} else if ( vertexColors === THREE.VertexColors ) {\n\n\t\t\t\tvar vca = face.vertexColors[ 0 ];\n\t\t\t\tvar vcb = face.vertexColors[ 1 ];\n\t\t\t\tvar vcc = face.vertexColors[ 2 ];\n\n\t\t\t\tcolors[ i3     ] = vca.r;\n\t\t\t\tcolors[ i3 + 1 ] = vca.g;\n\t\t\t\tcolors[ i3 + 2 ] = vca.b;\n\n\t\t\t\tcolors[ i3 + 3 ] = vcb.r;\n\t\t\t\tcolors[ i3 + 4 ] = vcb.g;\n\t\t\t\tcolors[ i3 + 5 ] = vcb.b;\n\n\t\t\t\tcolors[ i3 + 6 ] = vcc.r;\n\t\t\t\tcolors[ i3 + 7 ] = vcc.g;\n\t\t\t\tcolors[ i3 + 8 ] = vcc.b;\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar uva = faceVertexUvs[ 0 ][ i ][ 0 ];\n\t\t\t\tvar uvb = faceVertexUvs[ 0 ][ i ][ 1 ];\n\t\t\t\tvar uvc = faceVertexUvs[ 0 ][ i ][ 2 ];\n\n\t\t\t\tuvs[ i2     ] = uva.x;\n\t\t\t\tuvs[ i2 + 1 ] = uva.y;\n\n\t\t\t\tuvs[ i2 + 2 ] = uvb.x;\n\t\t\t\tuvs[ i2 + 3 ] = uvb.y;\n\n\t\t\t\tuvs[ i2 + 4 ] = uvc.x;\n\t\t\t\tuvs[ i2 + 5 ] = uvc.y;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeBoundingSphere()\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions ) {\n\n\t\t\t\tvar bb = this.boundingBox;\n\t\t\t\tbb.makeEmpty();\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\t\t\t\tbb.expandByPoint( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\n\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new THREE.Box3();\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions ) {\n\n\t\t\t\tbox.makeEmpty();\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\t\t\t\tbox.expandByPoint( vector );\n\n\t\t\t\t}\n\n\t\t\t\tbox.center( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\n\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\n\n\t\t\t\t\tnormals[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC,\n\n\t\t\tpA = new THREE.Vector3(),\n\t\t\tpB = new THREE.Vector3(),\n\t\t\tpC = new THREE.Vector3(),\n\n\t\t\tcb = new THREE.Vector3(),\n\t\t\tab = new THREE.Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( attributes.index ) {\n\n\t\t\t\tvar indices = attributes.index.array;\n\n\t\t\t\tvar offsets = ( this.offsets.length > 0 ? this.offsets : [ { start: 0, count: indices.length, index: 0 } ] );\n\n\t\t\t\tfor ( var j = 0, jl = offsets.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar start = offsets[ j ].start;\n\t\t\t\t\tvar count = offsets[ j ].count;\n\t\t\t\t\tvar index = offsets[ j ].index;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = ( index + indices[ i     ] ) * 3;\n\t\t\t\t\t\tvB = ( index + indices[ i + 1 ] ) * 3;\n\t\t\t\t\t\tvC = ( index + indices[ i + 2 ] ) * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA     ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB     ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC     ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i     ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeTangents: function () {\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( this.attributes.index === undefined ||\n\t\t\t this.attributes.position === undefined ||\n\t\t\t this.attributes.normal === undefined ||\n\t\t\t this.attributes.uv === undefined ) {\n\n\t\t\tconsole.warn( 'Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar indices = this.attributes.index.array;\n\t\tvar positions = this.attributes.position.array;\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar uvs = this.attributes.uv.array;\n\n\t\tvar nVertices = positions.length / 3;\n\n\t\tif ( this.attributes.tangent === undefined ) {\n\n\t\t\tthis.addAttribute( 'tangent', new THREE.BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tvar tangents = this.attributes.tangent.array;\n\n\t\tvar tan1 = [], tan2 = [];\n\n\t\tfor ( var k = 0; k < nVertices; k ++ ) {\n\n\t\t\ttan1[ k ] = new THREE.Vector3();\n\t\t\ttan2[ k ] = new THREE.Vector3();\n\n\t\t}\n\n\t\tvar vA = new THREE.Vector3(),\n\t\t\tvB = new THREE.Vector3(),\n\t\t\tvC = new THREE.Vector3(),\n\n\t\t\tuvA = new THREE.Vector2(),\n\t\t\tuvB = new THREE.Vector2(),\n\t\t\tuvC = new THREE.Vector2(),\n\n\t\t\tx1, x2, y1, y2, z1, z2,\n\t\t\ts1, s2, t1, t2, r;\n\n\t\tvar sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tx1 = vB.x - vA.x;\n\t\t\tx2 = vC.x - vA.x;\n\n\t\t\ty1 = vB.y - vA.y;\n\t\t\ty2 = vC.y - vA.y;\n\n\t\t\tz1 = vB.z - vA.z;\n\t\t\tz2 = vC.z - vA.z;\n\n\t\t\ts1 = uvB.x - uvA.x;\n\t\t\ts2 = uvC.x - uvA.x;\n\n\t\t\tt1 = uvB.y - uvA.y;\n\t\t\tt2 = uvC.y - uvA.y;\n\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\n\n\t\t\tsdir.set(\n\t\t\t\t( t2 * x1 - t1 * x2 ) * r,\n\t\t\t\t( t2 * y1 - t1 * y2 ) * r,\n\t\t\t\t( t2 * z1 - t1 * z2 ) * r\n\t\t\t);\n\n\t\t\ttdir.set(\n\t\t\t\t( s1 * x2 - s2 * x1 ) * r,\n\t\t\t\t( s1 * y2 - s2 * y1 ) * r,\n\t\t\t\t( s1 * z2 - s2 * z1 ) * r\n\t\t\t);\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tvar i, il;\n\t\tvar j, jl;\n\t\tvar iA, iB, iC;\n\n\t\tif ( this.drawcalls.length === 0 ) {\n\n\t\t\tthis.addDrawCall( 0, indices.length, 0 );\n\n\t\t}\n\n\t\tvar drawcalls = this.drawcalls;\n\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\n\n\t\t\tvar start = drawcalls[ j ].start;\n\t\t\tvar count = drawcalls[ j ].count;\n\t\t\tvar index = drawcalls[ j ].index;\n\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\tiA = index + indices[ i ];\n\t\t\t\tiB = index + indices[ i + 1 ];\n\t\t\t\tiC = index + indices[ i + 2 ];\n\n\t\t\t\thandleTriangle( iA, iB, iC );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\n\t\tvar n = new THREE.Vector3(), n2 = new THREE.Vector3();\n\t\tvar w, t, test;\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tt = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\ttest = tmp2.dot( tan2[ v ] );\n\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4     ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\n\n\t\t\tvar start = drawcalls[ j ].start;\n\t\t\tvar count = drawcalls[ j ].count;\n\t\t\tvar index = drawcalls[ j ].index;\n\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\tiA = index + indices[ i ];\n\t\t\t\tiB = index + indices[ i + 1 ];\n\t\t\t\tiC = index + indices[ i + 2 ];\n\n\t\t\t\thandleVertex( iA );\n\t\t\t\thandleVertex( iB );\n\t\t\t\thandleVertex( iC );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t/*\n\t\tcomputeOffsets\n\t\tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\n\t\tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\n\t\tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\n\t\tindexBufferSize - Defaults to 65535, but allows for larger or smaller chunks.\n\t*/\n\tcomputeOffsets: function ( indexBufferSize ) {\n\n\t\tvar size = indexBufferSize;\n\t\tif ( indexBufferSize === undefined )\n\t\t\tsize = 65535; //WebGL limits type of index buffer values to 16-bit.\n\n\t\tvar s = Date.now();\n\n\t\tvar indices = this.attributes.index.array;\n\t\tvar vertices = this.attributes.position.array;\n\n\t\tvar verticesCount = ( vertices.length / 3 );\n\t\tvar facesCount = ( indices.length / 3 );\n\n\t\t/*\n\t\tconsole.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\n\t\tconsole.log(\"Faces to process: \"+(indices.length/3));\n\t\tconsole.log(\"Reordering \"+verticesCount+\" vertices.\");\n\t\t*/\n\n\t\tvar sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\n\t\tvar indexPtr = 0;\n\t\tvar vertexPtr = 0;\n\n\t\tvar offsets = [ { start:0, count:0, index:0 } ];\n\t\tvar offset = offsets[ 0 ];\n\n\t\tvar duplicatedVertices = 0;\n\t\tvar newVerticeMaps = 0;\n\t\tvar faceVertices = new Int32Array( 6 );\n\t\tvar vertexMap = new Int32Array( vertices.length );\n\t\tvar revVertexMap = new Int32Array( vertices.length );\n\t\tfor ( var j = 0; j < vertices.length; j ++ ) { vertexMap[ j ] = - 1; revVertexMap[ j ] = - 1; }\n\n\t\t/*\n\t\t\tTraverse every face and reorder vertices in the proper offsets of 65k.\n\t\t\tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\n\t\t*/\n\t\tfor ( var findex = 0; findex < facesCount; findex ++ ) {\n\t\t\tnewVerticeMaps = 0;\n\n\t\t\tfor ( var vo = 0; vo < 3; vo ++ ) {\n\t\t\t\tvar vid = indices[ findex * 3 + vo ];\n\t\t\t\tif ( vertexMap[ vid ] == - 1 ) {\n\t\t\t\t\t//Unmapped vertice\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\n\t\t\t\t\tnewVerticeMaps ++;\n\t\t\t\t} else if ( vertexMap[ vid ] < offset.index ) {\n\t\t\t\t\t//Reused vertices from previous block (duplicate)\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\n\t\t\t\t\tduplicatedVertices ++;\n\t\t\t\t} else {\n\t\t\t\t\t//Reused vertice in the current block\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = vertexMap[ vid ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar faceMax = vertexPtr + newVerticeMaps;\n\t\t\tif ( faceMax > ( offset.index + size ) ) {\n\t\t\t\tvar new_offset = { start:indexPtr, count:0, index:vertexPtr };\n\t\t\t\toffsets.push( new_offset );\n\t\t\t\toffset = new_offset;\n\n\t\t\t\t//Re-evaluate reused vertices in light of new offset.\n\t\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\n\t\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\n\t\t\t\t\tif ( new_vid > - 1 && new_vid < offset.index )\n\t\t\t\t\t\tfaceVertices[ v + 1 ] = - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Reindex the face.\n\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\n\t\t\t\tvar vid = faceVertices[ v ];\n\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\n\n\t\t\t\tif ( new_vid === - 1 )\n\t\t\t\t\tnew_vid = vertexPtr ++;\n\n\t\t\t\tvertexMap[ vid ] = new_vid;\n\t\t\t\trevVertexMap[ new_vid ] = vid;\n\t\t\t\tsortedIndices[ indexPtr ++ ] = new_vid - offset.index; //XXX overflows at 16bit\n\t\t\t\toffset.count ++;\n\t\t\t}\n\t\t}\n\n\t\t/* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\n\t\tthis.reorderBuffers( sortedIndices, revVertexMap, vertexPtr );\n\t\tthis.offsets = offsets;\n\n\t\t/*\n\t\tvar orderTime = Date.now();\n\t\tconsole.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\n\t\tconsole.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\n\t\tconsole.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\n\t\tconsole.log(\"Draw offsets: \"+offsets.length);\n\t\t*/\n\n\t\treturn offsets;\n\t},\n\n\tmerge: function () {\n\n\t\tconsole.log( 'BufferGeometry.merge(): TODO' );\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal.array;\n\n\t\tvar x, y, z, n;\n\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\tx = normals[ i ];\n\t\t\ty = normals[ i + 1 ];\n\t\t\tz = normals[ i + 2 ];\n\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tnormals[ i     ] *= n;\n\t\t\tnormals[ i + 1 ] *= n;\n\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t}\n\n\t},\n\n\t/*\n\t\treoderBuffers:\n\t\tReorder attributes based on a new indexBuffer and indexMap.\n\t\tindexBuffer - Uint16Array of the new ordered indices.\n\t\tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\n\t\tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\n\t*/\n\treorderBuffers: function ( indexBuffer, indexMap, vertexCount ) {\n\n\t\t/* Create a copy of all attributes for reordering. */\n\t\tvar sortedAttributes = {};\n\t\tfor ( var attr in this.attributes ) {\n\t\t\tif ( attr == 'index' )\n\t\t\t\tcontinue;\n\t\t\tvar sourceArray = this.attributes[ attr ].array;\n\t\t\tsortedAttributes[ attr ] = new sourceArray.constructor( this.attributes[ attr ].itemSize * vertexCount );\n\t\t}\n\n\t\t/* Move attribute positions based on the new index map */\n\t\tfor ( var new_vid = 0; new_vid < vertexCount; new_vid ++ ) {\n\t\t\tvar vid = indexMap[ new_vid ];\n\t\t\tfor ( var attr in this.attributes ) {\n\t\t\t\tif ( attr == 'index' )\n\t\t\t\t\tcontinue;\n\t\t\t\tvar attrArray = this.attributes[ attr ].array;\n\t\t\t\tvar attrSize = this.attributes[ attr ].itemSize;\n\t\t\t\tvar sortedAttr = sortedAttributes[ attr ];\n\t\t\t\tfor ( var k = 0; k < attrSize; k ++ )\n\t\t\t\t\tsortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\n\t\t\t}\n\t\t}\n\n\t\t/* Carry the new sorted buffers locally */\n\t\tthis.attributes[ 'index' ].array = indexBuffer;\n\t\tfor ( var attr in this.attributes ) {\n\t\t\tif ( attr == 'index' )\n\t\t\t\tcontinue;\n\t\t\tthis.attributes[ attr ].array = sortedAttributes[ attr ];\n\t\t\tthis.attributes[ attr ].numItems = this.attributes[ attr ].itemSize * vertexCount;\n\t\t}\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.0,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometryExporter'\n\t\t\t},\n\t\t\tuuid: this.uuid,\n\t\t\ttype: this.type,\n\t\t\tdata: {\n\t\t\t\tattributes: {}\n\t\t\t}\n\t\t};\n\n\t\tvar attributes = this.attributes;\n\t\tvar offsets = this.offsets;\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = [], typeArray = attribute.array;\n\n\t\t\tfor ( var i = 0, l = typeArray.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = typeArray[ i ];\n\n\t\t\t}\n\n\t\t\toutput.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t}\n\n\t\t}\n\n\t\tif ( offsets.length > 0 ) {\n\n\t\t\toutput.data.offsets = JSON.parse( JSON.stringify( offsets ) );\n\n\t\t}\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\toutput.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t}\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tfor ( var attr in this.attributes ) {\n\n\t\t\tvar sourceAttr = this.attributes[ attr ];\n\t\t\tgeometry.addAttribute( attr, sourceAttr.clone() );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\n\n\t\t\tvar offset = this.offsets[ i ];\n\n\t\t\tgeometry.offsets.push( {\n\n\t\t\t\tstart: offset.start,\n\t\t\t\tindex: offset.index,\n\t\t\t\tcount: offset.count\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\n\n// File:src/core/Geometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://exocortex.com\n */\n\nTHREE.Geometry = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];  // one-to-one vertex colors, used in Points and Line\n\n\tthis.faces = [];\n\n\tthis.faceVertexUvs = [ [] ];\n\n\tthis.morphTargets = [];\n\tthis.morphColors = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.hasTangents = false;\n\n\tthis.dynamic = true; // the intermediate typed arrays will be deleted when set to false\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.elementsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.tangentsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\n\tthis.groupsNeedUpdate = false;\n\n};\n\nTHREE.Geometry.prototype = {\n\n\tconstructor: THREE.Geometry,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox instanceof THREE.Box3 ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere instanceof THREE.Sphere ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t},\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar vertices = attributes.position.array;\n\t\tvar indices = attributes.index !== undefined ? attributes.index.array : undefined;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\n\t\tfor ( var i = 0, j = 0; i < vertices.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar addFace = function ( a, b, c ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, vertexNormals, vertexColors ) );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ], tempUVs[ b ], tempUVs[ c ] ] );\n\n\t\t};\n\n\t\tif ( indices !== undefined ) {\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\n\n\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\toffset.addVectors( this.boundingBox.min, this.boundingBox.max );\n\t\toffset.multiplyScalar( - 0.5 );\n\n\t\tthis.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );\n\t\tthis.computeBoundingBox();\n\n\t\treturn offset;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new THREE.Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC, vD;\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3(),\n\t\t\t\tdb = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.vertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\tface.vertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\tface.vertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new THREE.Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeTangents: function () {\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// tangents go to vertices\n\n\t\tvar f, fl, v, vl, i, il, vertexIndex,\n\t\t\tface, uv, vA, vB, vC, uvA, uvB, uvC,\n\t\t\tx1, x2, y1, y2, z1, z2,\n\t\t\ts1, s2, t1, t2, r, t, test,\n\t\t\ttan1 = [], tan2 = [],\n\t\t\tsdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\n\t\t\ttmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\n\t\t\tn = new THREE.Vector3(), w;\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\ttan1[ v ] = new THREE.Vector3();\n\t\t\ttan2[ v ] = new THREE.Vector3();\n\n\t\t}\n\n\t\tfunction handleTriangle( context, a, b, c, ua, ub, uc ) {\n\n\t\t\tvA = context.vertices[ a ];\n\t\t\tvB = context.vertices[ b ];\n\t\t\tvC = context.vertices[ c ];\n\n\t\t\tuvA = uv[ ua ];\n\t\t\tuvB = uv[ ub ];\n\t\t\tuvC = uv[ uc ];\n\n\t\t\tx1 = vB.x - vA.x;\n\t\t\tx2 = vC.x - vA.x;\n\t\t\ty1 = vB.y - vA.y;\n\t\t\ty2 = vC.y - vA.y;\n\t\t\tz1 = vB.z - vA.z;\n\t\t\tz2 = vC.z - vA.z;\n\n\t\t\ts1 = uvB.x - uvA.x;\n\t\t\ts2 = uvC.x - uvA.x;\n\t\t\tt1 = uvB.y - uvA.y;\n\t\t\tt2 = uvC.y - uvA.y;\n\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\n\t\t\tsdir.set( ( t2 * x1 - t1 * x2 ) * r,\n\t\t\t\t\t  ( t2 * y1 - t1 * y2 ) * r,\n\t\t\t\t\t  ( t2 * z1 - t1 * z2 ) * r );\n\t\t\ttdir.set( ( s1 * x2 - s2 * x1 ) * r,\n\t\t\t\t\t  ( s1 * y2 - s2 * y1 ) * r,\n\t\t\t\t\t  ( s1 * z2 - s2 * z1 ) * r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\t\t\tuv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\n\n\t\t\thandleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\n\n\t\t}\n\n\t\tvar faceIndex = [ 'a', 'b', 'c', 'd' ];\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tfor ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i ++ ) {\n\n\t\t\t\tn.copy( face.vertexNormals[ i ] );\n\n\t\t\t\tvertexIndex = face[ faceIndex[ i ] ];\n\n\t\t\t\tt = tan1[ vertexIndex ];\n\n\t\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy( t );\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t\t// Calculate handedness\n\n\t\t\t\ttmp2.crossVectors( face.vertexNormals[ i ], t );\n\t\t\t\ttest = tmp2.dot( tan2[ vertexIndex ] );\n\t\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\t\tface.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.hasTangents = true;\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\tvertexOffset = this.vertices.length,\n\t\tvertices1 = this.vertices,\n\t\tvertices2 = geometry.vertices,\n\t\tfaces1 = this.faces,\n\t\tfaces2 = geometry.faces,\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i,il, face;\n\t\tvar indices, k, j, jl, u;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t};\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\tvar dupIndex = - 1;\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\t\t\t\tif ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tdupIndex = n;\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.0,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometryExporter'\n\t\t\t},\n\t\t\tuuid: this.uuid,\n\t\t\ttype: this.type\n\t\t};\n\n\t\tif ( this.name !== \"\" ) output.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) output[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 );\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\n\n\t\t\t/*\n\t\t\tif ( hasMaterial ) {\n\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t}\n\t\t\t*/\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\toutput.data = {};\n\n\t\toutput.data.vertices = vertices;\n\t\toutput.data.normals = normals;\n\t\tif ( colors.length > 0 ) output.data.colors = colors;\n\t\tif ( uvs.length > 0 ) output.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\toutput.data.faces = faces;\n\n\t\t//\n\n\t\treturn output;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar geometry = new THREE.Geometry();\n\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tgeometry.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\tvar faces = this.faces;\n\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tgeometry.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\n\n\t\tfor ( var i = 0, il = uvs.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs[ i ], uvCopy = [];\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );\n\n\t\t\t}\n\n\t\t\tgeometry.faceVertexUvs[ 0 ].push( uvCopy );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\n\nTHREE.GeometryIdCount = 0;\n\n// File:src/cameras/Camera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.Camera = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new THREE.Matrix4();\n\tthis.projectionMatrix = new THREE.Matrix4();\n\n};\n\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Camera.prototype.getWorldDirection = function () {\n\n\tvar quaternion = new THREE.Quaternion();\n\n\treturn function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\tthis.getWorldQuaternion( quaternion );\n\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t}\n\n}();\n\nTHREE.Camera.prototype.lookAt = function () {\n\n\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\tvar m1 = new THREE.Matrix4();\n\n\treturn function ( vector ) {\n\n\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t};\n\n}();\n\nTHREE.Camera.prototype.clone = function ( camera ) {\n\n\tif ( camera === undefined ) camera = new THREE.Camera();\n\n\tTHREE.Object3D.prototype.clone.call( this, camera );\n\n\tcamera.matrixWorldInverse.copy( this.matrixWorldInverse );\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\n\n\treturn camera;\n};\n\n// File:src/cameras/CubeCamera.js\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\n\n\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\n\n\t\trenderTarget.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t};\n\n};\n\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\n\n// File:src/cameras/OrthographicCamera.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\n\n\tTHREE.Camera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n};\n\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\n\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\n\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\tvar cx = ( this.right + this.left ) / 2;\n\tvar cy = ( this.top + this.bottom ) / 2;\n\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\n\n};\n\nTHREE.OrthographicCamera.prototype.clone = function () {\n\n\tvar camera = new THREE.OrthographicCamera();\n\n\tTHREE.Camera.prototype.clone.call( this, camera );\n\n\tcamera.zoom = this.zoom;\n\n\tcamera.left = this.left;\n\tcamera.right = this.right;\n\tcamera.top = this.top;\n\tcamera.bottom = this.bottom;\n\n\tcamera.near = this.near;\n\tcamera.far = this.far;\n\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\n\n\treturn camera;\n};\n\n// File:src/cameras/PerspectiveCamera.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\n\n\tTHREE.Camera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.zoom = 1;\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n};\n\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\n\n\n/**\n * Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (fullframe) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\n */\n\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\n\n\tif ( frameHeight === undefined ) frameHeight = 24;\n\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\n\tthis.updateProjectionMatrix();\n\n}\n\n\n/**\n * Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.\n */\n\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\tthis.fullWidth = fullWidth;\n\tthis.fullHeight = fullHeight;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.updateProjectionMatrix();\n\n};\n\n\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\n\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\n\n\tif ( this.fullWidth ) {\n\n\t\tvar aspect = this.fullWidth / this.fullHeight;\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\n\t\tvar bottom = - top;\n\t\tvar left = aspect * bottom;\n\t\tvar right = aspect * top;\n\t\tvar width = Math.abs( right - left );\n\t\tvar height = Math.abs( top - bottom );\n\n\t\tthis.projectionMatrix.makeFrustum(\n\t\t\tleft + this.x * width / this.fullWidth,\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\n\t\t\ttop - this.y * height / this.fullHeight,\n\t\t\tthis.near,\n\t\t\tthis.far\n\t\t);\n\n\t} else {\n\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\n\n\t}\n\n};\n\nTHREE.PerspectiveCamera.prototype.clone = function () {\n\n\tvar camera = new THREE.PerspectiveCamera();\n\n\tTHREE.Camera.prototype.clone.call( this, camera );\n\n\tcamera.zoom = this.zoom;\n\n\tcamera.fov = this.fov;\n\tcamera.aspect = this.aspect;\n\tcamera.near = this.near;\n\tcamera.far = this.far;\n\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\n\n\treturn camera;\n\n};\n\n// File:src/lights/Light.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Light = function ( color ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Light';\n\t\n\tthis.color = new THREE.Color( color );\n\n};\n\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Light.prototype.clone = function ( light ) {\n\n\tif ( light === undefined ) light = new THREE.Light();\n\n\tTHREE.Object3D.prototype.clone.call( this, light );\n\n\tlight.color.copy( this.color );\n\n\treturn light;\n\n};\n\n// File:src/lights/AmbientLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AmbientLight = function ( color ) {\n\n\tTHREE.Light.call( this, color );\n\n\tthis.type = 'AmbientLight';\n\n};\n\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.AmbientLight.prototype.clone = function () {\n\n\tvar light = new THREE.AmbientLight();\n\n\tTHREE.Light.prototype.clone.call( this, light );\n\n\treturn light;\n\n};\n\n// File:src/lights/AreaLight.js\n\n/**\n * @author MPanknin / http://www.redplant.de/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.AreaLight = function ( color, intensity ) {\n\n\tTHREE.Light.call( this, color );\n\n\tthis.type = 'AreaLight';\n\n\tthis.normal = new THREE.Vector3( 0, - 1, 0 );\n\tthis.right = new THREE.Vector3( 1, 0, 0 );\n\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n\tthis.width = 1.0;\n\tthis.height = 1.0;\n\n\tthis.constantAttenuation = 1.5;\n\tthis.linearAttenuation = 0.5;\n\tthis.quadraticAttenuation = 0.1;\n\n};\n\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\n\n\n// File:src/lights/DirectionalLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DirectionalLight = function ( color, intensity ) {\n\n\tTHREE.Light.call( this, color );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.target = new THREE.Object3D();\n\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n\tthis.castShadow = false;\n\tthis.onlyShadow = false;\n\n\t//\n\n\tthis.shadowCameraNear = 50;\n\tthis.shadowCameraFar = 5000;\n\n\tthis.shadowCameraLeft = - 500;\n\tthis.shadowCameraRight = 500;\n\tthis.shadowCameraTop = 500;\n\tthis.shadowCameraBottom = - 500;\n\n\tthis.shadowCameraVisible = false;\n\n\tthis.shadowBias = 0;\n\tthis.shadowDarkness = 0.5;\n\n\tthis.shadowMapWidth = 512;\n\tthis.shadowMapHeight = 512;\n\n\t//\n\n\tthis.shadowCascade = false;\n\n\tthis.shadowCascadeOffset = new THREE.Vector3( 0, 0, - 1000 );\n\tthis.shadowCascadeCount = 2;\n\n\tthis.shadowCascadeBias = [ 0, 0, 0 ];\n\tthis.shadowCascadeWidth = [ 512, 512, 512 ];\n\tthis.shadowCascadeHeight = [ 512, 512, 512 ];\n\n\tthis.shadowCascadeNearZ = [ - 1.000, 0.990, 0.998 ];\n\tthis.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];\n\n\tthis.shadowCascadeArray = [];\n\n\t//\n\n\tthis.shadowMap = null;\n\tthis.shadowMapSize = null;\n\tthis.shadowCamera = null;\n\tthis.shadowMatrix = null;\n\n};\n\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.DirectionalLight.prototype.clone = function () {\n\n\tvar light = new THREE.DirectionalLight();\n\n\tTHREE.Light.prototype.clone.call( this, light );\n\n\tlight.target = this.target.clone();\n\n\tlight.intensity = this.intensity;\n\n\tlight.castShadow = this.castShadow;\n\tlight.onlyShadow = this.onlyShadow;\n\n\t//\n\n\tlight.shadowCameraNear = this.shadowCameraNear;\n\tlight.shadowCameraFar = this.shadowCameraFar;\n\n\tlight.shadowCameraLeft = this.shadowCameraLeft;\n\tlight.shadowCameraRight = this.shadowCameraRight;\n\tlight.shadowCameraTop = this.shadowCameraTop;\n\tlight.shadowCameraBottom = this.shadowCameraBottom;\n\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\n\n\tlight.shadowBias = this.shadowBias;\n\tlight.shadowDarkness = this.shadowDarkness;\n\n\tlight.shadowMapWidth = this.shadowMapWidth;\n\tlight.shadowMapHeight = this.shadowMapHeight;\n\n\t//\n\n\tlight.shadowCascade = this.shadowCascade;\n\n\tlight.shadowCascadeOffset.copy( this.shadowCascadeOffset );\n\tlight.shadowCascadeCount = this.shadowCascadeCount;\n\n\tlight.shadowCascadeBias = this.shadowCascadeBias.slice( 0 );\n\tlight.shadowCascadeWidth = this.shadowCascadeWidth.slice( 0 );\n\tlight.shadowCascadeHeight = this.shadowCascadeHeight.slice( 0 );\n\n\tlight.shadowCascadeNearZ = this.shadowCascadeNearZ.slice( 0 );\n\tlight.shadowCascadeFarZ  = this.shadowCascadeFarZ.slice( 0 );\n\n\treturn light;\n\n};\n\n// File:src/lights/HemisphereLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\n\n\tTHREE.Light.call( this, skyColor );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.position.set( 0, 100, 0 );\n\n\tthis.groundColor = new THREE.Color( groundColor );\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\n\n};\n\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.HemisphereLight.prototype.clone = function () {\n\n\tvar light = new THREE.HemisphereLight();\n\n\tTHREE.Light.prototype.clone.call( this, light );\n\n\tlight.groundColor.copy( this.groundColor );\n\tlight.intensity = this.intensity;\n\n\treturn light;\n\n};\n\n// File:src/lights/PointLight.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointLight = function ( color, intensity, distance ) {\n\n\tTHREE.Light.call( this, color );\n\n\tthis.type = 'PointLight';\n\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\n};\n\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.PointLight.prototype.clone = function () {\n\n\tvar light = new THREE.PointLight();\n\n\tTHREE.Light.prototype.clone.call( this, light );\n\n\tlight.intensity = this.intensity;\n\tlight.distance = this.distance;\n\n\treturn light;\n\n};\n\n// File:src/lights/SpotLight.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent ) {\n\n\tTHREE.Light.call( this, color );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.target = new THREE.Object3D();\n\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\n\n\tthis.castShadow = false;\n\tthis.onlyShadow = false;\n\n\t//\n\n\tthis.shadowCameraNear = 50;\n\tthis.shadowCameraFar = 5000;\n\tthis.shadowCameraFov = 50;\n\n\tthis.shadowCameraVisible = false;\n\n\tthis.shadowBias = 0;\n\tthis.shadowDarkness = 0.5;\n\n\tthis.shadowMapWidth = 512;\n\tthis.shadowMapHeight = 512;\n\n\t//\n\n\tthis.shadowMap = null;\n\tthis.shadowMapSize = null;\n\tthis.shadowCamera = null;\n\tthis.shadowMatrix = null;\n\n};\n\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\n\nTHREE.SpotLight.prototype.clone = function () {\n\n\tvar light = new THREE.SpotLight();\n\n\tTHREE.Light.prototype.clone.call( this, light );\n\n\tlight.target = this.target.clone();\n\n\tlight.intensity = this.intensity;\n\tlight.distance = this.distance;\n\tlight.angle = this.angle;\n\tlight.exponent = this.exponent;\n\n\tlight.castShadow = this.castShadow;\n\tlight.onlyShadow = this.onlyShadow;\n\n\t//\n\n\tlight.shadowCameraNear = this.shadowCameraNear;\n\tlight.shadowCameraFar = this.shadowCameraFar;\n\tlight.shadowCameraFov = this.shadowCameraFov;\n\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\n\n\tlight.shadowBias = this.shadowBias;\n\tlight.shadowDarkness = this.shadowDarkness;\n\n\tlight.shadowMapWidth = this.shadowMapWidth;\n\tlight.shadowMapHeight = this.shadowMapHeight;\n\n\treturn light;\n\n};\n\n// File:src/loaders/Cache.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Cache = function () {\n\n\tthis.files = {};\n\n};\n\nTHREE.Cache.prototype = {\n\n\tconstructor: THREE.Cache,\n\n\tadd: function ( key, file ) {\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {}\n\n\t}\n\n};\n\n// File:src/loaders/Loader.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Loader = function ( showStatus ) {\n\n\tthis.showStatus = showStatus;\n\tthis.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\n\n\tthis.imageLoader = new THREE.ImageLoader();\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n};\n\nTHREE.Loader.prototype = {\n\n\tconstructor: THREE.Loader,\n\n\tcrossOrigin: undefined,\n\n\taddStatusElement: function () {\n\n\t\tvar e = document.createElement( 'div' );\n\n\t\te.style.position = 'absolute';\n\t\te.style.right = '0px';\n\t\te.style.top = '0px';\n\t\te.style.fontSize = '0.8em';\n\t\te.style.textAlign = 'left';\n\t\te.style.background = 'rgba(0,0,0,0.25)';\n\t\te.style.color = '#fff';\n\t\te.style.width = '120px';\n\t\te.style.padding = '0.5em 0.5em 0.5em 0.5em';\n\t\te.style.zIndex = 1000;\n\n\t\te.innerHTML = 'Loading ...';\n\n\t\treturn e;\n\n\t},\n\n\tupdateProgress: function ( progress ) {\n\n\t\tvar message = 'Loaded ';\n\n\t\tif ( progress.total ) {\n\n\t\t\tmessage += ( 100 * progress.loaded / progress.total ).toFixed( 0 ) + '%';\n\n\n\t\t} else {\n\n\t\t\tmessage += ( progress.loaded / 1024 ).toFixed( 2 ) + ' KB';\n\n\t\t}\n\n\t\tthis.statusDomElement.innerHTML = message;\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t},\n\n\tinitMaterials: function ( materials, texturePath ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tneedsTangents: function ( materials ) {\n\n\t\tfor ( var i = 0, il = materials.length; i < il; i ++ ) {\n\n\t\t\tvar m = materials[ i ];\n\n\t\t\tif ( m instanceof THREE.ShaderMaterial ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\tcreateMaterial: function ( m, texturePath ) {\n\n\t\tvar scope = this;\n\n\t\tfunction nearest_pow2( n ) {\n\n\t\t\tvar l = Math.log( n ) / Math.LN2;\n\t\t\treturn Math.pow( 2, Math.round(  l ) );\n\n\t\t}\n\n\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\n\n\t\t\tvar fullPath = texturePath + sourceFile;\n\n\t\t\tvar texture;\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\n\n\t\t\tif ( loader !== null ) {\n\n\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t} else {\n\n\t\t\t\ttexture = new THREE.Texture();\n\n\t\t\t\tloader = scope.imageLoader;\n\t\t\t\tloader.crossOrigin = scope.crossOrigin;\n\t\t\t\tloader.load( fullPath, function ( image ) {\n\n\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\n\t\t\t\t\t\t THREE.Math.isPowerOfTwo( image.height ) === false ) {\n\n\t\t\t\t\t\tvar width = nearest_pow2( image.width );\n\t\t\t\t\t\tvar height = nearest_pow2( image.height );\n\n\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\t\ttexture.image = canvas;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\ttexture.sourceFile = sourceFile;\n\n\t\t\tif ( repeat ) {\n\n\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\n\n\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t}\n\n\t\t\tif ( offset ) {\n\n\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( wrap ) {\n\n\t\t\t\tvar wrapMap = {\n\t\t\t\t\t'repeat': THREE.RepeatWrapping,\n\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\n\t\t\t\t}\n\n\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\n\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\n\n\t\t\t}\n\n\t\t\tif ( anisotropy ) {\n\n\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t}\n\n\t\t\twhere[ name ] = texture;\n\n\t\t}\n\n\t\tfunction rgb2hex( rgb ) {\n\n\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\n\n\t\t}\n\n\t\t// defaults\n\n\t\tvar mtype = 'MeshLambertMaterial';\n\t\tvar mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\n\n\t\t// parameters from model file\n\n\t\tif ( m.shading ) {\n\n\t\t\tvar shading = m.shading.toLowerCase();\n\n\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\n\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\n\n\t\t}\n\n\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\n\n\t\t\tmpars.blending = THREE[ m.blending ];\n\n\t\t}\n\n\t\tif ( m.transparent !== undefined || m.opacity < 1.0 ) {\n\n\t\t\tmpars.transparent = m.transparent;\n\n\t\t}\n\n\t\tif ( m.depthTest !== undefined ) {\n\n\t\t\tmpars.depthTest = m.depthTest;\n\n\t\t}\n\n\t\tif ( m.depthWrite !== undefined ) {\n\n\t\t\tmpars.depthWrite = m.depthWrite;\n\n\t\t}\n\n\t\tif ( m.visible !== undefined ) {\n\n\t\t\tmpars.visible = m.visible;\n\n\t\t}\n\n\t\tif ( m.flipSided !== undefined ) {\n\n\t\t\tmpars.side = THREE.BackSide;\n\n\t\t}\n\n\t\tif ( m.doubleSided !== undefined ) {\n\n\t\t\tmpars.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tif ( m.wireframe !== undefined ) {\n\n\t\t\tmpars.wireframe = m.wireframe;\n\n\t\t}\n\n\t\tif ( m.vertexColors !== undefined ) {\n\n\t\t\tif ( m.vertexColors === 'face' ) {\n\n\t\t\t\tmpars.vertexColors = THREE.FaceColors;\n\n\t\t\t} else if ( m.vertexColors ) {\n\n\t\t\t\tmpars.vertexColors = THREE.VertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// colors\n\n\t\tif ( m.colorDiffuse ) {\n\n\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\n\n\t\t} else if ( m.DbgColor ) {\n\n\t\t\tmpars.color = m.DbgColor;\n\n\t\t}\n\n\t\tif ( m.colorSpecular ) {\n\n\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\n\n\t\t}\n\n\t\tif ( m.colorAmbient ) {\n\n\t\t\tmpars.ambient = rgb2hex( m.colorAmbient );\n\n\t\t}\n\n\t\tif ( m.colorEmissive ) {\n\n\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\n\n\t\t}\n\n\t\t// modifiers\n\n\t\tif ( m.transparency ) {\n\n\t\t\tmpars.opacity = m.transparency;\n\n\t\t}\n\n\t\tif ( m.specularCoef ) {\n\n\t\t\tmpars.shininess = m.specularCoef;\n\n\t\t}\n\n\t\t// textures\n\n\t\tif ( m.mapDiffuse && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\n\t\t}\n\n\t\tif ( m.mapLight && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\n\t\t}\n\n\t\tif ( m.mapBump && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\n\t\t}\n\n\t\tif ( m.mapNormal && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\n\t\t}\n\n\t\tif ( m.mapSpecular && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\n\t\t}\n\n\t\tif ( m.mapAlpha && texturePath ) {\n\n\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( m.mapBumpScale ) {\n\n\t\t\tmpars.bumpScale = m.mapBumpScale;\n\n\t\t}\n\n\t\t// special case for normal mapped material\n\n\t\tif ( m.mapNormal ) {\n\n\t\t\tvar shader = THREE.ShaderLib[ 'normalmap' ];\n\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\tuniforms[ 'tNormal' ].value = mpars.normalMap;\n\n\t\t\tif ( m.mapNormalFactor ) {\n\n\t\t\t\tuniforms[ 'uNormalScale' ].value.set( m.mapNormalFactor, m.mapNormalFactor );\n\n\t\t\t}\n\n\t\t\tif ( mpars.map ) {\n\n\t\t\t\tuniforms[ 'tDiffuse' ].value = mpars.map;\n\t\t\t\tuniforms[ 'enableDiffuse' ].value = true;\n\n\t\t\t}\n\n\t\t\tif ( mpars.specularMap ) {\n\n\t\t\t\tuniforms[ 'tSpecular' ].value = mpars.specularMap;\n\t\t\t\tuniforms[ 'enableSpecular' ].value = true;\n\n\t\t\t}\n\n\t\t\tif ( mpars.lightMap ) {\n\n\t\t\t\tuniforms[ 'tAO' ].value = mpars.lightMap;\n\t\t\t\tuniforms[ 'enableAO' ].value = true;\n\n\t\t\t}\n\n\t\t\t// for the moment don't handle displacement texture\n\n\t\t\tuniforms[ 'diffuse' ].value.setHex( mpars.color );\n\t\t\tuniforms[ 'specular' ].value.setHex( mpars.specular );\n\t\t\tuniforms[ 'ambient' ].value.setHex( mpars.ambient );\n\n\t\t\tuniforms[ 'shininess' ].value = mpars.shininess;\n\n\t\t\tif ( mpars.opacity !== undefined ) {\n\n\t\t\t\tuniforms[ 'opacity' ].value = mpars.opacity;\n\n\t\t\t}\n\n\t\t\tvar parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };\n\t\t\tvar material = new THREE.ShaderMaterial( parameters );\n\n\t\t\tif ( mpars.transparent ) {\n\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar material = new THREE[ mtype ]( mpars );\n\n\t\t}\n\n\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\n\n\t\treturn material;\n\n\t}\n\n};\n\nTHREE.Loader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = this.handlers[ i ];\n\t\t\tvar loader  = this.handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\n// File:src/loaders/XHRLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.XHRLoader = function ( manager ) {\n\n\tthis.cache = new THREE.Cache();\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.XHRLoader.prototype = {\n\n\tconstructor: THREE.XHRLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar cached = scope.cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tif ( onLoad ) onLoad( cached );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar request = new XMLHttpRequest();\n\t\trequest.open( 'GET', url, true );\n\n\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\tscope.cache.add( url, this.response );\n\n\t\t\tif ( onLoad ) onLoad( this.response );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\tif ( onProgress !== undefined ) {\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tonProgress( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\tif ( onError !== undefined ) {\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tonError( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\n\t\trequest.send( null );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t}\n\n};\n\n// File:src/loaders/ImageLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ImageLoader = function ( manager ) {\n\n\tthis.cache = new THREE.Cache();\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ImageLoader.prototype = {\n\n\tconstructor: THREE.ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar cached = scope.cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tonLoad( cached );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar image = document.createElement( 'img' );\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\timage.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tscope.cache.add( url, this );\n\n\t\t\t\tonLoad( this );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\tif ( onProgress !== undefined ) {\n\n\t\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tonProgress( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\tif ( onError !== undefined ) {\n\n\t\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tonError( event );\n\n\t\t\t}, false );\n\n\t\t}\n\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\timage.src = url;\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t}\n\n}\n\n// File:src/loaders/JSONLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.JSONLoader = function ( showStatus ) {\n\n\tTHREE.Loader.call( this, showStatus );\n\n\tthis.withCredentials = false;\n\n};\n\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\n\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\n\n\tvar scope = this;\n\n\t// todo: unify load API to for easier SceneLoader use\n\n\ttexturePath = texturePath && ( typeof texturePath === 'string' ) ? texturePath : this.extractUrlBase( url );\n\n\tthis.onLoadStart();\n\tthis.loadAjaxJSON( this, url, callback, texturePath );\n\n};\n\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\n\n\tvar xhr = new XMLHttpRequest();\n\n\tvar length = 0;\n\n\txhr.onreadystatechange = function () {\n\n\t\tif ( xhr.readyState === xhr.DONE ) {\n\n\t\t\tif ( xhr.status === 200 || xhr.status === 0 ) {\n\n\t\t\t\tif ( xhr.responseText ) {\n\n\t\t\t\t\tvar json = JSON.parse( xhr.responseText );\n\n\t\t\t\t\tif ( json.metadata !== undefined && json.metadata.type === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: \"' + url + '\" seems to be a Scene. Use THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = context.parse( json, texturePath );\n\t\t\t\t\tcallback( result.geometry, result.materials );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: \"' + url + '\" seems to be unreachable or the file is empty.' );\n\n\t\t\t\t}\n\n\t\t\t\t// in context of more complex asset initialization\n\t\t\t\t// do not block on single failed file\n\t\t\t\t// maybe should go even one more level up\n\n\t\t\t\tcontext.onLoadComplete();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.JSONLoader: Couldn\\'t load \"' + url + '\" (' + xhr.status + ')' );\n\n\t\t\t}\n\n\t\t} else if ( xhr.readyState === xhr.LOADING ) {\n\n\t\t\tif ( callbackProgress ) {\n\n\t\t\t\tif ( length === 0 ) {\n\n\t\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\n\n\t\t\t\t}\n\n\t\t\t\tcallbackProgress( { total: length, loaded: xhr.responseText.length } );\n\n\t\t\t}\n\n\t\t} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\n\n\t\t\tif ( callbackProgress !== undefined ) {\n\n\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\txhr.open( 'GET', url, true );\n\txhr.withCredentials = this.withCredentials;\n\txhr.send( null );\n\n};\n\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\n\n\tvar scope = this,\n\tgeometry = new THREE.Geometry(),\n\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\tparseModel( scale );\n\n\tparseSkin();\n\tparseMorphing( scale );\n\n\tgeometry.computeFaceNormals();\n\tgeometry.computeBoundingSphere();\n\n\tfunction parseModel( scale ) {\n\n\t\tfunction isBitSet( value, position ) {\n\n\t\t\treturn value & ( 1 << position );\n\n\t\t}\n\n\t\tvar i, j, fi,\n\n\t\toffset, zLength,\n\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\ttype,\n\t\tisQuad,\n\t\thasMaterial,\n\t\thasFaceVertexUv,\n\t\thasFaceNormal, hasFaceVertexNormal,\n\t\thasFaceColor, hasFaceVertexColor,\n\n\t\tvertex, face, faceA, faceB, color, hex, normal,\n\n\t\tuvLayer, uv, u, v,\n\n\t\tfaces = json.faces,\n\t\tvertices = json.vertices,\n\t\tnormals = json.normals,\n\t\tcolors = json.colors,\n\n\t\tnUvLayers = 0;\n\n\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t// disregard empty arrays\n\n\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\t\tzLength = vertices.length;\n\n\t\twhile ( offset < zLength ) {\n\n\t\t\tvertex = new THREE.Vector3();\n\n\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\tgeometry.vertices.push( vertex );\n\n\t\t}\n\n\t\toffset = 0;\n\t\tzLength = faces.length;\n\n\t\twhile ( offset < zLength ) {\n\n\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\tif ( isQuad ) {\n\n\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\toffset += 4;\n\n\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = []\n\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t);\n\n\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t} else {\n\n\t\t\t\tface = new THREE.Face3();\n\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction parseSkin() {\n\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\tif ( json.skinWeights ) {\n\n\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\tvar x =                               json.skinWeights[ i     ];\n\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.skinIndices ) {\n\n\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\tvar a =                               json.skinIndices[ i     ];\n\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.bones = json.bones;\n\n\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t}\n\n\n\t\t// could change this to json.animations[0] or remove completely\n\n\t\tgeometry.animation = json.animation;\n\t\tgeometry.animations = json.animations;\n\n\t};\n\n\tfunction parseMorphing( scale ) {\n\n\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\n\n\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\tsrcVertices = json.morphTargets [ i ].vertices;\n\n\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.morphColors !== undefined ) {\n\n\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\n\n\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\n\n\t\t\t\tgeometry.morphColors[ i ] = {};\n\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\n\t\t\t\tgeometry.morphColors[ i ].colors = [];\n\n\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\n\t\t\t\tsrcColors = json.morphColors [ i ].colors;\n\n\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\n\n\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\n\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\n\t\t\t\t\tdstColors.push( color );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\treturn { geometry: geometry };\n\n\t} else {\n\n\t\tvar materials = this.initMaterials( json.materials, texturePath );\n\n\t\tif ( this.needsTangents( materials ) ) {\n\n\t\t\tgeometry.computeTangents();\n\n\t\t}\n\n\t\treturn { geometry: geometry, materials: materials };\n\n\t}\n\n};\n\n// File:src/loaders/LoadingManager.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar loaded = 0, total = 0;\n\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\ttotal ++;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\tloaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, loaded, total );\n\n\t\t}\n\n\t\tif ( loaded === total && scope.onLoad !== undefined ) {\n\n\t\t\tscope.onLoad();\n\n\t\t}\n\n\t};\n\n};\n\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\n\n// File:src/loaders/BufferGeometryLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BufferGeometryLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.BufferGeometryLoader.prototype = {\n\n\tconstructor: THREE.BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar attributes = json.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\n\n\t\t}\n\n\t\tvar offsets = json.offsets;\n\n\t\tif ( offsets !== undefined ) {\n\n\t\t\tgeometry.offsets = JSON.parse( JSON.stringify( offsets ) );\n\n\t\t}\n\n\t\tvar boundingSphere = json.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new THREE.Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n};\n\n// File:src/loaders/MaterialLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MaterialLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MaterialLoader.prototype = {\n\n\tconstructor: THREE.MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar material = new THREE[ json.type ];\n\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.ambient !== undefined ) material.ambient.setHex( json.ambient );\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\t\t\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\n\t\tif ( json.materials !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n};\n\n// File:src/loaders/ObjectLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.ObjectLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ObjectLoader.prototype = {\n\n\tconstructor: THREE.ObjectLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometries = this.parseGeometries( json.geometries );\n\t\tvar materials = this.parseMaterials( json.materials );\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\treturn object;\n\n\t},\n\n\tparseGeometries: function ( json ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.PlaneGeometry(\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q,\n\t\t\t\t\t\t\tdata.heightScale\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data.data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new THREE.MaterialLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\t\t\t\tvar material = loader.parse( data );\n\n\t\t\t\tmaterial.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) material.name = data.name;\n\n\t\t\t\tmaterials[ data.uuid ] = material;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseObject: function () {\n\n\t\tvar matrix = new THREE.Matrix4();\n\n\t\treturn function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new THREE.Scene();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = geometries[ data.geometry ];\n\t\t\t\t\tvar material = materials[ data.material ];\n\n\t\t\t\t\tif ( geometry === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', data.geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tvar geometry = geometries[ data.geometry ];\n\t\t\t\t\tvar material = materials[ data.material ];\n\n\t\t\t\t\tif ( geometry === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', data.geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = new THREE.Line( geometry, material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tvar material = materials[ data.material ];\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', data.material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject = new THREE.Sprite( material );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new THREE.Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t}()\n\n};\n\n// File:src/loaders/TextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.TextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.TextureLoader.prototype = {\n\n\tconstructor: THREE.TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.load( url, function ( image ) {\n\n\t\t\tvar texture = new THREE.Texture( image );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t}\n\n};\n\n// File:src/loaders/CompressedTextureLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nTHREE.CompressedTextureLoader = function () {\n\n\t// override in sub classes\n\tthis._parser = null;\n\n};\n\n\nTHREE.CompressedTextureLoader.prototype = {\n\n\tconstructor: THREE.CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new THREE.CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new THREE.XHRLoader();\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tif ( url instanceof Array ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tvar loadTexture = function ( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n \t\t\t\t\t\tif (texDatas.mipmapCount == 1)\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n};\n\n// File:src/materials/Material.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Material = function () {\n\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.side = THREE.FrontSide;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blending = THREE.NormalBlending;\n\n\tthis.blendSrc = THREE.SrcAlphaFactor;\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\n\tthis.blendEquation = THREE.AddEquation;\n\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.alphaTest = 0;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.needsUpdate = true;\n\n};\n\nTHREE.Material.prototype = {\n\n\tconstructor: THREE.Material,\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( key in this ) {\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key == 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatable with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.2,\n\t\t\t\ttype: 'material',\n\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t},\n\t\t\tuuid: this.uuid,\n\t\t\ttype: this.type\n\t\t};\n\n\t\tif ( this.name !== \"\" ) output.name = this.name;\n\n\t\tif ( this instanceof THREE.MeshBasicMaterial ) {\n\n\t\t\toutput.color = this.color.getHex();\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\n\n\t\t} else if ( this instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\toutput.color = this.color.getHex();\n\t\t\toutput.ambient = this.ambient.getHex();\n\t\t\toutput.emissive = this.emissive.getHex();\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\n\n\t\t} else if ( this instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\toutput.color = this.color.getHex();\n\t\t\toutput.ambient = this.ambient.getHex();\n\t\t\toutput.emissive = this.emissive.getHex();\n\t\t\toutput.specular = this.specular.getHex();\n\t\t\toutput.shininess = this.shininess;\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\n\n\t\t} else if ( this instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\tif ( this.shading !== THREE.FlatShading ) output.shading = this.shading;\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\n\n\t\t} else if ( this instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\n\n\t\t} else if ( this instanceof THREE.ShaderMaterial ) {\n\n\t\t\toutput.uniforms = this.uniforms;\n\t\t\toutput.vertexShader = this.vertexShader;\n\t\t\toutput.fragmentShader = this.fragmentShader;\n\n\t\t} else if ( this instanceof THREE.SpriteMaterial ) {\n\n\t\t\toutput.color = this.color.getHex();\n\n\t\t}\n\n\t\tif ( this.opacity < 1 ) output.opacity = this.opacity;\n\t\tif ( this.transparent !== false ) output.transparent = this.transparent;\n\t\tif ( this.wireframe !== false ) output.wireframe = this.wireframe;\n\n\t\treturn output;\n\n\t},\n\n\tclone: function ( material ) {\n\n\t\tif ( material === undefined ) material = new THREE.Material();\n\n\t\tmaterial.name = this.name;\n\n\t\tmaterial.side = this.side;\n\n\t\tmaterial.opacity = this.opacity;\n\t\tmaterial.transparent = this.transparent;\n\n\t\tmaterial.blending = this.blending;\n\n\t\tmaterial.blendSrc = this.blendSrc;\n\t\tmaterial.blendDst = this.blendDst;\n\t\tmaterial.blendEquation = this.blendEquation;\n\n\t\tmaterial.depthTest = this.depthTest;\n\t\tmaterial.depthWrite = this.depthWrite;\n\n\t\tmaterial.polygonOffset = this.polygonOffset;\n\t\tmaterial.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tmaterial.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tmaterial.alphaTest = this.alphaTest;\n\n\t\tmaterial.overdraw = this.overdraw;\n\n\t\tmaterial.visible = this.visible;\n\n\t\treturn material;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\n\nTHREE.MaterialIdCount = 0;\n\n// File:src/materials/LineBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineBasicMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.vertexColors = THREE.NoColors;\n\n\tthis.fog = true;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.LineBasicMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.LineBasicMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\n\tmaterial.linewidth = this.linewidth;\n\tmaterial.linecap = this.linecap;\n\tmaterial.linejoin = this.linejoin;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.fog = this.fog;\n\n\treturn material;\n\n};\n\n// File:src/materials/LineDashedMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.LineDashedMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.vertexColors = false;\n\n\tthis.fog = true;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.LineDashedMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.LineDashedMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\n\tmaterial.linewidth = this.linewidth;\n\n\tmaterial.scale = this.scale;\n\tmaterial.dashSize = this.dashSize;\n\tmaterial.gapSize = this.gapSize;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.fog = this.fog;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshBasicMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.MeshBasicMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.fog = true;\n\n\tthis.shading = THREE.SmoothShading;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.vertexColors = THREE.NoColors;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshBasicMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.MeshBasicMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\n\tmaterial.map = this.map;\n\n\tmaterial.lightMap = this.lightMap;\n\n\tmaterial.specularMap = this.specularMap;\n\n\tmaterial.alphaMap = this.alphaMap;\n\n\tmaterial.envMap = this.envMap;\n\tmaterial.combine = this.combine;\n\tmaterial.reflectivity = this.reflectivity;\n\tmaterial.refractionRatio = this.refractionRatio;\n\n\tmaterial.fog = this.fog;\n\n\tmaterial.shading = this.shading;\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.skinning = this.skinning;\n\tmaterial.morphTargets = this.morphTargets;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshLambertMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\nTHREE.MeshLambertMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\tthis.ambient = new THREE.Color( 0xffffff );\n\tthis.emissive = new THREE.Color( 0x000000 );\n\n\tthis.wrapAround = false;\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.fog = true;\n\n\tthis.shading = THREE.SmoothShading;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.vertexColors = THREE.NoColors;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshLambertMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.MeshLambertMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\tmaterial.ambient.copy( this.ambient );\n\tmaterial.emissive.copy( this.emissive );\n\n\tmaterial.wrapAround = this.wrapAround;\n\tmaterial.wrapRGB.copy( this.wrapRGB );\n\n\tmaterial.map = this.map;\n\n\tmaterial.lightMap = this.lightMap;\n\n\tmaterial.specularMap = this.specularMap;\n\n\tmaterial.alphaMap = this.alphaMap;\n\n\tmaterial.envMap = this.envMap;\n\tmaterial.combine = this.combine;\n\tmaterial.reflectivity = this.reflectivity;\n\tmaterial.refractionRatio = this.refractionRatio;\n\n\tmaterial.fog = this.fog;\n\n\tmaterial.shading = this.shading;\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.skinning = this.skinning;\n\tmaterial.morphTargets = this.morphTargets;\n\tmaterial.morphNormals = this.morphNormals;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshPhongMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  ambient: <hex>,\n *  emissive: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\nTHREE.MeshPhongMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\tthis.ambient = new THREE.Color( 0xffffff );\n\tthis.emissive = new THREE.Color( 0x000000 );\n\tthis.specular = new THREE.Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.metal = false;\n\n\tthis.wrapAround = false;\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = THREE.MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.fog = true;\n\n\tthis.shading = THREE.SmoothShading;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.vertexColors = THREE.NoColors;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshPhongMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.MeshPhongMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\tmaterial.ambient.copy( this.ambient );\n\tmaterial.emissive.copy( this.emissive );\n\tmaterial.specular.copy( this.specular );\n\tmaterial.shininess = this.shininess;\n\n\tmaterial.metal = this.metal;\n\n\tmaterial.wrapAround = this.wrapAround;\n\tmaterial.wrapRGB.copy( this.wrapRGB );\n\n\tmaterial.map = this.map;\n\n\tmaterial.lightMap = this.lightMap;\n\n\tmaterial.bumpMap = this.bumpMap;\n\tmaterial.bumpScale = this.bumpScale;\n\n\tmaterial.normalMap = this.normalMap;\n\tmaterial.normalScale.copy( this.normalScale );\n\n\tmaterial.specularMap = this.specularMap;\n\n\tmaterial.alphaMap = this.alphaMap;\n\n\tmaterial.envMap = this.envMap;\n\tmaterial.combine = this.combine;\n\tmaterial.reflectivity = this.reflectivity;\n\tmaterial.refractionRatio = this.refractionRatio;\n\n\tmaterial.fog = this.fog;\n\n\tmaterial.shading = this.shading;\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.skinning = this.skinning;\n\tmaterial.morphTargets = this.morphTargets;\n\tmaterial.morphNormals = this.morphNormals;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshDepthMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshDepthMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.morphTargets = false;\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshDepthMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.MeshDepthMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshNormalMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  shading: THREE.FlatShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nTHREE.MeshNormalMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this, parameters );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.shading = THREE.FlatShading;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.MeshNormalMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.MeshNormalMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.shading = this.shading;\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\n\treturn material;\n\n};\n\n// File:src/materials/MeshFaceMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.MeshFaceMaterial = function ( materials ) {\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.type = 'MeshFaceMaterial';\n\t\n\tthis.materials = materials instanceof Array ? materials : [];\n\n};\n\nTHREE.MeshFaceMaterial.prototype = {\n\n\tconstructor: THREE.MeshFaceMaterial,\n\n\ttoJSON: function () {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.2,\n\t\t\t\ttype: 'material',\n\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t},\n\t\t\tuuid: this.uuid,\n\t\t\ttype: this.type,\n\t\t\tmaterials: []\n\t\t};\n\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\n\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar material = new THREE.MeshFaceMaterial();\n\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n};\n\n// File:src/materials/PointCloudMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.PointCloudMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'PointCloudMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.vertexColors = THREE.NoColors;\n\n\tthis.fog = true;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.PointCloudMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.PointCloudMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.PointCloudMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\n\tmaterial.map = this.map;\n\n\tmaterial.size = this.size;\n\tmaterial.sizeAttenuation = this.sizeAttenuation;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.fog = this.fog;\n\n\treturn material;\n\n};\n\n// backwards compatibility\n\nTHREE.ParticleBasicMaterial = function ( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.' );\n\treturn new THREE.PointCloudMaterial( parameters );\n\n};\n\nTHREE.ParticleSystemMaterial = function ( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.' );\n\treturn new THREE.PointCloudMaterial( parameters );\n\n};\n\n// File:src/materials/ShaderMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }\n */\n\nTHREE.ShaderMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\tthis.attributes = null;\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.shading = THREE.SmoothShading;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\n\tthis.lights = false; // set to use scene lights\n\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.ShaderMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.ShaderMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.fragmentShader = this.fragmentShader;\n\tmaterial.vertexShader = this.vertexShader;\n\n\tmaterial.uniforms = THREE.UniformsUtils.clone( this.uniforms );\n\n\tmaterial.attributes = this.attributes;\n\tmaterial.defines = this.defines;\n\n\tmaterial.shading = this.shading;\n\n\tmaterial.wireframe = this.wireframe;\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\n\n\tmaterial.fog = this.fog;\n\n\tmaterial.lights = this.lights;\n\n\tmaterial.vertexColors = this.vertexColors;\n\n\tmaterial.skinning = this.skinning;\n\n\tmaterial.morphTargets = this.morphTargets;\n\tmaterial.morphNormals = this.morphNormals;\n\n\treturn material;\n\n};\n\n// File:src/materials/RawShaderMaterial.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.RawShaderMaterial = function ( parameters ) {\n\n\tTHREE.ShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n};\n\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\nTHREE.RawShaderMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.RawShaderMaterial();\n\n\tTHREE.ShaderMaterial.prototype.clone.call( this, material );\n\n\treturn material;\n\n};\n\n// File:src/materials/SpriteMaterial.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2(),\n *\n *  fog: <bool>\n * }\n */\n\nTHREE.SpriteMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\n\t// set parameters\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\n\nTHREE.SpriteMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteMaterial();\n\n\tTHREE.Material.prototype.clone.call( this, material );\n\n\tmaterial.color.copy( this.color );\n\tmaterial.map = this.map;\n\n\tmaterial.rotation = this.rotation;\n\n\tmaterial.fog = this.fog;\n\n\treturn material;\n\n};\n\n// File:src/textures/Texture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\n\n\tthis.uuid = THREE.Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\n\n\tthis.offset = new THREE.Vector2( 0, 0 );\n\tthis.repeat = new THREE.Vector2( 1, 1 );\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\tthis._needsUpdate = false;\n\tthis.onUpdate = null;\n\n};\n\nTHREE.Texture.DEFAULT_IMAGE = undefined;\nTHREE.Texture.DEFAULT_MAPPING = new THREE.UVMapping();\n\nTHREE.Texture.prototype = {\n\n\tconstructor: THREE.Texture,\n\n\tget needsUpdate () {\n\n\t\treturn this._needsUpdate;\n\n\t},\n\n\tset needsUpdate ( value ) {\n\n\t\tif ( value === true ) this.update();\n\n\t\tthis._needsUpdate = value;\n\n\t},\n\n\tclone: function ( texture ) {\n\n\t\tif ( texture === undefined ) texture = new THREE.Texture();\n\n\t\ttexture.image = this.image;\n\t\ttexture.mipmaps = this.mipmaps.slice( 0 );\n\n\t\ttexture.mapping = this.mapping;\n\n\t\ttexture.wrapS = this.wrapS;\n\t\ttexture.wrapT = this.wrapT;\n\n\t\ttexture.magFilter = this.magFilter;\n\t\ttexture.minFilter = this.minFilter;\n\n\t\ttexture.anisotropy = this.anisotropy;\n\n\t\ttexture.format = this.format;\n\t\ttexture.type = this.type;\n\n\t\ttexture.offset.copy( this.offset );\n\t\ttexture.repeat.copy( this.repeat );\n\n\t\ttexture.generateMipmaps = this.generateMipmaps;\n\t\ttexture.premultiplyAlpha = this.premultiplyAlpha;\n\t\ttexture.flipY = this.flipY;\n\t\ttexture.unpackAlignment = this.unpackAlignment;\n\n\t\treturn texture;\n\n\t},\n\n\tupdate: function () {\n\n\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\n\nTHREE.TextureIdCount = 0;\n\n// File:src/textures/CubeTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.images = images;\n\n};\n\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.CubeTexture.clone = function ( texture ) {\n\n\tif ( texture === undefined ) texture = new THREE.CubeTexture();\n\n\tTHREE.Texture.prototype.clone.call( this, texture );\n\n\ttexture.images = this.images;\n\n\treturn texture;\n\n};\n\n// File:src/textures/CompressedTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n};\n\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.CompressedTexture.prototype.clone = function () {\n\n\tvar texture = new THREE.CompressedTexture();\n\n\tTHREE.Texture.prototype.clone.call( this, texture );\n\n\treturn texture;\n\n};\n\n// File:src/textures/DataTexture.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { data: data, width: width, height: height };\n\n};\n\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\n\nTHREE.DataTexture.prototype.clone = function () {\n\n\tvar texture = new THREE.DataTexture();\n\n\tTHREE.Texture.prototype.clone.call( this, texture );\n\n\treturn texture;\n\n};\n\n// File:src/textures/VideoTexture.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n\tvar scope = this;\n\n\tvar update = function () {\n\n\t\trequestAnimationFrame( update );\n\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\n\n\t\t\tscope.needsUpdate = true;\n\n\t\t}\n\n\t};\n\n\tupdate();\n\n};\n\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\n\n// File:src/objects/Group.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Group = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Group';\n\n};\n\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\n\n// File:src/objects/PointCloud.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.PointCloud = function ( geometry, material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'PointCloud';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n\tthis.material = material !== undefined ? material : new THREE.PointCloudMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.sortParticles = false;\n\n};\n\nTHREE.PointCloud.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.PointCloud.prototype.raycast = ( function () {\n\n\tvar inverseMatrix = new THREE.Matrix4();\n\tvar ray = new THREE.Ray();\n\n\treturn function ( raycaster, intersects ) {\n\n\t\tvar object = this;\n\t\tvar geometry = object.geometry;\n\t\tvar threshold = raycaster.params.PointCloud.threshold;\n\n\t\tinverseMatrix.getInverse( this.matrixWorld );\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar position = new THREE.Vector3();\n\n\t\tvar testPoint = function ( point, index ) {\n\n\t\t\tvar rayPointDistance = ray.distanceToPoint( point );\n\n\t\t\tif ( rayPointDistance < localThreshold ) {\n\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tdistanceToRay: rayPointDistance,\n\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\tindex: index,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: object\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t};\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.index !== undefined ) {\n\n\t\t\t\tvar indices = attributes.index.array;\n\t\t\t\tvar offsets = geometry.offsets;\n\n\t\t\t\tif ( offsets.length === 0 ) {\n\n\t\t\t\t\tvar offset = {\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tcount: indices.length,\n\t\t\t\t\t\tindex: 0\n\t\t\t\t\t};\n\n\t\t\t\t\toffsets = [ offset ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\n\n\t\t\t\t\tvar start = offsets[ oi ].start;\n\t\t\t\t\tvar count = offsets[ oi ].count;\n\t\t\t\t\tvar index = offsets[ oi ].index;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = index + indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar pointCount = positions.length / 3;\n\n\t\t\t\tfor ( var i = 0; i < pointCount; i ++ ) {\n\n\t\t\t\t\tposition.set(\n\t\t\t\t\t\tpositions[ 3 * i ],\n\t\t\t\t\t\tpositions[ 3 * i + 1 ],\n\t\t\t\t\t\tpositions[ 3 * i + 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar vertices = this.geometry.vertices;\n\n\t\t\tfor ( var i = 0; i < vertices.length; i ++ ) {\n\n\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}() );\n\nTHREE.PointCloud.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.PointCloud( this.geometry, this.material );\n\n\tobject.sortParticles = this.sortParticles;\n\n\tTHREE.Object3D.prototype.clone.call( this, object );\n\n\treturn object;\n\n};\n\n// Backwards compatibility\n\nTHREE.ParticleSystem = function ( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.PointCloud.' );\n\treturn new THREE.PointCloud( geometry, material );\n\n};\n\n// File:src/objects/Line.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Line = function ( geometry, material, mode ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.mode = ( mode !== undefined ) ? mode : THREE.LineStrip;\n\n};\n\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1;\n\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Line.prototype.raycast = ( function () {\n\n\tvar inverseMatrix = new THREE.Matrix4();\n\tvar ray = new THREE.Ray();\n\tvar sphere = new THREE.Sphere();\n\n\treturn function ( raycaster, intersects ) {\n\n\t\tvar precision = raycaster.linePrecision;\n\t\tvar precisionSq = precision * precision;\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tsphere.copy( geometry.boundingSphere );\n\t\tsphere.applyMatrix4( this.matrixWorld );\n\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tinverseMatrix.getInverse( this.matrixWorld );\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t/* if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t} else */ if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar nbVertices = vertices.length;\n\t\t\tvar interSegment = new THREE.Vector3();\n\t\t\tvar interRay = new THREE.Vector3();\n\t\t\tvar step = this.mode === THREE.LineStrip ? 1 : 2;\n\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i = i + step ) {\n\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}() );\n\nTHREE.Line.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.mode );\n\n\tTHREE.Object3D.prototype.clone.call( this, object );\n\n\treturn object;\n\n};\n\n// File:src/objects/Mesh.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nTHREE.Mesh = function ( geometry, material ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Mesh';\n\t\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.updateMorphTargets();\n\n};\n\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Mesh.prototype.updateMorphTargets = function () {\n\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\n\n\t\tthis.morphTargetBase = - 1;\n\t\tthis.morphTargetForcedOrder = [];\n\t\tthis.morphTargetInfluences = [];\n\t\tthis.morphTargetDictionary = {};\n\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\n\n\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\n\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\n\n\t\treturn this.morphTargetDictionary[ name ];\n\n\t}\n\n\tconsole.log( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\n\n\treturn 0;\n\n};\n\n\nTHREE.Mesh.prototype.raycast = ( function () {\n\n\tvar inverseMatrix = new THREE.Matrix4();\n\tvar ray = new THREE.Ray();\n\tvar sphere = new THREE.Sphere();\n\n\tvar vA = new THREE.Vector3();\n\tvar vB = new THREE.Vector3();\n\tvar vC = new THREE.Vector3();\n\n\treturn function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\tsphere.copy( geometry.boundingSphere );\n\t\tsphere.applyMatrix4( this.matrixWorld );\n\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check boundingBox before continuing\n\n\t\tinverseMatrix.getInverse( this.matrixWorld );\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false )  {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tvar material = this.material;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar a, b, c;\n\t\t\tvar precision = raycaster.precision;\n\n\t\t\tif ( attributes.index !== undefined ) {\n\n\t\t\t\tvar indices = attributes.index.array;\n\t\t\t\tvar positions = attributes.position.array;\n\t\t\t\tvar offsets = geometry.offsets;\n\n\t\t\t\tif ( offsets.length === 0 ) {\n\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++oi ) {\n\n\t\t\t\t\tvar start = offsets[ oi ].start;\n\t\t\t\t\tvar count = offsets[ oi ].count;\n\t\t\t\t\tvar index = offsets[ oi ].index;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = index + indices[ i ];\n\t\t\t\t\t\tb = index + indices[ i + 1 ];\n\t\t\t\t\t\tc = index + indices[ i + 2 ];\n\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\n\n\t\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tpoint: intersectionPoint,\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9 ) {\n\n\t\t\t\t\ta = i;\n\t\t\t\t\tb = i + 1;\n\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\tvA.fromArray( positions, j );\n\t\t\t\t\tvB.fromArray( positions, j + 3 );\n\t\t\t\t\tvC.fromArray( positions, j + 6 );\n\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( intersectionPoint === null ) continue;\n\n\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tpoint: intersectionPoint,\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\tvar isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\n\t\t\tvar objectMaterials = isFaceMaterial === true ? this.material.materials : null;\n\n\t\t\tvar a, b, c, d;\n\t\t\tvar precision = raycaster.precision;\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = geometry.faces[ f ];\n\n\t\t\t\tvar material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : this.material;\n\n\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\ta = vertices[ face.a ];\n\t\t\t\tb = vertices[ face.b ];\n\t\t\t\tc = vertices[ face.c ];\n\n\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\tvA.x += ( targets[ face.a ].x - a.x ) * influence;\n\t\t\t\t\t\tvA.y += ( targets[ face.a ].y - a.y ) * influence;\n\t\t\t\t\t\tvA.z += ( targets[ face.a ].z - a.z ) * influence;\n\n\t\t\t\t\t\tvB.x += ( targets[ face.b ].x - b.x ) * influence;\n\t\t\t\t\t\tvB.y += ( targets[ face.b ].y - b.y ) * influence;\n\t\t\t\t\t\tvB.z += ( targets[ face.b ].z - b.z ) * influence;\n\n\t\t\t\t\t\tvC.x += ( targets[ face.c ].x - c.x ) * influence;\n\t\t\t\t\t\tvC.y += ( targets[ face.c ].y - c.y ) * influence;\n\t\t\t\t\t\tvC.z += ( targets[ face.c ].z - c.z ) * influence;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvA.add( a );\n\t\t\t\t\tvB.add( b );\n\t\t\t\t\tvC.add( c );\n\n\t\t\t\t\ta = vA;\n\t\t\t\t\tb = vB;\n\t\t\t\t\tc = vC;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( c, b, a, true );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersectionPoint === null ) continue;\n\n\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\n\n\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPoint,\n\t\t\t\t\tface: face,\n\t\t\t\t\tfaceIndex: f,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}() );\n\nTHREE.Mesh.prototype.clone = function ( object, recursive ) {\n\n\tif ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\n\n\tTHREE.Object3D.prototype.clone.call( this, object, recursive );\n\n\treturn object;\n\n};\n\n// File:src/objects/Bone.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.Bone = function ( belongsToSkin ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.skin = belongsToSkin;\n\n};\n\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\n\n\n// File:src/objects/Skeleton.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\n\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\tthis.identityMatrix = new THREE.Matrix4();\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\n\t// create a bone texture or an array of floats\n\n\tif ( this.useVertexTexture ) {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\n\t\t//       16x16 pixel texture max   64 bones (16 * 16 / 4)\n\t\t//       32x32 pixel texture max  256 bones (32 * 32 / 4)\n\t\t//       64x64 pixel texture max 1024 bones (64 * 64 / 4)\n\n\t\tvar size;\n\n\t\tif ( this.bones.length > 256 )\n\t\t\tsize = 64;\n\t\telse if ( this.bones.length > 64 )\n\t\t\tsize = 32;\n\t\telse if ( this.bones.length > 16 )\n\t\t\tsize = 16;\n\t\telse\n\t\t\tsize = 8;\n\n\t\tthis.boneTextureWidth = size;\n\t\tthis.boneTextureHeight = size;\n\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\n\t\tthis.boneTexture.minFilter = THREE.NearestFilter;\n\t\tthis.boneTexture.magFilter = THREE.NearestFilter;\n\t\tthis.boneTexture.generateMipmaps = false;\n\t\tthis.boneTexture.flipY = false;\n\n\t} else {\n\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t}\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.Skeleton.prototype.calculateInverses = function () {\n\n\tthis.boneInverses = [];\n\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\tvar inverse = new THREE.Matrix4();\n\n\t\tif ( this.bones[ b ] ) {\n\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t}\n\n\t\tthis.boneInverses.push( inverse );\n\n\t}\n\n};\n\nTHREE.Skeleton.prototype.pose = function () {\n\n\tvar bone;\n\n\t// recover the bind-time world matrices\n\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\tbone = this.bones[ b ];\n\n\t\tif ( bone ) {\n\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t}\n\n\t}\n\n\t// compute the local matrices, positions, rotations and scales\n\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\tbone = this.bones[ b ];\n\n\t\tif ( bone ) {\n\n\t\t\tif ( bone.parent ) {\n\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t}\n\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.Skeleton.prototype.update = ( function () {\n\n\tvar offsetMatrix = new THREE.Matrix4();\n\t\n\treturn function () {\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\n\n\t\t}\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t}\n\t\t\n\t};\n\n} )();\n\n\n// File:src/objects/SkinnedMesh.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = \"attached\";\n\tthis.bindMatrix = new THREE.Matrix4();\n\tthis.bindMatrixInverse = new THREE.Matrix4();\n\n\t// init bones\n\n\t// TODO: remove bone creation as there is no reason (other than\n\t// convenience) for THREE.SkinnedMesh to do this.\n\n\tvar bones = [];\n\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\tvar bone, gbone, p, q, s;\n\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\n\n\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\tp = gbone.pos;\n\t\t\tq = gbone.rotq;\n\t\t\ts = gbone.scl;\n\n\t\t\tbone = new THREE.Bone( this );\n\t\t\tbones.push( bone );\n\n\t\t\tbone.name = gbone.name;\n\t\t\tbone.position.set( p[ 0 ], p[ 1 ], p[ 2 ] );\n\t\t\tbone.quaternion.set( q[ 0 ], q[ 1 ], q[ 2 ], q[ 3 ] );\n\n\t\t\tif ( s !== undefined ) {\n\n\t\t\t\tbone.scale.set( s[ 0 ], s[ 1 ], s[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tbone.scale.set( 1, 1, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++b ) {\n\n\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\tif ( gbone.parent !== - 1 ) {\n\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t} else {\n\n\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.normalizeSkinWeights();\n\n\tthis.updateMatrixWorld( true );\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ) );\n\n};\n\n\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\n\n\tthis.skeleton = skeleton;\n\n\tif ( bindMatrix === undefined ) {\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tbindMatrix = this.matrixWorld;\n\n\t}\n\n\tthis.bindMatrix.copy( bindMatrix );\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n};\n\nTHREE.SkinnedMesh.prototype.pose = function () {\n\n\tthis.skeleton.pose();\n\n};\n\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\n\n\tif ( this.geometry instanceof THREE.Geometry ) {\n\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\n\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\n\n\t}\n\n};\n\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\n\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\n\n\tif ( this.bindMode === \"attached\" ) {\n\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode );\n\n\t}\n\n};\n\nTHREE.SkinnedMesh.prototype.clone = function( object ) {\n\n\tif ( object === undefined ) {\n\n\t\tobject = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\n\n\t}\n\n\tTHREE.Mesh.prototype.clone.call( this, object );\n\n\treturn object;\n\n};\n\n\n// File:src/objects/MorphAnimMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphAnimMesh = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'MorphAnimMesh';\n\n\t// API\n\n\tthis.duration = 1000; // milliseconds\n\tthis.mirroredLoop = false;\n\tthis.time = 0;\n\n\t// internals\n\n\tthis.lastKeyframe = 0;\n\tthis.currentKeyframe = 0;\n\n\tthis.direction = 1;\n\tthis.directionBackwards = false;\n\n\tthis.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\n\n};\n\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\n\n\tthis.startKeyframe = start;\n\tthis.endKeyframe = end;\n\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n\n\tthis.direction = 1;\n\tthis.directionBackwards = false;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n\n\tthis.direction = - 1;\n\tthis.directionBackwards = true;\n\n};\n\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\n\n\tvar geometry = this.geometry;\n\n\tif ( ! geometry.animations ) geometry.animations = {};\n\n\tvar firstAnimation, animations = geometry.animations;\n\n\tvar pattern = /([a-z]+)_?(\\d+)/;\n\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\tvar morph = geometry.morphTargets[ i ];\n\t\tvar parts = morph.name.match( pattern );\n\n\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\tvar label = parts[ 1 ];\n\t\t\tvar num = parts[ 2 ];\n\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\n\n\t\t\tvar animation = animations[ label ];\n\n\t\t\tif ( i < animation.start ) animation.start = i;\n\t\t\tif ( i > animation.end ) animation.end = i;\n\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\n\n\t\t}\n\n\t}\n\n\tgeometry.firstAnimation = firstAnimation;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\n\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\n\n\tthis.geometry.animations[ label ] = { start: start, end: end };\n\n};\n\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\n\n\tvar animation = this.geometry.animations[ label ];\n\n\tif ( animation ) {\n\n\t\tthis.setFrameRange( animation.start, animation.end );\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\n\t\tthis.time = 0;\n\n\t} else {\n\n\t\tconsole.warn( 'animation[' + label + '] undefined' );\n\n\t}\n\n};\n\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\n\n\tvar frameTime = this.duration / this.length;\n\n\tthis.time += this.direction * delta;\n\n\tif ( this.mirroredLoop ) {\n\n\t\tif ( this.time > this.duration || this.time < 0 ) {\n\n\t\t\tthis.direction *= - 1;\n\n\t\t\tif ( this.time > this.duration ) {\n\n\t\t\t\tthis.time = this.duration;\n\t\t\t\tthis.directionBackwards = true;\n\n\t\t\t}\n\n\t\t\tif ( this.time < 0 ) {\n\n\t\t\t\tthis.time = 0;\n\t\t\t\tthis.directionBackwards = false;\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tthis.time = this.time % this.duration;\n\n\t\tif ( this.time < 0 ) this.time += this.duration;\n\n\t}\n\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\n\n\tif ( keyframe !== this.currentKeyframe ) {\n\n\t\tthis.morphTargetInfluences[ this.lastKeyframe ] = 0;\n\t\tthis.morphTargetInfluences[ this.currentKeyframe ] = 1;\n\n\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\tthis.lastKeyframe = this.currentKeyframe;\n\t\tthis.currentKeyframe = keyframe;\n\n\t}\n\n\tvar mix = ( this.time % frameTime ) / frameTime;\n\n\tif ( this.directionBackwards ) {\n\n\t\tmix = 1 - mix;\n\n\t}\n\n\tthis.morphTargetInfluences[ this.currentKeyframe ] = mix;\n\tthis.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\n\n};\n\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\n\n\tvar influences = this.morphTargetInfluences;\n\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\n\n\t\tinfluences[ i ] = 0;\n\n\t}\n\n\tif ( a > -1 ) influences[ a ] = 1 - t;\n\tif ( b > -1 ) influences[ b ] = t;\n\n};\n\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\n\n\tobject.duration = this.duration;\n\tobject.mirroredLoop = this.mirroredLoop;\n\tobject.time = this.time;\n\n\tobject.lastKeyframe = this.lastKeyframe;\n\tobject.currentKeyframe = this.currentKeyframe;\n\n\tobject.direction = this.direction;\n\tobject.directionBackwards = this.directionBackwards;\n\n\tTHREE.Mesh.prototype.clone.call( this, object );\n\n\treturn object;\n\n};\n\n// File:src/objects/LOD.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.LOD = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.objects = [];\n\n};\n\n\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\n\n\tif ( distance === undefined ) distance = 0;\n\n\tdistance = Math.abs( distance );\n\n\tfor ( var l = 0; l < this.objects.length; l ++ ) {\n\n\t\tif ( distance < this.objects[ l ].distance ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tthis.objects.splice( l, 0, { distance: distance, object: object } );\n\tthis.add( object );\n\n};\n\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\n\n\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\n\n\t\tif ( distance < this.objects[ i ].distance ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn this.objects[ i - 1 ].object;\n\n};\n\nTHREE.LOD.prototype.raycast = ( function () {\n\n\tvar matrixPosition = new THREE.Vector3();\n\n\treturn function ( raycaster, intersects ) {\n\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t};\n\n}() );\n\nTHREE.LOD.prototype.update = function () {\n\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\n\treturn function ( camera ) {\n\n\t\tif ( this.objects.length > 1 ) {\n\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\tthis.objects[ 0 ].object.visible = true;\n\n\t\t\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= this.objects[ i ].distance ) {\n\n\t\t\t\t\tthis.objects[ i - 1 ].object.visible = false;\n\t\t\t\t\tthis.objects[ i     ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tthis.objects[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}();\n\nTHREE.LOD.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.LOD();\n\n\tTHREE.Object3D.prototype.clone.call( this, object );\n\n\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n\t\tvar x = this.objects[ i ].object.clone();\n\t\tx.visible = i === 0;\n\t\tobject.addLevel( x, this.objects[ i ].distance );\n\t}\n\n\treturn object;\n\n};\n\n// File:src/objects/Sprite.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Sprite = ( function () {\n\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\treturn function ( material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\n\n\t};\n\n} )();\n\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Sprite.prototype.raycast = ( function () {\n\n\tvar matrixPosition = new THREE.Vector3();\n\n\treturn function ( raycaster, intersects ) {\n\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\tvar distance = raycaster.ray.distanceToPoint( matrixPosition );\n\n\t\tif ( distance > this.scale.x ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: this.position,\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t};\n\n}() );\n\nTHREE.Sprite.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.Sprite( this.material );\n\n\tTHREE.Object3D.prototype.clone.call( this, object );\n\n\treturn object;\n\n};\n\n// Backwards compatibility\n\nTHREE.Particle = THREE.Sprite;\n\n// File:src/objects/LensFlare.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.lensFlares = [];\n\n\tthis.positionScreen = new THREE.Vector3();\n\tthis.customUpdateCallback = undefined;\n\n\tif( texture !== undefined ) {\n\n\t\tthis.add( texture, size, distance, blending, color );\n\n\t}\n\n};\n\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\n\n\n/*\n * Add: adds another flare\n */\n\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\n\n\tif ( size === undefined ) size = - 1;\n\tif ( distance === undefined ) distance = 0;\n\tif ( opacity === undefined ) opacity = 1;\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\n\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\tthis.lensFlares.push( {\n\t\ttexture: texture, \t\t\t// THREE.Texture\n\t\tsize: size, \t\t\t\t// size in pixels (-1 = use texture.width)\n\t\tdistance: distance, \t\t// distance (0-1) from light source (0=at light source)\n\t\tx: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\n\t\tscale: 1, \t\t\t\t\t// scale\n\t\trotation: 1, \t\t\t\t// rotation\n\t\topacity: opacity,\t\t\t// opacity\n\t\tcolor: color,\t\t\t\t// color\n\t\tblending: blending\t\t\t// blending\n\t} );\n\n};\n\n/*\n * Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n */\n\nTHREE.LensFlare.prototype.updateLensFlares = function () {\n\n\tvar f, fl = this.lensFlares.length;\n\tvar flare;\n\tvar vecX = - this.positionScreen.x * 2;\n\tvar vecY = - this.positionScreen.y * 2;\n\n\tfor( f = 0; f < fl; f ++ ) {\n\n\t\tflare = this.lensFlares[ f ];\n\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t}\n\n};\n\n\n// File:src/scenes/Scene.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Scene = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n};\n\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Scene.prototype.clone = function ( object ) {\n\n\tif ( object === undefined ) object = new THREE.Scene();\n\n\tTHREE.Object3D.prototype.clone.call( this, object );\n\n\tif ( this.fog !== null ) object.fog = this.fog.clone();\n\tif ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\n\n\tobject.autoUpdate = this.autoUpdate;\n\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\n\n\treturn object;\n\n};\n\n// File:src/scenes/Fog.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Fog = function ( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new THREE.Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n};\n\nTHREE.Fog.prototype.clone = function () {\n\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\n\n};\n\n// File:src/scenes/FogExp2.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.FogExp2 = function ( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new THREE.Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n};\n\nTHREE.FogExp2.prototype.clone = function () {\n\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\n\n};\n\n// File:src/renderers/shaders/ShaderChunk.js\n\nTHREE.ShaderChunk = {};\n\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\t#ifdef WRAP_AROUND\\n\\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\tfloat lDistance = 1.0;\\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\t\tlVector = normalize( lVector );\\n\\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\t\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\n\nTHREE.ShaderChunk[ 'default_vertex'] = \"vec4 mvPosition;\\n\\n#ifdef USE_SKINNING\\n\\n\tmvPosition = modelViewMatrix * skinned;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\\n\\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\\n\\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\";\n\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\t#ifdef USE_MORPHNORMALS\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\t#else\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"vec3 normal = normalize( vNormal );\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tvec3 pointDiffuse = vec3( 0.0 );\\n\tvec3 pointSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( pointLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\n\\n\t\t\t\t// specular\\n\\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tvec3 spotDiffuse = vec3( 0.0 );\\n\tvec3 spotSpecular = vec3( 0.0 );\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat lDistance = 1.0;\\n\t\tif ( spotLightDistance[ i ] > 0.0 )\\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t\t#else\\n\\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t\t#endif\\n\\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\\n\\n\t\t\t\t\t// specular\\n\\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tvec3 dirDiffuse = vec3( 0.0 );\\n\tvec3 dirSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\t\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\t\t\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, dirVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\t\t// specular\\n\\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t/*\\n\t\t// fresnel term from skin shader\\n\t\tconst float F0 = 0.128;\\n\\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\t\tfloat exponential = pow( base, 5.0 );\\n\\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\t\t*/\\n\\n\t\t/*\\n\t\t// fresnel term from fresnel shader\\n\t\tconst float mFresnelBias = 0.08;\\n\t\tconst float mFresnelScale = 0.3;\\n\t\tconst float mFresnelPower = 5.0;\\n\\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\t\t*/\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tvec3 hemiDiffuse = vec3( 0.0 );\\n\tvec3 hemiSpecular = vec3( 0.0 );\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\\n\t\tvec3 lVector = normalize( lDirection.xyz );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\themiDiffuse += diffuse * hemiColor;\\n\\n\t\t// specular (sky light)\\n\\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\t\t// specular (ground light)\\n\\n\t\tvec3 lVectorGround = -lVector;\\n\\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\t}\\n\\n#endif\\n\\nvec3 totalDiffuse = vec3( 0.0 );\\nvec3 totalSpecular = vec3( 0.0 );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\ttotalDiffuse += dirDiffuse;\\n\ttotalSpecular += dirSpecular;\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\ttotalDiffuse += hemiDiffuse;\\n\ttotalSpecular += hemiSpecular;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\ttotalDiffuse += pointDiffuse;\\n\ttotalSpecular += pointSpecular;\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\ttotalDiffuse += spotDiffuse;\\n\ttotalSpecular += spotSpecular;\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\\n\\n#else\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\tmorphedNormal += normal;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\tuniform samplerCube envMap;\\n\tuniform float flipEnvMap;\\n\tuniform int combine;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform bool useRefract;\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\tuniform sampler2D lightMap;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\ttexelColor.xyz *= texelColor.xyz;\\n\\n\t#endif\\n\\n\tgl_FragColor = gl_FragColor * texelColor;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tvColor = color * color;\\n\\n\t#else\\n\\n\t\tvColor = color;\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\t#ifdef USE_MORPHTARGETS\\n\\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\tuniform bool useRefract;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\n\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"#ifdef GAMMA_OUTPUT\\n\\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambient;\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\n\\nuniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tvec3 reflectVec;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\\n\\n\t\tif ( useRefract ) {\\n\\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t} else { \\n\\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\treflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#else\\n\\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#endif\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\tcubeColor.xyz *= cubeColor.xyz;\\n\\n\t#endif\\n\\n\tif ( combine == 1 ) {\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\\n\\n\t} else if ( combine == 2 ) {\\n\\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\\n\\n\t} else {\\n\\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\\n\\n\t}\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tconst float LOG2 = 1.442695;\\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"vec3 objectNormal;\\n\\n#ifdef USE_SKINNING\\n\\n\tobjectNormal = skinnedNormal.xyz;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\\n\\n\tobjectNormal = morphedNormal;\\n\\n#endif\\n\\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\\n\\n\tobjectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\";\n\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\nvarying vec3 vNormal;\";\n\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\n\nTHREE.ShaderChunk[ 'map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\tvec3 morphed = vec3( 0.0 );\\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n\tmorphed += position;\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\\n\tworldNormal = normalize( worldNormal );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\tif ( useRefract ) {\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t} else {\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t}\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\tint inFrustumCount = 0;\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\t\t// don't shadow pixels outside of light frustum\\n\t\t\t\t// use just first frustum (for cascades)\\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\\n\\n\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\tinFrustumCount += int( inFrustum );\\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\t\t#else\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t#endif\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#else\\n\\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t}\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\tshadowColor *= shadowColor;\\n\\n\t#endif\\n\\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#endif\\n\\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\t#endif\\n\\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\t#extension GL_EXT_frag_depth : enable\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\";\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\n\n// File:src/renderers/shaders/UniformsUtils.js\n\n/**\n * Uniform Utilities\n */\n\nTHREE.UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( parameter_src instanceof Array ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n// File:src/renderers/shaders/UniformsLib.js\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nTHREE.UniformsLib = {\n\n\tcommon: {\n\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\n\n\t\t\"map\" : { type: \"t\", value: null },\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\n\n\t\t\"lightMap\" : { type: \"t\", value: null },\n\t\t\"specularMap\" : { type: \"t\", value: null },\n\t\t\"alphaMap\" : { type: \"t\", value: null },\n\n\t\t\"envMap\" : { type: \"t\", value: null },\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\n\t\t\"useRefract\" : { type: \"i\", value: 0 },\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 },\n\t\t\"combine\" : { type: \"i\", value: 0 },\n\n\t\t\"morphTargetInfluences\" : { type: \"f\", value: 0 }\n\n\t},\n\n\tbump: {\n\n\t\t\"bumpMap\" : { type: \"t\", value: null },\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\t\"normalMap\" : { type: \"t\", value: null },\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\n\t},\n\n\tfog : {\n\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\n\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\n\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\n\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\n\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] }\n\n\t},\n\n\tparticle: {\n\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\n\t\t\"size\" : { type: \"f\", value: 1.0 },\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\n\t\t\"map\" : { type: \"t\", value: null },\n\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n\t},\n\n\tshadowmap: {\n\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\n\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\n\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\n\n\t}\n\n};\n\n// File:src/renderers/shaders/ShaderLib.js\n\n/**\n * Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\n\nTHREE.ShaderLib = {\n\n\t'basic': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"common\" ],\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\n\n\t\t] ),\n\n\t\tvertexShader: [\n\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\n\n\t\t\t\"\t#ifdef USE_ENVMAP\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 diffuse;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = vec4( diffuse, opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'lambert': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"common\" ],\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\n\n\t\t\t{\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: [\n\n\t\t\t\"#define LAMBERT\",\n\n\t\t\t\"varying vec3 vLightFront;\",\n\n\t\t\t\"#ifdef DOUBLE_SIDED\",\n\n\t\t\t\"\tvarying vec3 vLightBack;\",\n\n\t\t\t\"#endif\",\n\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"varying vec3 vLightFront;\",\n\n\t\t\t\"#ifdef DOUBLE_SIDED\",\n\n\t\t\t\"\tvarying vec3 vLightBack;\",\n\n\t\t\t\"#endif\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\n\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\n\n\t\t\t\t\t//\"float isFront = float( gl_FrontFacing );\",\n\t\t\t\t\t//\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\n\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\n\t\t\t\"\t\t\tgl_FragColor.xyz *= vLightFront;\",\n\t\t\t\"\t\telse\",\n\t\t\t\"\t\t\tgl_FragColor.xyz *= vLightBack;\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\tgl_FragColor.xyz *= vLightFront;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'phong': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"common\" ],\n\t\t\tTHREE.UniformsLib[ \"bump\" ],\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\n\n\t\t\t{\n\t\t\t\t\"ambient\"  : { type: \"c\", value: new THREE.Color( 0xffffff ) },\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 },\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: [\n\n\t\t\t\"#define PHONG\",\n\n\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\"varying vec3 vNormal;\",\n\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\n\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"\tvViewPosition = -mvPosition.xyz;\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"#define PHONG\",\n\n\t\t\t\"uniform vec3 diffuse;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform vec3 ambient;\",\n\t\t\t\"uniform vec3 emissive;\",\n\t\t\t\"uniform vec3 specular;\",\n\t\t\t\"uniform float shininess;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'particle_basic': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"particle\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\n\n\t\t] ),\n\n\t\tvertexShader: [\n\n\t\t\t\"uniform float size;\",\n\t\t\t\"uniform float scale;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\n\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\n\t\t\t\"\t#else\",\n\t\t\t\"\t\tgl_PointSize = size;\",\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 psColor;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = vec4( psColor, opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'dashed': {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"common\" ],\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\n\t\t\t{\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: [\n\n\t\t\t\"uniform float scale;\",\n\t\t\t\"attribute float lineDistance;\",\n\n\t\t\t\"varying float vLineDistance;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\n\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\n\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 diffuse;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform float dashSize;\",\n\t\t\t\"uniform float totalSize;\",\n\n\t\t\t\"varying float vLineDistance;\",\n\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\n\n\t\t\t\"\t\tdiscard;\",\n\n\t\t\t\"\t}\",\n\n\t\t\t\"\tgl_FragColor = vec4( diffuse, opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'depth': {\n\n\t\tuniforms: {\n\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float mNear;\",\n\t\t\t\"uniform float mFar;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t'normal': {\n\n\t\tuniforms: {\n\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec3 vNormal;\",\n\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\t\t\t\"varying vec3 vNormal;\",\n\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tNormal map shader\n\t//\t\t- Blinn-Phong\n\t//\t\t- normal + diffuse + specular + AO + displacement + reflection + shadow maps\n\t//\t\t- point and directional lights (use with \"lights: true\" material option)\n\t ------------------------------------------------------------------------- */\n\n\t'normalmap' : {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\n\n\t\t\t{\n\n\t\t\t\"enableAO\"          : { type: \"i\", value: 0 },\n\t\t\t\"enableDiffuse\"     : { type: \"i\", value: 0 },\n\t\t\t\"enableSpecular\"    : { type: \"i\", value: 0 },\n\t\t\t\"enableReflection\"  : { type: \"i\", value: 0 },\n\t\t\t\"enableDisplacement\": { type: \"i\", value: 0 },\n\n\t\t\t\"tDisplacement\": { type: \"t\", value: null }, // must go first as this is vertex texture\n\t\t\t\"tDiffuse\"     : { type: \"t\", value: null },\n\t\t\t\"tCube\"        : { type: \"t\", value: null },\n\t\t\t\"tNormal\"      : { type: \"t\", value: null },\n\t\t\t\"tSpecular\"    : { type: \"t\", value: null },\n\t\t\t\"tAO\"          : { type: \"t\", value: null },\n\n\t\t\t\"uNormalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\n\t\t\t\"uDisplacementBias\": { type: \"f\", value: 0.0 },\n\t\t\t\"uDisplacementScale\": { type: \"f\", value: 1.0 },\n\n\t\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\n\t\t\t\"specular\": { type: \"c\", value: new THREE.Color( 0x111111 ) },\n\t\t\t\"ambient\": { type: \"c\", value: new THREE.Color( 0xffffff ) },\n\t\t\t\"shininess\": { type: \"f\", value: 30 },\n\t\t\t\"opacity\": { type: \"f\", value: 1 },\n\n\t\t\t\"useRefract\": { type: \"i\", value: 0 },\n\t\t\t\"refractionRatio\": { type: \"f\", value: 0.98 },\n\t\t\t\"reflectivity\": { type: \"f\", value: 0.5 },\n\n\t\t\t\"uOffset\" : { type: \"v2\", value: new THREE.Vector2( 0, 0 ) },\n\t\t\t\"uRepeat\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\n\t\t\t\"wrapRGB\" : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\n\n\t\t\t}\n\n\t\t] ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 ambient;\",\n\t\t\t\"uniform vec3 diffuse;\",\n\t\t\t\"uniform vec3 specular;\",\n\t\t\t\"uniform float shininess;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform bool enableDiffuse;\",\n\t\t\t\"uniform bool enableSpecular;\",\n\t\t\t\"uniform bool enableAO;\",\n\t\t\t\"uniform bool enableReflection;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform sampler2D tNormal;\",\n\t\t\t\"uniform sampler2D tSpecular;\",\n\t\t\t\"uniform sampler2D tAO;\",\n\n\t\t\t\"uniform samplerCube tCube;\",\n\n\t\t\t\"uniform vec2 uNormalScale;\",\n\n\t\t\t\"uniform bool useRefract;\",\n\t\t\t\"uniform float refractionRatio;\",\n\t\t\t\"uniform float reflectivity;\",\n\n\t\t\t\"varying vec3 vTangent;\",\n\t\t\t\"varying vec3 vBinormal;\",\n\t\t\t\"varying vec3 vNormal;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform vec3 ambientLightColor;\",\n\n\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\n\n\t\t\t\"\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\n\n\t\t\t\"\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\n\n\t\t\t\"\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\n\t\t\t\"\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#if MAX_SPOT_LIGHTS > 0\",\n\n\t\t\t\"\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\",\n\t\t\t\"\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\",\n\t\t\t\"\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\",\n\t\t\t\"\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\",\n\t\t\t\"\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#ifdef WRAP_AROUND\",\n\n\t\t\t\"\tuniform vec3 wrapRGB;\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"varying vec3 vWorldPosition;\",\n\t\t\t\"varying vec3 vViewPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n\t\t\t\"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\",\n\n\t\t\t\"\tvec3 specularTex = vec3( 1.0 );\",\n\n\t\t\t\"\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\",\n\t\t\t\"\tnormalTex.xy *= uNormalScale;\",\n\t\t\t\"\tnormalTex = normalize( normalTex );\",\n\n\t\t\t\"\tif( enableDiffuse ) {\",\n\n\t\t\t\"\t\t#ifdef GAMMA_INPUT\",\n\n\t\t\t\"\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\",\n\t\t\t\"\t\t\ttexelColor.xyz *= texelColor.xyz;\",\n\n\t\t\t\"\t\t\tgl_FragColor = gl_FragColor * texelColor;\",\n\n\t\t\t\"\t\t#else\",\n\n\t\t\t\"\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"\t\t#endif\",\n\n\t\t\t\"\t}\",\n\n\t\t\t\"\tif( enableAO ) {\",\n\n\t\t\t\"\t\t#ifdef GAMMA_INPUT\",\n\n\t\t\t\"\t\t\tvec4 aoColor = texture2D( tAO, vUv );\",\n\t\t\t\"\t\t\taoColor.xyz *= aoColor.xyz;\",\n\n\t\t\t\"\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\",\n\n\t\t\t\"\t\t#else\",\n\n\t\t\t\"\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\",\n\n\t\t\t\"\t\t#endif\",\n\n\t\t\t\"\t}\",\n\t\t\t\n\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\n\n\t\t\t\"\tif( enableSpecular )\",\n\t\t\t\"\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\",\n\n\t\t\t\"\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\",\n\t\t\t\"\tvec3 finalNormal = tsb * normalTex;\",\n\n\t\t\t\"\t#ifdef FLIP_SIDED\",\n\n\t\t\t\"\t\tfinalNormal = -finalNormal;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\tvec3 normal = normalize( finalNormal );\",\n\t\t\t\"\tvec3 viewPosition = normalize( vViewPosition );\",\n\n\t\t\t\t// point lights\n\n\t\t\t\"\t#if MAX_POINT_LIGHTS > 0\",\n\n\t\t\t\"\t\tvec3 pointDiffuse = vec3( 0.0 );\",\n\t\t\t\"\t\tvec3 pointSpecular = vec3( 0.0 );\",\n\n\t\t\t\"\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\n\n\t\t\t\"\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\n\t\t\t\"\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\",\n\n\t\t\t\"\t\t\tfloat pointDistance = 1.0;\",\n\t\t\t\"\t\t\tif ( pointLightDistance[ i ] > 0.0 )\",\n\t\t\t\"\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\",\n\n\t\t\t\"\t\t\tpointVector = normalize( pointVector );\",\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\"\t\t\t#ifdef WRAP_AROUND\",\n\n\t\t\t\"\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\",\n\t\t\t\"\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\",\n\n\t\t\t\"\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\",\n\n\t\t\t\"\t\t\t#else\",\n\n\t\t\t\"\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\",\n\n\t\t\t\"\t\t\t#endif\",\n\n\t\t\t\"\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\",\n\n\t\t\t\t\t\t// specular\n\n\t\t\t\"\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\",\n\t\t\t\"\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\n\t\t\t\"\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\n\n\t\t\t\"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n\t\t\t\"\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\",\n\t\t\t\"\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t// spot lights\n\n\t\t\t\"\t#if MAX_SPOT_LIGHTS > 0\",\n\n\t\t\t\"\t\tvec3 spotDiffuse = vec3( 0.0 );\",\n\t\t\t\"\t\tvec3 spotSpecular = vec3( 0.0 );\",\n\n\t\t\t\"\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\",\n\n\t\t\t\"\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\",\n\t\t\t\"\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\",\n\n\t\t\t\"\t\t\tfloat spotDistance = 1.0;\",\n\t\t\t\"\t\t\tif ( spotLightDistance[ i ] > 0.0 )\",\n\t\t\t\"\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\",\n\n\t\t\t\"\t\t\tspotVector = normalize( spotVector );\",\n\n\t\t\t\"\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\",\n\n\t\t\t\"\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\",\n\n\t\t\t\"\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\",\n\n\t\t\t\t\t\t\t// diffuse\n\n\t\t\t\"\t\t\t\t#ifdef WRAP_AROUND\",\n\n\t\t\t\"\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\",\n\t\t\t\"\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\",\n\n\t\t\t\"\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\",\n\n\t\t\t\"\t\t\t\t#else\",\n\n\t\t\t\"\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\",\n\n\t\t\t\"\t\t\t\t#endif\",\n\n\t\t\t\"\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\",\n\n\t\t\t\t\t\t\t// specular\n\n\t\t\t\"\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\",\n\t\t\t\"\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\",\n\t\t\t\"\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\",\n\n\t\t\t\"\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n\t\t\t\"\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\",\n\t\t\t\"\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\",\n\n\t\t\t\"\t\t\t}\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t// directional lights\n\n\t\t\t\"\t#if MAX_DIR_LIGHTS > 0\",\n\n\t\t\t\"\t\tvec3 dirDiffuse = vec3( 0.0 );\",\n\t\t\t\"\t\tvec3 dirSpecular = vec3( 0.0 );\",\n\n\t\t\t\"\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\n\n\t\t\t\"\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\",\n\t\t\t\"\t\t\tvec3 dirVector = normalize( lDirection.xyz );\",\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\"\t\t\t#ifdef WRAP_AROUND\",\n\n\t\t\t\"\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\",\n\t\t\t\"\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\",\n\n\t\t\t\"\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\",\n\n\t\t\t\"\t\t\t#else\",\n\n\t\t\t\"\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\n\n\t\t\t\"\t\t\t#endif\",\n\n\t\t\t\"\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\",\n\n\t\t\t\t\t\t// specular\n\n\t\t\t\"\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\",\n\t\t\t\"\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\n\t\t\t\"\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\n\n\t\t\t\"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n\t\t\t\"\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\",\n\t\t\t\"\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t// hemisphere lights\n\n\t\t\t\"\t#if MAX_HEMI_LIGHTS > 0\",\n\n\t\t\t\"\t\tvec3 hemiDiffuse = vec3( 0.0 );\",\n\t\t\t\"\t\tvec3 hemiSpecular = vec3( 0.0 );\" ,\n\n\t\t\t\"\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\n\n\t\t\t\"\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\",\n\t\t\t\"\t\t\tvec3 lVector = normalize( lDirection.xyz );\",\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\"\t\t\tfloat dotProduct = dot( normal, lVector );\",\n\t\t\t\"\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\n\n\t\t\t\"\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\n\n\t\t\t\"\t\t\themiDiffuse += diffuse * hemiColor;\",\n\n\t\t\t\t\t\t// specular (sky light)\n\n\n\t\t\t\"\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\",\n\t\t\t\"\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\n\t\t\t\"\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\",\n\n\t\t\t\t\t\t// specular (ground light)\n\n\t\t\t\"\t\t\tvec3 lVectorGround = -lVector;\",\n\n\t\t\t\"\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\",\n\t\t\t\"\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\n\t\t\t\"\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\",\n\n\t\t\t\"\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\",\n\n\t\t\t\"\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\",\n\n\t\t\t\"\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\",\n\t\t\t\"\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\",\n\t\t\t\"\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t// all lights contribution summation\n\n\t\t\t\"\tvec3 totalDiffuse = vec3( 0.0 );\",\n\t\t\t\"\tvec3 totalSpecular = vec3( 0.0 );\",\n\n\t\t\t\"\t#if MAX_DIR_LIGHTS > 0\",\n\n\t\t\t\"\t\ttotalDiffuse += dirDiffuse;\",\n\t\t\t\"\t\ttotalSpecular += dirSpecular;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\t#if MAX_HEMI_LIGHTS > 0\",\n\n\t\t\t\"\t\ttotalDiffuse += hemiDiffuse;\",\n\t\t\t\"\t\ttotalSpecular += hemiSpecular;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\t#if MAX_POINT_LIGHTS > 0\",\n\n\t\t\t\"\t\ttotalDiffuse += pointDiffuse;\",\n\t\t\t\"\t\ttotalSpecular += pointSpecular;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\t#if MAX_SPOT_LIGHTS > 0\",\n\n\t\t\t\"\t\ttotalDiffuse += spotDiffuse;\",\n\t\t\t\"\t\ttotalSpecular += spotSpecular;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\t#ifdef METAL\",\n\n\t\t\t\"\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\tif ( enableReflection ) {\",\n\n\t\t\t\"\t\tvec3 vReflect;\",\n\t\t\t\"\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\",\n\n\t\t\t\"\t\tif ( useRefract ) {\",\n\n\t\t\t\"\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\",\n\n\t\t\t\"\t\t} else {\",\n\n\t\t\t\"\t\t\tvReflect = reflect( cameraToVertex, normal );\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\n\n\t\t\t\"\t\t#ifdef GAMMA_INPUT\",\n\n\t\t\t\"\t\t\tcubeColor.xyz *= cubeColor.xyz;\",\n\n\t\t\t\"\t\t#endif\",\n\n\t\t\t\"\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\",\n\n\t\t\t\"\t}\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tvertexShader: [\n\n\t\t\t\"attribute vec4 tangent;\",\n\n\t\t\t\"uniform vec2 uOffset;\",\n\t\t\t\"uniform vec2 uRepeat;\",\n\n\t\t\t\"uniform bool enableDisplacement;\",\n\n\t\t\t\"#ifdef VERTEX_TEXTURES\",\n\n\t\t\t\"\tuniform sampler2D tDisplacement;\",\n\t\t\t\"\tuniform float uDisplacementScale;\",\n\t\t\t\"\tuniform float uDisplacementBias;\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"varying vec3 vTangent;\",\n\t\t\t\"varying vec3 vBinormal;\",\n\t\t\t\"varying vec3 vNormal;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"varying vec3 vWorldPosition;\",\n\t\t\t\"varying vec3 vViewPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\n\n\t\t\t\t// normal, tangent and binormal vectors\n\n\t\t\t\"\t#ifdef USE_SKINNING\",\n\n\t\t\t\"\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\",\n\n\t\t\t\"\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\",\n\t\t\t\"\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\tvNormal = normalize( normalMatrix * normal );\",\n\t\t\t\"\t\tvTangent = normalize( normalMatrix * tangent.xyz );\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\",\n\n\t\t\t\"\tvUv = uv * uRepeat + uOffset;\",\n\n\t\t\t\t// displacement mapping\n\n\t\t\t\"\tvec3 displacedPosition;\",\n\n\t\t\t\"\t#ifdef VERTEX_TEXTURES\",\n\n\t\t\t\"\t\tif ( enableDisplacement ) {\",\n\n\t\t\t\"\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\",\n\t\t\t\"\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\",\n\t\t\t\"\t\t\tdisplacedPosition = position + normalize( normal ) * df;\",\n\n\t\t\t\"\t\t} else {\",\n\n\t\t\t\"\t\t\t#ifdef USE_SKINNING\",\n\n\t\t\t\"\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"\t\t\t\tvec4 skinned = vec4( 0.0 );\",\n\t\t\t\"\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\",\n\t\t\t\"\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\",\n\t\t\t\"\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\",\n\t\t\t\"\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\",\n\t\t\t\"\t\t\t\tskinned  = bindMatrixInverse * skinned;\",\n\n\t\t\t\"\t\t\t\tdisplacedPosition = skinned.xyz;\",\n\n\t\t\t\"\t\t\t#else\",\n\n\t\t\t\"\t\t\t\tdisplacedPosition = position;\",\n\n\t\t\t\"\t\t\t#endif\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\t#ifdef USE_SKINNING\",\n\n\t\t\t\"\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"\t\t\tvec4 skinned = vec4( 0.0 );\",\n\t\t\t\"\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\",\n\t\t\t\"\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\",\n\t\t\t\"\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\",\n\t\t\t\"\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\",\n\t\t\t\"\t\t\tskinned  = bindMatrixInverse * skinned;\",\n\n\t\t\t\"\t\t\tdisplacedPosition = skinned.xyz;\",\n\n\t\t\t\"\t\t#else\",\n\n\t\t\t\"\t\t\tdisplacedPosition = position;\",\n\n\t\t\t\"\t\t#endif\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t//\n\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\n\t\t\t\"\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\n\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\t//\n\n\t\t\t\"\tvWorldPosition = worldPosition.xyz;\",\n\t\t\t\"\tvViewPosition = -mvPosition.xyz;\",\n\n\t\t\t\t// shadows\n\n\t\t\t\"\t#ifdef USE_SHADOWMAP\",\n\n\t\t\t\"\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\",\n\n\t\t\t\"\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\",\n\n\t\t\t\"\t\t}\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\t'cube': {\n\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec3 vWorldPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n\t\t\t\"\tvWorldPosition = worldPosition.xyz;\",\n\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform samplerCube tCube;\",\n\t\t\t\"uniform float tFlip;\",\n\n\t\t\t\"varying vec3 vWorldPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t},\n\n\t/* Depth encoding into RGBA texture\n\t *\n\t * based on SpiderGL shadow map example\n\t * http://spidergl.org/example.php?id=6\n\t *\n\t * originally from\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n\t *\n\t * see also\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n\t */\n\n\t'depthRGBA': {\n\n\t\tuniforms: {},\n\n\t\tvertexShader: [\n\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\n\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\n\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\n\t\t\t\"\treturn res;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\n\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\n\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\n\n\t\t\t\"\t#else\",\n\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\n\n\t\t\t\"\t#endif\",\n\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t}\n\n};\n\n// File:src/renderers/WebGLRenderer.js\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nTHREE.WebGLRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\n\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t_precision = parameters.precision !== undefined ? parameters.precision : 'highp',\n\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t_logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = 0;\n\n\tvar lights = [];\n\n\tvar _webglObjects = {};\n\tvar _webglObjectsImmediate = [];\n\n\tvar opaqueObjects = [];\n\tvar transparentObjects = [];\n\n\tvar sprites = [];\n\tvar lensFlares = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\tthis.devicePixelRatio = parameters.devicePixelRatio !== undefined\n\t\t\t\t ? parameters.devicePixelRatio\n\t\t\t\t : self.devicePixelRatio !== undefined\n\t\t\t\t\t ? self.devicePixelRatio\n\t\t\t\t\t : 1;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// physically based shading\n\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// shadow map\n\n\tthis.shadowMapEnabled = false;\n\tthis.shadowMapType = THREE.PCFShadowMap;\n\tthis.shadowMapCullFace = THREE.CullFaceFront;\n\tthis.shadowMapDebug = false;\n\tthis.shadowMapCascade = false;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// flags\n\n\tthis.autoScaleCubemaps = true;\n\n\t// info\n\n\tthis.info = {\n\n\t\tmemory: {\n\n\t\t\tprograms: 0,\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\n\t\t},\n\n\t\trender: {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t}\n\n\t};\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t_programs = [],\n\n\t// internal state cache\n\n\t_currentProgram = null,\n\t_currentFramebuffer = null,\n\t_currentMaterialId = - 1,\n\t_currentGeometryGroupHash = - 1,\n\t_currentCamera = null,\n\n\t_usedTextureUnits = 0,\n\n\t// GL state cache\n\n\t_oldDoubleSided = - 1,\n\t_oldFlipSided = - 1,\n\n\t_oldBlending = - 1,\n\n\t_oldBlendEquation = - 1,\n\t_oldBlendSrc = - 1,\n\t_oldBlendDst = - 1,\n\n\t_oldDepthTest = - 1,\n\t_oldDepthWrite = - 1,\n\n\t_oldPolygonOffset = null,\n\t_oldPolygonOffsetFactor = null,\n\t_oldPolygonOffsetUnits = null,\n\n\t_oldLineWidth = null,\n\n\t_viewportX = 0,\n\t_viewportY = 0,\n\t_viewportWidth = _canvas.width,\n\t_viewportHeight = _canvas.height,\n\t_currentWidth = 0,\n\t_currentHeight = 0,\n\n\t_newAttributes = new Uint8Array( 16 ),\n\t_enabledAttributes = new Uint8Array( 16 ),\n\n\t// frustum\n\n\t_frustum = new THREE.Frustum(),\n\n\t // camera matrices cache\n\n\t_projScreenMatrix = new THREE.Matrix4(),\n\t_projScreenMatrixPS = new THREE.Matrix4(),\n\n\t_vector3 = new THREE.Vector3(),\n\n\t// light arrays cache\n\n\t_direction = new THREE.Vector3(),\n\n\t_lightsNeedUpdate = true,\n\n\t_lights = {\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: { length: 0, colors:[], positions: [] },\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [] },\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [] },\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\n\n\t};\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar attributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t};\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl') !== null ) {\n\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t}\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( error );\n\n\t}\n\n\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\treturn {\n\t\t\t\t'rangeMin': 1,\n\t\t\t\t'rangeMax': 1,\n\t\t\t\t'precision': 1\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\tvar extensions = new THREE.WebGLExtensions( _gl );\n\n\textensions.get( 'OES_texture_float' );\n\textensions.get( 'OES_texture_float_linear' );\n\textensions.get( 'OES_standard_derivatives' );\n\n\tif ( _logarithmicDepthBuffer ) {\n\n\t\textensions.get( 'EXT_frag_depth' );\n\n\t}\n\n\t//\n\n\tfunction setDefaultGLState() {\n\n\t\t_gl.clearColor( 0, 0, 0, 1 );\n\t\t_gl.clearDepth( 1 );\n\t\t_gl.clearStencil( 0 );\n\n\t\t_gl.enable( _gl.DEPTH_TEST );\n\t\t_gl.depthFunc( _gl.LEQUAL );\n\n\t\t_gl.frontFace( _gl.CCW );\n\t\t_gl.cullFace( _gl.BACK );\n\t\t_gl.enable( _gl.CULL_FACE );\n\n\t\t_gl.enable( _gl.BLEND );\n\t\t_gl.blendEquation( _gl.FUNC_ADD );\n\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\n\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t}\n\n\tsetDefaultGLState();\n\n\tthis.context = _gl;\n\n\t// GPU capabilities\n\n\tvar _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\n\tvar _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar _supportsVertexTextures = _maxVertexTextures > 0;\n\tvar _supportsBoneTextures = _supportsVertexTextures && extensions.get( 'OES_texture_float' );\n\n\t//\n\n\tvar _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\n\tvar _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\n\tvar _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );\n\n\tvar _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\n\tvar _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\n\tvar _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );\n\n\tvar getCompressedTextureFormats = ( function () {\n\n\t\tvar array;\n\n\t\treturn function () {\n\n\t\t\tif ( array !== undefined ) {\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tarray = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) || extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\n\n\t\t\t\tvar formats = _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ){\n\n\t\t\t\t\tarray.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\treturn array;\n\n\t\t};\n\n\t} )();\n\n\t// clamp precision to maximum available\n\n\tvar highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\n\tvar mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\n\n\tif ( _precision === 'highp' && ! highpAvailable ) {\n\n\t\tif ( mediumpAvailable ) {\n\n\t\t\t_precision = 'mediump';\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: highp not supported, using mediump.' );\n\n\t\t} else {\n\n\t\t\t_precision = 'lowp';\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: highp and mediump not supported, using lowp.' );\n\n\t\t}\n\n\t}\n\n\tif ( _precision === 'mediump' && ! mediumpAvailable ) {\n\n\t\t_precision = 'lowp';\n\t\tconsole.warn( 'THREE.WebGLRenderer: mediump not supported, using lowp.' );\n\n\t}\n\n\t// Plugins\n\n\tvar shadowMapPlugin = new THREE.ShadowMapPlugin( this, lights, _webglObjects, _webglObjectsImmediate );\n\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.supportsVertexTextures = function () {\n\n\t\treturn _supportsVertexTextures;\n\n\t};\n\n\tthis.supportsFloatTextures = function () {\n\n\t\treturn extensions.get( 'OES_texture_float' );\n\n\t};\n\n\tthis.supportsStandardDerivatives = function () {\n\n\t\treturn extensions.get( 'OES_standard_derivatives' );\n\n\t};\n\n\tthis.supportsCompressedTextureS3TC = function () {\n\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t};\n\n\tthis.supportsCompressedTexturePVRTC = function () {\n\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t};\n\n\tthis.supportsBlendMinMax = function () {\n\n\t\treturn extensions.get( 'EXT_blend_minmax' );\n\n\t};\n\n\tthis.getMaxAnisotropy = ( function () {\n\n\t\tvar value;\n\n\t\treturn function () {\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\treturn value;\n\n\t\t\t}\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tvalue = extension !== null ? _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t} )();\n\n\tthis.getPrecision = function () {\n\n\t\treturn _precision;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvas.width = width * this.devicePixelRatio;\n\t\t_canvas.height = height * this.devicePixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * this.devicePixelRatio;\n\t\t_viewportY = y * this.devicePixelRatio;\n\n\t\t_viewportWidth = width * this.devicePixelRatio;\n\t\t_viewportHeight = height * this.devicePixelRatio;\n\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_gl.scissor(\n\t\t\tx * this.devicePixelRatio,\n\t\t\ty * this.devicePixelRatio,\n\t\t\twidth * this.devicePixelRatio,\n\t\t\theight * this.devicePixelRatio\n\t\t);\n\n\t};\n\n\tthis.enableScissorTest = function ( enable ) {\n\n\t\tenable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\n\n\t};\n\n\t// Clearing\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t// Reset\n\n\tthis.resetGLState = function () {\n\n\t\t_currentProgram = null;\n\t\t_currentCamera = null;\n\n\t\t_oldBlending = - 1;\n\t\t_oldDepthTest = - 1;\n\t\t_oldDepthWrite = - 1;\n\t\t_oldDoubleSided = - 1;\n\t\t_oldFlipSided = - 1;\n\t\t_currentGeometryGroupHash = - 1;\n\t\t_currentMaterialId = - 1;\n\n\t\t_lightsNeedUpdate = true;\n\n\t};\n\n\t// Buffer allocation\n\n\tfunction createParticleBuffers ( geometry ) {\n\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\n\n\t\t_this.info.memory.geometries ++;\n\n\t};\n\n\tfunction createLineBuffers ( geometry ) {\n\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\n\t\tgeometry.__webglLineDistanceBuffer = _gl.createBuffer();\n\n\t\t_this.info.memory.geometries ++;\n\n\t};\n\n\tfunction createMeshBuffers ( geometryGroup ) {\n\n\t\tgeometryGroup.__webglVertexBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglNormalBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglTangentBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglColorBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglUVBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglUV2Buffer = _gl.createBuffer();\n\n\t\tgeometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\n\n\t\tgeometryGroup.__webglFaceBuffer = _gl.createBuffer();\n\t\tgeometryGroup.__webglLineBuffer = _gl.createBuffer();\n\n\t\tvar m, ml;\n\n\t\tif ( geometryGroup.numMorphTargets ) {\n\n\t\t\tgeometryGroup.__webglMorphTargetsBuffers = [];\n\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n\t\t\t\tgeometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( geometryGroup.numMorphNormals ) {\n\n\t\t\tgeometryGroup.__webglMorphNormalsBuffers = [];\n\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n\t\t\t\tgeometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_this.info.memory.geometries ++;\n\n\t};\n\n\t// Events\n\n\tvar onObjectRemoved = function ( event ) {\n\n\t\tvar object = event.target;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tchild.removeEventListener( 'remove', onObjectRemoved );\n\n\t\t\tremoveObject( child );\n\n\t\t} );\n\n\t};\n\n\tvar onGeometryDispose = function ( event ) {\n\n\t\tvar geometry = event.target;\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdeallocateGeometry( geometry );\n\n\t};\n\n\tvar onTextureDispose = function ( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\t_this.info.memory.textures --;\n\n\n\t};\n\n\tvar onRenderTargetDispose = function ( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t_this.info.memory.textures --;\n\n\t};\n\n\tvar onMaterialDispose = function ( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t};\n\n\t// Buffer deallocation\n\n\tvar deleteBuffers = function ( geometry ) {\n\t\n\t\tvar buffers = [\n\t\t\t'__webglVertexBuffer',\n\t\t\t'__webglNormalBuffer',\n\t\t\t'__webglTangentBuffer',\n\t\t\t'__webglColorBuffer',\n\t\t\t'__webglUVBuffer',\n\t\t\t'__webglUV2Buffer',\n\t\t\t\n\t\t\t'__webglSkinIndicesBuffer',\n\t\t\t'__webglSkinWeightsBuffer',\n\t\t\t\n\t\t\t'__webglFaceBuffer',\n\t\t\t'__webglLineBuffer',\n\t\t\t\n\t\t\t'__webglLineDistanceBuffer'\n\t\t];\n\n\t\tfor ( var i = 0, l = buffers.length; i < l; i ++ ) {\n\n\t\t\tvar name = buffers[ i ];\n\n\t\t\tif ( geometry[ name ] !== undefined ) {\n\n\t\t\t\t_gl.deleteBuffer( geometry[ name ] );\n\n\t\t\t\tdelete geometry[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// custom attributes\n\n\t\tif ( geometry.__webglCustomAttributesList !== undefined ) {\n\n\t\t\tfor ( var name in geometry.__webglCustomAttributesList ) {\n\n\t\t\t\t_gl.deleteBuffer( geometry.__webglCustomAttributesList[ name ].buffer );\n\n\t\t\t}\n\n\t\t\tdelete geometry.__webglCustomAttributesList;\n\n\t\t}\n\n\t\t_this.info.memory.geometries --;\n\n\t};\n\n\tvar deallocateGeometry = function ( geometry ) {\n\n\t\tdelete geometry.__webglInit;\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tfor ( var name in geometry.attributes ) {\n\t\t\t\n\t\t\t\tvar attribute = geometry.attributes[ name ];\n\n\t\t\t\tif ( attribute.buffer !== undefined ) {\n\n\t\t\t\t\t_gl.deleteBuffer( attribute.buffer );\n\n\t\t\t\t\tdelete attribute.buffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.info.memory.geometries --;\n\n\t\t} else {\n\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\n\n\t\t\tif ( geometryGroupsList !== undefined ) {\n\n\t\t\t\tfor ( var i = 0,l = geometryGroupsList.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\n\n\t\t\t\t\tif ( geometryGroup.numMorphTargets !== undefined ) {\n\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphTargetsBuffers;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometryGroup.numMorphNormals !== undefined ) {\n\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphNormalsBuffers;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdeleteBuffers( geometryGroup );\n\n\t\t\t\t}\n\n\t\t\t\tdelete geometryGroups[ geometry.id ];\n\n\t\t\t} else {\n\n\t\t\t\tdeleteBuffers( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TOFIX: Workaround for deleted geometry being currently bound\n\n\t\t_currentGeometryGroupHash = - 1;\n\n\t};\n\n\tvar deallocateTexture = function ( texture ) {\n\n\t\tif ( texture.image && texture.image.__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( texture.image.__webglTextureCube );\n\n\t\t\tdelete texture.image.__webglTextureCube;\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( texture.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( texture.__webglTexture );\n\n\t\t\tdelete texture.__webglTexture;\n\t\t\tdelete texture.__webglInit;\n\n\t\t}\n\n\t};\n\n\tvar deallocateRenderTarget = function ( renderTarget ) {\n\n\t\tif ( ! renderTarget || renderTarget.__webglTexture === undefined ) return;\n\n\t\t_gl.deleteTexture( renderTarget.__webglTexture );\n\n\t\tdelete renderTarget.__webglTexture;\n\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\n\t\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\n\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\n\n\t\t}\n\n\t\tdelete renderTarget.__webglFramebuffer;\n\t\tdelete renderTarget.__webglRenderbuffer;\n\n\t};\n\n\tvar deallocateMaterial = function ( material ) {\n\n\t\tvar program = material.program.program;\n\n\t\tif ( program === undefined ) return;\n\n\t\tmaterial.program = undefined;\n\n\t\t// only deallocate GL program if this was the last use of shared program\n\t\t// assumed there is only single copy of any program in the _programs list\n\t\t// (that's how it's constructed)\n\n\t\tvar i, il, programInfo;\n\t\tvar deleteProgram = false;\n\n\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\n\n\t\t\tprogramInfo = _programs[ i ];\n\n\t\t\tif ( programInfo.program === program ) {\n\n\t\t\t\tprogramInfo.usedTimes --;\n\n\t\t\t\tif ( programInfo.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteProgram = true;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( deleteProgram === true ) {\n\n\t\t\t// avoid using array.splice, this is costlier than creating new array from scratch\n\n\t\t\tvar newPrograms = [];\n\n\t\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\n\n\t\t\t\tprogramInfo = _programs[ i ];\n\n\t\t\t\tif ( programInfo.program !== program ) {\n\n\t\t\t\t\tnewPrograms.push( programInfo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_programs = newPrograms;\n\n\t\t\t_gl.deleteProgram( program );\n\n\t\t\t_this.info.memory.programs --;\n\n\t\t}\n\n\t};\n\n\t// Buffer initialization\n\n\tfunction initCustomAttributes ( object ) {\n\n\t\tvar geometry = object.geometry;\n\t\tvar material = object.material;\n\n\t\tvar nvertices = geometry.vertices.length;\n\n\t\tif ( material.attributes ) {\n\n\t\t\tif ( geometry.__webglCustomAttributesList === undefined ) {\n\n\t\t\t\tgeometry.__webglCustomAttributesList = [];\n\n\t\t\t}\n\n\t\t\tfor ( var name in material.attributes ) {\n\n\t\t\t\tvar attribute = material.attributes[ name ];\n\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\n\n\t\t\t\t\tattribute.__webglInitialized = true;\n\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\n\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\n\n\t\t\t\t\tattribute.size = size;\n\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\n\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\n\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.__webglCustomAttributesList.push( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction initParticleBuffers ( geometry, object ) {\n\n\t\tvar nvertices = geometry.vertices.length;\n\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\n\n\t\tgeometry.__sortArray = [];\n\n\t\tgeometry.__webglParticleCount = nvertices;\n\n\t\tinitCustomAttributes( object );\n\n\t};\n\n\tfunction initLineBuffers ( geometry, object ) {\n\n\t\tvar nvertices = geometry.vertices.length;\n\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\n\t\tgeometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\n\n\t\tgeometry.__webglLineCount = nvertices;\n\n\t\tinitCustomAttributes( object );\n\n\t};\n\n\tfunction initMeshBuffers ( geometryGroup, object ) {\n\n\t\tvar geometry = object.geometry,\n\t\t\tfaces3 = geometryGroup.faces3,\n\n\t\t\tnvertices = faces3.length * 3,\n\t\t\tntris     = faces3.length * 1,\n\t\t\tnlines    = faces3.length * 3,\n\n\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\n\n\t\tgeometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\n\t\tgeometryGroup.__normalArray = new Float32Array( nvertices * 3 );\n\t\tgeometryGroup.__colorArray = new Float32Array( nvertices * 3 );\n\t\tgeometryGroup.__uvArray = new Float32Array( nvertices * 2 );\n\n\t\tif ( geometry.faceVertexUvs.length > 1 ) {\n\n\t\t\tgeometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\n\n\t\t}\n\n\t\tif ( geometry.hasTangents ) {\n\n\t\t\tgeometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\n\n\t\t}\n\n\t\tif ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\n\n\t\t\tgeometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\n\t\t\tgeometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\n\n\t\t}\n\n\t\tvar UintArray = extensions.get( 'OES_element_index_uint' ) !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\n\n\t\tgeometryGroup.__typeArray = UintArray;\n\t\tgeometryGroup.__faceArray = new UintArray( ntris * 3 );\n\t\tgeometryGroup.__lineArray = new UintArray( nlines * 2 );\n\n\t\tvar m, ml;\n\n\t\tif ( geometryGroup.numMorphTargets ) {\n\n\t\t\tgeometryGroup.__morphTargetsArrays = [];\n\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\n\n\t\t\t\tgeometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( geometryGroup.numMorphNormals ) {\n\n\t\t\tgeometryGroup.__morphNormalsArrays = [];\n\n\t\t\tfor ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\n\n\t\t\t\tgeometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryGroup.__webglFaceCount = ntris * 3;\n\t\tgeometryGroup.__webglLineCount = nlines * 2;\n\n\n\t\t// custom attributes\n\n\t\tif ( material.attributes ) {\n\n\t\t\tif ( geometryGroup.__webglCustomAttributesList === undefined ) {\n\n\t\t\t\tgeometryGroup.__webglCustomAttributesList = [];\n\n\t\t\t}\n\n\t\t\tfor ( var name in material.attributes ) {\n\n\t\t\t\t// Do a shallow copy of the attribute object so different geometryGroup chunks use different\n\t\t\t\t// attribute buffers which are correctly indexed in the setMeshBuffers function\n\n\t\t\t\tvar originalAttribute = material.attributes[ name ];\n\n\t\t\t\tvar attribute = {};\n\n\t\t\t\tfor ( var property in originalAttribute ) {\n\n\t\t\t\t\tattribute[ property ] = originalAttribute[ property ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\n\n\t\t\t\t\tattribute.__webglInitialized = true;\n\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\n\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\n\n\t\t\t\t\tattribute.size = size;\n\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\n\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\n\n\t\t\t\t\toriginalAttribute.needsUpdate = true;\n\t\t\t\t\tattribute.__original = originalAttribute;\n\n\t\t\t\t}\n\n\t\t\t\tgeometryGroup.__webglCustomAttributesList.push( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryGroup.__inittedArrays = true;\n\n\t};\n\n\tfunction getBufferMaterial( object, geometryGroup ) {\n\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\n\t\t\t ? object.material.materials[ geometryGroup.materialIndex ]\n\t\t\t : object.material;\n\n\t};\n\n\tfunction materialNeedsSmoothNormals ( material ) {\n\n\t\treturn material && material.shading !== undefined && material.shading === THREE.SmoothShading;\n\n\t};\n\n\t// Buffer setting\n\n\tfunction setParticleBuffers ( geometry, hint, object ) {\n\n\t\tvar v, c, vertex, offset, index, color,\n\n\t\tvertices = geometry.vertices,\n\t\tvl = vertices.length,\n\n\t\tcolors = geometry.colors,\n\t\tcl = colors.length,\n\n\t\tvertexArray = geometry.__vertexArray,\n\t\tcolorArray = geometry.__colorArray,\n\n\t\tsortArray = geometry.__sortArray,\n\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\n\t\tdirtyElements = geometry.elementsNeedUpdate,\n\t\tdirtyColors = geometry.colorsNeedUpdate,\n\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\n\t\ti, il,\n\t\ta, ca, cal, value,\n\t\tcustomAttribute;\n\n\t\tif ( object.sortParticles ) {\n\n\t\t\t_projScreenMatrixPS.copy( _projScreenMatrix );\n\t\t\t_projScreenMatrixPS.multiply( object.matrixWorld );\n\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\n\n\t\t\t\tvertex = vertices[ v ];\n\n\t\t\t\t_vector3.copy( vertex );\n\t\t\t\t_vector3.applyProjection( _projScreenMatrixPS );\n\n\t\t\t\tsortArray[ v ] = [ _vector3.z, v ];\n\n\t\t\t}\n\n\t\t\tsortArray.sort( numericalSort );\n\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\n\n\t\t\t\tvertex = vertices[ sortArray[ v ][ 1 ] ];\n\n\t\t\t\toffset = v * 3;\n\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\n\n\t\t\t\toffset = c * 3;\n\n\t\t\t\tcolor = colors[ sortArray[ c ][ 1 ] ];\n\n\t\t\t\tcolorArray[ offset ]     = color.r;\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\n\n\t\t\t}\n\n\t\t\tif ( customAttributes ) {\n\n\t\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n\t\t\t\t\tcustomAttribute = customAttributes[ i ];\n\n\t\t\t\t\tif ( ! ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) ) continue;\n\n\t\t\t\t\toffset = 0;\n\n\t\t\t\t\tcal = customAttribute.value.length;\n\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ index ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\n\t\t\t\t\t\t\toffset += 2;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\n\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]     = value.r;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\n\n\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\n\n\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tindex = sortArray[ ca ][ 1 ];\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ index ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\n\n\t\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( dirtyVertices ) {\n\n\t\t\t\tfor ( v = 0; v < vl; v ++ ) {\n\n\t\t\t\t\tvertex = vertices[ v ];\n\n\t\t\t\t\toffset = v * 3;\n\n\t\t\t\t\tvertexArray[ offset ]     = vertex.x;\n\t\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\n\t\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( dirtyColors ) {\n\n\t\t\t\tfor ( c = 0; c < cl; c ++ ) {\n\n\t\t\t\t\tcolor = colors[ c ];\n\n\t\t\t\t\toffset = c * 3;\n\n\t\t\t\t\tcolorArray[ offset ]     = color.r;\n\t\t\t\t\tcolorArray[ offset + 1 ] = color.g;\n\t\t\t\t\tcolorArray[ offset + 2 ] = color.b;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( customAttributes ) {\n\n\t\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n\t\t\t\t\tcustomAttribute = customAttributes[ i ];\n\n\t\t\t\t\tif ( customAttribute.needsUpdate &&\n\t\t\t\t\t\t ( customAttribute.boundTo === undefined ||\n\t\t\t\t\t\t\t customAttribute.boundTo === 'vertices' ) ) {\n\n\t\t\t\t\t\tcal = customAttribute.value.length;\n\n\t\t\t\t\t\toffset = 0;\n\n\t\t\t\t\t\tif ( customAttribute.size === 1 ) {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\n\t\t\t\t\t\t\t\toffset += 2;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\n\n\t\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\n\n\t\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\n\n\t\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\t\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\n\n\t\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\n\n\t\t\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dirtyVertices || object.sortParticles ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyColors || object.sortParticles ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n\t\t}\n\n\t\tif ( customAttributes ) {\n\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tcustomAttribute = customAttributes[ i ];\n\n\t\t\t\tif ( customAttribute.needsUpdate || object.sortParticles ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setLineBuffers ( geometry, hint ) {\n\n\t\tvar v, c, d, vertex, offset, color,\n\n\t\tvertices = geometry.vertices,\n\t\tcolors = geometry.colors,\n\t\tlineDistances = geometry.lineDistances,\n\n\t\tvl = vertices.length,\n\t\tcl = colors.length,\n\t\tdl = lineDistances.length,\n\n\t\tvertexArray = geometry.__vertexArray,\n\t\tcolorArray = geometry.__colorArray,\n\t\tlineDistanceArray = geometry.__lineDistanceArray,\n\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\n\t\tdirtyColors = geometry.colorsNeedUpdate,\n\t\tdirtyLineDistances = geometry.lineDistancesNeedUpdate,\n\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\n\n\t\ti, il,\n\t\ta, ca, cal, value,\n\t\tcustomAttribute;\n\n\t\tif ( dirtyVertices ) {\n\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\n\n\t\t\t\tvertex = vertices[ v ];\n\n\t\t\t\toffset = v * 3;\n\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyColors ) {\n\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\n\n\t\t\t\tcolor = colors[ c ];\n\n\t\t\t\toffset = c * 3;\n\n\t\t\t\tcolorArray[ offset ]     = color.r;\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyLineDistances ) {\n\n\t\t\tfor ( d = 0; d < dl; d ++ ) {\n\n\t\t\t\tlineDistanceArray[ d ] = lineDistances[ d ];\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\n\n\t\t}\n\n\t\tif ( customAttributes ) {\n\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tcustomAttribute = customAttributes[ i ];\n\n\t\t\t\tif ( customAttribute.needsUpdate &&\n\t\t\t\t\t ( customAttribute.boundTo === undefined ||\n\t\t\t\t\t\t customAttribute.boundTo === 'vertices' ) ) {\n\n\t\t\t\t\toffset = 0;\n\n\t\t\t\t\tcal = customAttribute.value.length;\n\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\n\t\t\t\t\t\t\toffset += 2;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\n\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\n\n\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\n\n\t\t\t\t\t\t\t\toffset += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\n\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]    = value.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\n\n\t\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\n\n\t\tif ( ! geometryGroup.__inittedArrays ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar needsSmoothNormals = materialNeedsSmoothNormals( material );\n\n\t\tvar f, fl, fi, face,\n\t\tvertexNormals, faceNormal, normal,\n\t\tvertexColors, faceColor,\n\t\tvertexTangents,\n\t\tuv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,\n\t\tc1, c2, c3,\n\t\tsw1, sw2, sw3, sw4,\n\t\tsi1, si2, si3, si4,\n\t\tsa1, sa2, sa3, sa4,\n\t\tsb1, sb2, sb3, sb4,\n\t\tm, ml, i, il,\n\t\tvn, uvi, uv2i,\n\t\tvk, vkl, vka,\n\t\tnka, chf, faceVertexNormals,\n\t\ta,\n\n\t\tvertexIndex = 0,\n\n\t\toffset = 0,\n\t\toffset_uv = 0,\n\t\toffset_uv2 = 0,\n\t\toffset_face = 0,\n\t\toffset_normal = 0,\n\t\toffset_tangent = 0,\n\t\toffset_line = 0,\n\t\toffset_color = 0,\n\t\toffset_skin = 0,\n\t\toffset_morphTarget = 0,\n\t\toffset_custom = 0,\n\t\toffset_customSrc = 0,\n\n\t\tvalue,\n\n\t\tvertexArray = geometryGroup.__vertexArray,\n\t\tuvArray = geometryGroup.__uvArray,\n\t\tuv2Array = geometryGroup.__uv2Array,\n\t\tnormalArray = geometryGroup.__normalArray,\n\t\ttangentArray = geometryGroup.__tangentArray,\n\t\tcolorArray = geometryGroup.__colorArray,\n\n\t\tskinIndexArray = geometryGroup.__skinIndexArray,\n\t\tskinWeightArray = geometryGroup.__skinWeightArray,\n\n\t\tmorphTargetsArrays = geometryGroup.__morphTargetsArrays,\n\t\tmorphNormalsArrays = geometryGroup.__morphNormalsArrays,\n\n\t\tcustomAttributes = geometryGroup.__webglCustomAttributesList,\n\t\tcustomAttribute,\n\n\t\tfaceArray = geometryGroup.__faceArray,\n\t\tlineArray = geometryGroup.__lineArray,\n\n\t\tgeometry = object.geometry, // this is shared for all chunks\n\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\n\t\tdirtyElements = geometry.elementsNeedUpdate,\n\t\tdirtyUvs = geometry.uvsNeedUpdate,\n\t\tdirtyNormals = geometry.normalsNeedUpdate,\n\t\tdirtyTangents = geometry.tangentsNeedUpdate,\n\t\tdirtyColors = geometry.colorsNeedUpdate,\n\t\tdirtyMorphTargets = geometry.morphTargetsNeedUpdate,\n\n\t\tvertices = geometry.vertices,\n\t\tchunk_faces3 = geometryGroup.faces3,\n\t\tobj_faces = geometry.faces,\n\n\t\tobj_uvs  = geometry.faceVertexUvs[ 0 ],\n\t\tobj_uvs2 = geometry.faceVertexUvs[ 1 ],\n\n\t\tobj_colors = geometry.colors,\n\n\t\tobj_skinIndices = geometry.skinIndices,\n\t\tobj_skinWeights = geometry.skinWeights,\n\n\t\tmorphTargets = geometry.morphTargets,\n\t\tmorphNormals = geometry.morphNormals;\n\n\t\tif ( dirtyVertices ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\tv1 = vertices[ face.a ];\n\t\t\t\tv2 = vertices[ face.b ];\n\t\t\t\tv3 = vertices[ face.c ];\n\n\t\t\t\tvertexArray[ offset ]     = v1.x;\n\t\t\t\tvertexArray[ offset + 1 ] = v1.y;\n\t\t\t\tvertexArray[ offset + 2 ] = v1.z;\n\n\t\t\t\tvertexArray[ offset + 3 ] = v2.x;\n\t\t\t\tvertexArray[ offset + 4 ] = v2.y;\n\t\t\t\tvertexArray[ offset + 5 ] = v2.z;\n\n\t\t\t\tvertexArray[ offset + 6 ] = v3.x;\n\t\t\t\tvertexArray[ offset + 7 ] = v3.y;\n\t\t\t\tvertexArray[ offset + 8 ] = v3.z;\n\n\t\t\t\toffset += 9;\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyMorphTargets ) {\n\n\t\t\tfor ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\n\n\t\t\t\toffset_morphTarget = 0;\n\n\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\tchf = chunk_faces3[ f ];\n\t\t\t\t\tface = obj_faces[ chf ];\n\n\t\t\t\t\t// morph positions\n\n\t\t\t\t\tv1 = morphTargets[ vk ].vertices[ face.a ];\n\t\t\t\t\tv2 = morphTargets[ vk ].vertices[ face.b ];\n\t\t\t\t\tv3 = morphTargets[ vk ].vertices[ face.c ];\n\n\t\t\t\t\tvka = morphTargetsArrays[ vk ];\n\n\t\t\t\t\tvka[ offset_morphTarget ]     = v1.x;\n\t\t\t\t\tvka[ offset_morphTarget + 1 ] = v1.y;\n\t\t\t\t\tvka[ offset_morphTarget + 2 ] = v1.z;\n\n\t\t\t\t\tvka[ offset_morphTarget + 3 ] = v2.x;\n\t\t\t\t\tvka[ offset_morphTarget + 4 ] = v2.y;\n\t\t\t\t\tvka[ offset_morphTarget + 5 ] = v2.z;\n\n\t\t\t\t\tvka[ offset_morphTarget + 6 ] = v3.x;\n\t\t\t\t\tvka[ offset_morphTarget + 7 ] = v3.y;\n\t\t\t\t\tvka[ offset_morphTarget + 8 ] = v3.z;\n\n\t\t\t\t\t// morph normals\n\n\t\t\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\t\t\tif ( needsSmoothNormals ) {\n\n\t\t\t\t\t\t\tfaceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\n\n\t\t\t\t\t\t\tn1 = faceVertexNormals.a;\n\t\t\t\t\t\t\tn2 = faceVertexNormals.b;\n\t\t\t\t\t\t\tn3 = faceVertexNormals.c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tn1 = morphNormals[ vk ].faceNormals[ chf ];\n\t\t\t\t\t\t\tn2 = n1;\n\t\t\t\t\t\t\tn3 = n1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnka = morphNormalsArrays[ vk ];\n\n\t\t\t\t\t\tnka[ offset_morphTarget ]     = n1.x;\n\t\t\t\t\t\tnka[ offset_morphTarget + 1 ] = n1.y;\n\t\t\t\t\t\tnka[ offset_morphTarget + 2 ] = n1.z;\n\n\t\t\t\t\t\tnka[ offset_morphTarget + 3 ] = n2.x;\n\t\t\t\t\t\tnka[ offset_morphTarget + 4 ] = n2.y;\n\t\t\t\t\t\tnka[ offset_morphTarget + 5 ] = n2.z;\n\n\t\t\t\t\t\tnka[ offset_morphTarget + 6 ] = n3.x;\n\t\t\t\t\t\tnka[ offset_morphTarget + 7 ] = n3.y;\n\t\t\t\t\t\tnka[ offset_morphTarget + 8 ] = n3.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//\n\n\t\t\t\t\toffset_morphTarget += 9;\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\n\n\t\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( obj_skinWeights.length ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\t// weights\n\n\t\t\t\tsw1 = obj_skinWeights[ face.a ];\n\t\t\t\tsw2 = obj_skinWeights[ face.b ];\n\t\t\t\tsw3 = obj_skinWeights[ face.c ];\n\n\t\t\t\tskinWeightArray[ offset_skin ]     = sw1.x;\n\t\t\t\tskinWeightArray[ offset_skin + 1 ] = sw1.y;\n\t\t\t\tskinWeightArray[ offset_skin + 2 ] = sw1.z;\n\t\t\t\tskinWeightArray[ offset_skin + 3 ] = sw1.w;\n\n\t\t\t\tskinWeightArray[ offset_skin + 4 ] = sw2.x;\n\t\t\t\tskinWeightArray[ offset_skin + 5 ] = sw2.y;\n\t\t\t\tskinWeightArray[ offset_skin + 6 ] = sw2.z;\n\t\t\t\tskinWeightArray[ offset_skin + 7 ] = sw2.w;\n\n\t\t\t\tskinWeightArray[ offset_skin + 8 ]  = sw3.x;\n\t\t\t\tskinWeightArray[ offset_skin + 9 ]  = sw3.y;\n\t\t\t\tskinWeightArray[ offset_skin + 10 ] = sw3.z;\n\t\t\t\tskinWeightArray[ offset_skin + 11 ] = sw3.w;\n\n\t\t\t\t// indices\n\n\t\t\t\tsi1 = obj_skinIndices[ face.a ];\n\t\t\t\tsi2 = obj_skinIndices[ face.b ];\n\t\t\t\tsi3 = obj_skinIndices[ face.c ];\n\n\t\t\t\tskinIndexArray[ offset_skin ]     = si1.x;\n\t\t\t\tskinIndexArray[ offset_skin + 1 ] = si1.y;\n\t\t\t\tskinIndexArray[ offset_skin + 2 ] = si1.z;\n\t\t\t\tskinIndexArray[ offset_skin + 3 ] = si1.w;\n\n\t\t\t\tskinIndexArray[ offset_skin + 4 ] = si2.x;\n\t\t\t\tskinIndexArray[ offset_skin + 5 ] = si2.y;\n\t\t\t\tskinIndexArray[ offset_skin + 6 ] = si2.z;\n\t\t\t\tskinIndexArray[ offset_skin + 7 ] = si2.w;\n\n\t\t\t\tskinIndexArray[ offset_skin + 8 ]  = si3.x;\n\t\t\t\tskinIndexArray[ offset_skin + 9 ]  = si3.y;\n\t\t\t\tskinIndexArray[ offset_skin + 10 ] = si3.z;\n\t\t\t\tskinIndexArray[ offset_skin + 11 ] = si3.w;\n\n\t\t\t\toffset_skin += 12;\n\n\t\t\t}\n\n\t\t\tif ( offset_skin > 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dirtyColors ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\tvertexColors = face.vertexColors;\n\t\t\t\tfaceColor = face.color;\n\n\t\t\t\tif ( vertexColors.length === 3 && material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\tc1 = vertexColors[ 0 ];\n\t\t\t\t\tc2 = vertexColors[ 1 ];\n\t\t\t\t\tc3 = vertexColors[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc1 = faceColor;\n\t\t\t\t\tc2 = faceColor;\n\t\t\t\t\tc3 = faceColor;\n\n\t\t\t\t}\n\n\t\t\t\tcolorArray[ offset_color ]     = c1.r;\n\t\t\t\tcolorArray[ offset_color + 1 ] = c1.g;\n\t\t\t\tcolorArray[ offset_color + 2 ] = c1.b;\n\n\t\t\t\tcolorArray[ offset_color + 3 ] = c2.r;\n\t\t\t\tcolorArray[ offset_color + 4 ] = c2.g;\n\t\t\t\tcolorArray[ offset_color + 5 ] = c2.b;\n\n\t\t\t\tcolorArray[ offset_color + 6 ] = c3.r;\n\t\t\t\tcolorArray[ offset_color + 7 ] = c3.g;\n\t\t\t\tcolorArray[ offset_color + 8 ] = c3.b;\n\n\t\t\t\toffset_color += 9;\n\n\t\t\t}\n\n\t\t\tif ( offset_color > 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dirtyTangents && geometry.hasTangents ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\tvertexTangents = face.vertexTangents;\n\n\t\t\t\tt1 = vertexTangents[ 0 ];\n\t\t\t\tt2 = vertexTangents[ 1 ];\n\t\t\t\tt3 = vertexTangents[ 2 ];\n\n\t\t\t\ttangentArray[ offset_tangent ]     = t1.x;\n\t\t\t\ttangentArray[ offset_tangent + 1 ] = t1.y;\n\t\t\t\ttangentArray[ offset_tangent + 2 ] = t1.z;\n\t\t\t\ttangentArray[ offset_tangent + 3 ] = t1.w;\n\n\t\t\t\ttangentArray[ offset_tangent + 4 ] = t2.x;\n\t\t\t\ttangentArray[ offset_tangent + 5 ] = t2.y;\n\t\t\t\ttangentArray[ offset_tangent + 6 ] = t2.z;\n\t\t\t\ttangentArray[ offset_tangent + 7 ] = t2.w;\n\n\t\t\t\ttangentArray[ offset_tangent + 8 ]  = t3.x;\n\t\t\t\ttangentArray[ offset_tangent + 9 ]  = t3.y;\n\t\t\t\ttangentArray[ offset_tangent + 10 ] = t3.z;\n\t\t\t\ttangentArray[ offset_tangent + 11 ] = t3.w;\n\n\t\t\t\toffset_tangent += 12;\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyNormals ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\tvertexNormals = face.vertexNormals;\n\t\t\t\tfaceNormal = face.normal;\n\n\t\t\t\tif ( vertexNormals.length === 3 && needsSmoothNormals ) {\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tvn = vertexNormals[ i ];\n\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = vn.x;\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = vn.y;\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = vn.z;\n\n\t\t\t\t\t\toffset_normal += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = faceNormal.x;\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = faceNormal.y;\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = faceNormal.z;\n\n\t\t\t\t\t\toffset_normal += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\n\n\t\t}\n\n\t\tif ( dirtyUvs && obj_uvs ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tfi = chunk_faces3[ f ];\n\n\t\t\t\tuv = obj_uvs[ fi ];\n\n\t\t\t\tif ( uv === undefined ) continue;\n\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tuvi = uv[ i ];\n\n\t\t\t\t\tuvArray[ offset_uv ]     = uvi.x;\n\t\t\t\t\tuvArray[ offset_uv + 1 ] = uvi.y;\n\n\t\t\t\t\toffset_uv += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( offset_uv > 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dirtyUvs && obj_uvs2 ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tfi = chunk_faces3[ f ];\n\n\t\t\t\tuv2 = obj_uvs2[ fi ];\n\n\t\t\t\tif ( uv2 === undefined ) continue;\n\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tuv2i = uv2[ i ];\n\n\t\t\t\t\tuv2Array[ offset_uv2 ]     = uv2i.x;\n\t\t\t\t\tuv2Array[ offset_uv2 + 1 ] = uv2i.y;\n\n\t\t\t\t\toffset_uv2 += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( offset_uv2 > 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dirtyElements ) {\n\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\tfaceArray[ offset_face ]   = vertexIndex;\n\t\t\t\tfaceArray[ offset_face + 1 ] = vertexIndex + 1;\n\t\t\t\tfaceArray[ offset_face + 2 ] = vertexIndex + 2;\n\n\t\t\t\toffset_face += 3;\n\n\t\t\t\tlineArray[ offset_line ]     = vertexIndex;\n\t\t\t\tlineArray[ offset_line + 1 ] = vertexIndex + 1;\n\n\t\t\t\tlineArray[ offset_line + 2 ] = vertexIndex;\n\t\t\t\tlineArray[ offset_line + 3 ] = vertexIndex + 2;\n\n\t\t\t\tlineArray[ offset_line + 4 ] = vertexIndex + 1;\n\t\t\t\tlineArray[ offset_line + 5 ] = vertexIndex + 2;\n\n\t\t\t\toffset_line += 6;\n\n\t\t\t\tvertexIndex += 3;\n\n\t\t\t}\n\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\n\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\n\n\t\t}\n\n\t\tif ( customAttributes ) {\n\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\n\n\t\t\t\tcustomAttribute = customAttributes[ i ];\n\n\t\t\t\tif ( ! customAttribute.__original.needsUpdate ) continue;\n\n\t\t\t\toffset_custom = 0;\n\t\t\t\toffset_customSrc = 0;\n\n\t\t\t\tif ( customAttribute.size === 1 ) {\n\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = customAttribute.value[ face.a ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\n\n\t\t\t\t\t\t\toffset_custom += 3;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = value;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = value;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = value;\n\n\t\t\t\t\t\t\toffset_custom += 3;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( customAttribute.size === 2 ) {\n\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\n\n\t\t\t\t\t\t\toffset_custom += 6;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = value;\n\t\t\t\t\t\t\tv2 = value;\n\t\t\t\t\t\t\tv3 = value;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\n\n\t\t\t\t\t\t\toffset_custom += 6;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( customAttribute.size === 3 ) {\n\n\t\t\t\t\tvar pp;\n\n\t\t\t\t\tif ( customAttribute.type === 'c' ) {\n\n\t\t\t\t\t\tpp = [ 'r', 'g', 'b' ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpp = [ 'x', 'y', 'z' ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\toffset_custom += 9;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = value;\n\t\t\t\t\t\t\tv2 = value;\n\t\t\t\t\t\t\tv3 = value;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\toffset_custom += 9;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = value[ 0 ];\n\t\t\t\t\t\t\tv2 = value[ 1 ];\n\t\t\t\t\t\t\tv3 = value[ 2 ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\n\n\t\t\t\t\t\t\toffset_custom += 9;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( customAttribute.size === 4 ) {\n\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\n\n\t\t\t\t\t\t\toffset_custom += 12;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = value;\n\t\t\t\t\t\t\tv2 = value;\n\t\t\t\t\t\t\tv3 = value;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\n\n\t\t\t\t\t\t\toffset_custom += 12;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\n\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\n\n\t\t\t\t\t\t\tv1 = value[ 0 ];\n\t\t\t\t\t\t\tv2 = value[ 1 ];\n\t\t\t\t\t\t\tv3 = value[ 2 ];\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\n\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\n\n\t\t\t\t\t\t\toffset_custom += 12;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( dispose ) {\n\n\t\t\tdelete geometryGroup.__inittedArrays;\n\t\t\tdelete geometryGroup.__colorArray;\n\t\t\tdelete geometryGroup.__normalArray;\n\t\t\tdelete geometryGroup.__tangentArray;\n\t\t\tdelete geometryGroup.__uvArray;\n\t\t\tdelete geometryGroup.__uv2Array;\n\t\t\tdelete geometryGroup.__faceArray;\n\t\t\tdelete geometryGroup.__vertexArray;\n\t\t\tdelete geometryGroup.__lineArray;\n\t\t\tdelete geometryGroup.__skinIndexArray;\n\t\t\tdelete geometryGroup.__skinWeightArray;\n\n\t\t}\n\n\t};\n\n\tfunction setDirectBuffers( geometry ) {\n\n\t\tvar attributes = geometry.attributes;\n\t\tvar attributesKeys = geometry.attributesKeys;\n\n\t\tfor ( var i = 0, l = attributesKeys.length; i < l; i ++ ) {\n\n\t\t\tvar key = attributesKeys[ i ];\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tif ( attribute.buffer === undefined ) {\n\n\t\t\t\tattribute.buffer = _gl.createBuffer();\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( attribute.needsUpdate === true ) {\n\n\t\t\t\tvar bufferType = ( key === 'index' ) ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\n\n\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\n\t\t\t\t_gl.bufferData( bufferType, attribute.array, _gl.STATIC_DRAW );\n\n\t\t\t\tattribute.needsUpdate = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tinitAttributes();\n\n\t\tif ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\n\t\tif ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\t\t\tenableAttribute( program.attributes.position );\n\t\t\t_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\n\n\t\t\tif ( material.shading === THREE.FlatShading ) {\n\n\t\t\t\tvar nx, ny, nz,\n\t\t\t\t\tnax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\n\t\t\t\t\tnormalArray,\n\t\t\t\t\ti, il = object.count * 3;\n\n\t\t\t\tfor ( i = 0; i < il; i += 9 ) {\n\n\t\t\t\t\tnormalArray = object.normalArray;\n\n\t\t\t\t\tnax  = normalArray[ i ];\n\t\t\t\t\tnay  = normalArray[ i + 1 ];\n\t\t\t\t\tnaz  = normalArray[ i + 2 ];\n\n\t\t\t\t\tnbx  = normalArray[ i + 3 ];\n\t\t\t\t\tnby  = normalArray[ i + 4 ];\n\t\t\t\t\tnbz  = normalArray[ i + 5 ];\n\n\t\t\t\t\tncx  = normalArray[ i + 6 ];\n\t\t\t\t\tncy  = normalArray[ i + 7 ];\n\t\t\t\t\tncz  = normalArray[ i + 8 ];\n\n\t\t\t\t\tnx = ( nax + nbx + ncx ) / 3;\n\t\t\t\t\tny = ( nay + nby + ncy ) / 3;\n\t\t\t\t\tnz = ( naz + nbz + ncz ) / 3;\n\n\t\t\t\t\tnormalArray[ i ]   = nx;\n\t\t\t\t\tnormalArray[ i + 1 ] = ny;\n\t\t\t\t\tnormalArray[ i + 2 ] = nz;\n\n\t\t\t\t\tnormalArray[ i + 3 ] = nx;\n\t\t\t\t\tnormalArray[ i + 4 ] = ny;\n\t\t\t\t\tnormalArray[ i + 5 ] = nz;\n\n\t\t\t\t\tnormalArray[ i + 6 ] = nx;\n\t\t\t\t\tnormalArray[ i + 7 ] = ny;\n\t\t\t\t\tnormalArray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\t\t\tenableAttribute( program.attributes.normal );\n\t\t\t_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\t\t\tenableAttribute( program.attributes.uv );\n\t\t\t_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\t\t\tenableAttribute( program.attributes.color );\n\t\t\t_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.attributes;\n\t\tvar programAttributesKeys = program.attributesKeys;\n\n\t\tfor ( var i = 0, l = programAttributesKeys.length; i < l; i ++ ) {\n\n\t\t\tvar key = programAttributesKeys[ i ];\n\t\t\tvar programAttribute = programAttributes[ key ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryAttribute.buffer );\n\n\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\n\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tif ( material.defaultAttributeValues[ key ].length === 2 ) {\n\n\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, material.defaultAttributeValues[ key ] );\n\n\t\t\t\t\t} else if ( material.defaultAttributeValues[ key ].length === 3 ) {\n\n\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, material.defaultAttributeValues[ key ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tthis.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\n\n\t\tif ( material.visible === false ) return;\n\n\t\tvar program = setProgram( camera, lights, fog, material, object );\n\n\t\tvar updateBuffers = false,\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\n\t\t\tgeometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\n\n\t\tif ( geometryHash !== _currentGeometryGroupHash ) {\n\n\t\t\t_currentGeometryGroupHash = geometryHash;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tinitAttributes();\n\n\t\t}\n\n\t\t// render mesh\n\n\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\tvar mode = material.wireframe === true ? _gl.LINES : _gl.TRIANGLES;\n\n\t\t\tvar index = geometry.attributes.index;\n\n\t\t\tif ( index ) {\n\n\t\t\t\t// indexed triangles\n\n\t\t\t\tvar type, size;\n\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\t\t\t\t\tsize = 4;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\t\t\t\t\tsize = 2;\n\n\t\t\t\t}\n\n\t\t\t\tvar offsets = geometry.offsets;\n\n\t\t\t\tif ( offsets.length === 0 ) {\n\n\t\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 );\n\n\t\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n\t\t\t\t\t_this.info.render.faces += index.array.length / 3;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if there is more than 1 chunk\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\n\t\t\t\t\t// even if geometry and materials didn't change\n\n\t\t\t\t\tupdateBuffers = true;\n\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\n\n\t\t\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// render indexed triangles\n\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\n\n\t\t\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\n\t\t\t\t\t\t_this.info.render.faces += offsets[ i ].count / 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed triangles\n\n\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tvar position = geometry.attributes[ 'position' ];\n\n\t\t\t\t// render non-indexed triangles\n\n\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\n\n\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t_this.info.render.vertices += position.array.length / 3;\n\t\t\t\t_this.info.render.faces += position.array.length / 9;\n\n\t\t\t}\n\n\t\t} else if ( object instanceof THREE.PointCloud ) {\n\n\t\t\t// render particles\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t// render particles\n\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, position.array.length / 3 );\n\n\t\t\t_this.info.render.calls ++;\n\t\t\t_this.info.render.points += position.array.length / 3;\n\n\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\n\n\t\t\tsetLineWidth( material.linewidth );\n\n\t\t\tvar index = geometry.attributes.index;\n\n\t\t\tif ( index ) {\n\n\t\t\t\t// indexed lines\n\n\t\t\t\tvar type, size;\n\n\t\t\t\tif ( index.array instanceof Uint32Array ) {\n\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\t\t\t\t\tsize = 4;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\t\t\t\t\tsize = 2;\n\n\t\t\t\t}\n\n\t\t\t\tvar offsets = geometry.offsets;\n\n\t\t\t\tif ( offsets.length === 0 ) {\n\n\t\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 ); // 2 bytes per Uint16Array\n\n\t\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if there is more than 1 chunk\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\n\t\t\t\t\t// even if geometry and materials didn't change\n\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\n\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\n\n\t\t\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// render indexed lines\n\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size ); // 2 bytes per Uint16Array\n\n\t\t\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed lines\n\n\t\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\n\n\t\t\t\t_this.info.render.calls ++;\n\t\t\t\t_this.info.render.points += position.array.length / 3;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\n\n\t\tif ( material.visible === false ) return;\n\n\t\tvar program = setProgram( camera, lights, fog, material, object );\n\n\t\tvar attributes = program.attributes;\n\n\t\tvar updateBuffers = false,\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\n\t\t\tgeometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;\n\n\t\tif ( geometryGroupHash !== _currentGeometryGroupHash ) {\n\n\t\t\t_currentGeometryGroupHash = geometryGroupHash;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tinitAttributes();\n\n\t\t}\n\n\t\t// vertices\n\n\t\tif ( ! material.morphTargets && attributes.position >= 0 ) {\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n\t\t\t\tenableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( object.morphTargetBase ) {\n\n\t\t\t\tsetupMorphTargets( material, geometryGroup, object );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tif ( updateBuffers ) {\n\n\t\t\t// custom attributes\n\n\t\t\t// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\n\n\t\t\tif ( geometryGroup.__webglCustomAttributesList ) {\n\n\t\t\t\tfor ( var i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = geometryGroup.__webglCustomAttributesList[ i ];\n\n\t\t\t\t\tif ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\n\t\t\t\t\t\tenableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// colors\n\n\t\t\tif ( attributes.color >= 0 ) {\n\n\t\t\t\tif ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\n\t\t\t\t\tenableAttribute( attributes.color );\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\n\n\n\t\t\t\t\t_gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( attributes.normal >= 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\n\t\t\t\tenableAttribute( attributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\t// tangents\n\n\t\t\tif ( attributes.tangent >= 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\n\t\t\t\tenableAttribute( attributes.tangent );\n\t\t\t\t_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( attributes.uv >= 0 ) {\n\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 0 ] ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\n\t\t\t\t\tenableAttribute( attributes.uv );\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\n\n\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( attributes.uv2 >= 0 ) {\n\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 1 ] ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\n\t\t\t\t\tenableAttribute( attributes.uv2 );\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\n\n\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.skinning &&\n\t\t\t\t attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\n\t\t\t\tenableAttribute( attributes.skinIndex );\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\n\t\t\t\tenableAttribute( attributes.skinWeight );\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tif ( attributes.lineDistance >= 0 ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\n\t\t\t\tenableAttribute( attributes.lineDistance );\n\t\t\t\t_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t\t// render mesh\n\n\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\tvar type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\n\n\t\t\t// wireframe\n\n\t\t\tif ( material.wireframe ) {\n\n\t\t\t\tsetLineWidth( material.wireframeLinewidth );\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\n\t\t\t\t_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, type, 0 );\n\n\t\t\t// triangles\n\n\t\t\t} else {\n\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0 );\n\n\t\t\t}\n\n\t\t\t_this.info.render.calls ++;\n\t\t\t_this.info.render.vertices += geometryGroup.__webglFaceCount;\n\t\t\t_this.info.render.faces += geometryGroup.__webglFaceCount / 3;\n\n\t\t// render lines\n\n\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\n\n\t\t\tsetLineWidth( material.linewidth );\n\n\t\t\t_gl.drawArrays( mode, 0, geometryGroup.__webglLineCount );\n\n\t\t\t_this.info.render.calls ++;\n\n\t\t// render particles\n\n\t\t} else if ( object instanceof THREE.PointCloud ) {\n\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\n\n\t\t\t_this.info.render.calls ++;\n\t\t\t_this.info.render.points += geometryGroup.__webglParticleCount;\n\n\t\t}\n\n\t};\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = _newAttributes.length; i < l; i ++ ) {\n\n\t\t\t_newAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\t_newAttributes[ attribute ] = 1;\n\n\t\tif ( _enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t_gl.enableVertexAttribArray( attribute );\n\t\t\t_enabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = _enabledAttributes.length; i < l; i ++ ) {\n\n\t\t\tif ( _enabledAttributes[ i ] !== _newAttributes[ i ] ) {\n\n\t\t\t\t_gl.disableVertexAttribArray( i );\n\t\t\t\t_enabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupMorphTargets ( material, geometryGroup, object ) {\n\n\t\t// set base\n\n\t\tvar attributes = material.program.attributes;\n\n\t\tif ( object.morphTargetBase !== - 1 && attributes.position >= 0 ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\n\t\t\tenableAttribute( attributes.position );\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t} else if ( attributes.position >= 0 ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\n\t\t\tenableAttribute( attributes.position );\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.morphTargetForcedOrder.length ) {\n\n\t\t\t// set forced order\n\n\t\t\tvar m = 0;\n\t\t\tvar order = object.morphTargetForcedOrder;\n\t\t\tvar influences = object.morphTargetInfluences;\n\n\t\t\twhile ( m < material.numSupportedMorphTargets && m < order.length ) {\n\n\t\t\t\tif ( attributes[ 'morphTarget' + m ] >= 0 ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\n\t\t\t\t\tenableAttribute( attributes[ 'morphTarget' + m ] );\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ 'morphTarget' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( attributes[ 'morphNormal' + m ] >= 0 && material.morphNormals ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\n\t\t\t\t\tenableAttribute( attributes[ 'morphNormal' + m ] );\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ 'morphNormal' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\n\n\t\t\t\tm ++;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// find the most influencing\n\n\t\t\tvar influence, activeInfluenceIndices = [];\n\t\t\tvar influences = object.morphTargetInfluences;\n\t\t\tvar i, il = influences.length;\n\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\t\tinfluence = influences[ i ];\n\n\t\t\t\tif ( influence > 0 ) {\n\n\t\t\t\t\tactiveInfluenceIndices.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\n\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\n\t\t\t\tactiveInfluenceIndices.length = material.numSupportedMorphTargets;\n\n\t\t\t} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\n\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\n\n\t\t\t} else if ( activeInfluenceIndices.length === 0 ) {\n\n\t\t\t\tactiveInfluenceIndices.push( [ 0, 0 ] );\n\n\t\t\t};\n\n\t\t\tvar influenceIndex, m = 0;\n\n\t\t\twhile ( m < material.numSupportedMorphTargets ) {\n\n\t\t\t\tif ( activeInfluenceIndices[ m ] ) {\n\n\t\t\t\t\tinfluenceIndex = activeInfluenceIndices[ m ][ 1 ];\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + m ] >= 0 ) {\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\n\t\t\t\t\t\tenableAttribute( attributes[ 'morphTarget' + m ] );\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ 'morphTarget' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + m ] >= 0 && material.morphNormals ) {\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\n\t\t\t\t\t\tenableAttribute( attributes[ 'morphNormal' + m ] );\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ 'morphNormal' + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t/*\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tm ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// load updated influences uniform\n\n\t\tif ( material.program.uniforms.morphTargetInfluences !== null ) {\n\n\t\t\t_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\n\n\t\t}\n\n\t}\n\n\t// Sorting\n\n\tfunction painterSortStable ( a, b ) {\n\n\t\tif ( a.material.id !== b.material.id ) {\n\n\t\t\treturn b.material.id - a.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable ( a, b ) {\n\n\t\tif ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction numericalSort ( a, b ) {\n\n\t\treturn b[ 0 ] - a[ 0 ];\n\n\t}\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar fog = scene.fog;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryGroupHash = - 1;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\t\t_lightsNeedUpdate = true;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\n\n\t\t// update Skeleton objects\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\tobject.skeleton.update();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\tlights.length = 0;\n\t\topaqueObjects.length = 0;\n\t\ttransparentObjects.length = 0;\n\n\t\tsprites.length = 0;\n\t\tlensFlares.length = 0;\n\n\t\tprojectObject( scene, scene );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t}\n\n\t\t// custom render plugins (pre pass)\n\n\t\tshadowMapPlugin.render( scene, camera );\n\n\t\t//\n\n\t\t_this.info.render.calls = 0;\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\t\t_this.info.render.points = 0;\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t}\n\n\t\t// set matrices for immediate objects\n\n\t\tfor ( var i = 0, il = _webglObjectsImmediate.length; i < il; i ++ ) {\n\n\t\t\tvar webglObject = _webglObjectsImmediate[ i ];\n\t\t\tvar object = webglObject.object;\n\n\t\t\tif ( object.visible ) {\n\n\t\t\t\tsetupMatrices( object, camera );\n\n\t\t\t\tunrollImmediateBufferMaterial( webglObject );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar material = scene.overrideMaterial;\n\n\t\t\tthis.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\tthis.setDepthTest( material.depthTest );\n\t\t\tthis.setDepthWrite( material.depthWrite );\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, true, material );\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, true, material );\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, '', camera, lights, fog, false, material );\n\n\t\t} else {\n\n\t\t\tvar material = null;\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tthis.setBlending( THREE.NoBlending );\n\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, false, material );\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'opaque', camera, lights, fog, false, material );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, true, material );\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'transparent', camera, lights, fog, true, material );\n\n\t\t}\n\n\t\t// custom render plugins (post pass)\n\n\t\tspritePlugin.render( scene, camera );\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\n\n\t\t\tupdateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tthis.setDepthTest( true );\n\t\tthis.setDepthWrite( true );\n\n\t\t// _gl.finish();\n\n\t};\n\n\tfunction projectObject( scene, object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Scene || object instanceof THREE.Group ) {\n\n\t\t\t// skip\n\n\t\t} else {\n\n\t\t\tinitObject( object, scene );\n\n\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\tlights.push( object );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tsprites.push( object );\n\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\n\n\t\t\t\tlensFlares.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tvar webglObjects = _webglObjects[ object.id ];\n\n\t\t\t\tif ( webglObjects && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tupdateObject( object, scene );\n\n\t\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar webglObject = webglObjects[i];\n\n\t\t\t\t\t\tunrollBufferMaterial( webglObject );\n\n\t\t\t\t\t\twebglObject.render = true;\n\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\tif ( object.renderDepth !== null ) {\n\n\t\t\t\t\t\t\t\twebglObject.z = object.renderDepth;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t\twebglObject.z = _vector3.z;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( scene, object.children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, camera, lights, fog, useBlending, overrideMaterial ) {\n\n\t\tvar material;\n\n\t\tfor ( var i = renderList.length - 1; i !== - 1; i -- ) {\n\n\t\t\tvar webglObject = renderList[ i ];\n\n\t\t\tvar object = webglObject.object;\n\t\t\tvar buffer = webglObject.buffer;\n\n\t\t\tsetupMatrices( object, camera );\n\n\t\t\tif ( overrideMaterial ) {\n\n\t\t\t\tmaterial = overrideMaterial;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = webglObject.material;\n\n\t\t\t\tif ( ! material ) continue;\n\n\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\n\t\t\t\t_this.setDepthTest( material.depthTest );\n\t\t\t\t_this.setDepthWrite( material.depthWrite );\n\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t\t}\n\n\t\t\t_this.setMaterialFaces( material );\n\n\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, material, buffer, object );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBuffer( camera, lights, fog, material, buffer, object );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {\n\n\t\tvar material;\n\n\t\tfor ( var i = 0, il = renderList.length; i < il; i ++ ) {\n\n\t\t\tvar webglObject = renderList[ i ];\n\t\t\tvar object = webglObject.object;\n\n\t\t\tif ( object.visible ) {\n\n\t\t\t\tif ( overrideMaterial ) {\n\n\t\t\t\t\tmaterial = overrideMaterial;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial = webglObject[ materialType ];\n\n\t\t\t\t\tif ( ! material ) continue;\n\n\t\t\t\t\tif ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\n\t\t\t\t\t_this.setDepthTest( material.depthTest );\n\t\t\t\t\t_this.setDepthWrite( material.depthWrite );\n\t\t\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t\t\t}\n\n\t\t\t\t_this.renderImmediateObject( camera, lights, fog, material, object );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.renderImmediateObject = function ( camera, lights, fog, material, object ) {\n\n\t\tvar program = setProgram( camera, lights, fog, material, object );\n\n\t\t_currentGeometryGroupHash = - 1;\n\n\t\t_this.setMaterialFaces( material );\n\n\t\tif ( object.immediateRenderCallback ) {\n\n\t\t\tobject.immediateRenderCallback( program, _gl, _frustum );\n\n\t\t} else {\n\n\t\t\tobject.render( function ( object ) { _this.renderBufferImmediate( object, program, material ); } );\n\n\t\t}\n\n\t};\n\n\tfunction unrollImmediateBufferMaterial ( globject ) {\n\n\t\tvar object = globject.object,\n\t\t\tmaterial = object.material;\n\n\t\tif ( material.transparent ) {\n\n\t\t\tglobject.transparent = material;\n\t\t\tglobject.opaque = null;\n\n\t\t} else {\n\n\t\t\tglobject.opaque = material;\n\t\t\tglobject.transparent = null;\n\n\t\t}\n\n\t}\n\n\tfunction unrollBufferMaterial ( globject ) {\n\n\t\tvar object = globject.object;\n\t\tvar buffer = globject.buffer;\n\n\t\tvar geometry = object.geometry;\n\t\tvar material = object.material;\n\n\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\n\n\t\t\tvar materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\n\n\t\t\tmaterial = material.materials[ materialIndex ];\n\n\t\t\tglobject.material = material;\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\ttransparentObjects.push( globject );\n\n\t\t\t} else {\n\n\t\t\t\topaqueObjects.push( globject );\n\n\t\t\t}\n\n\t\t} else if ( material ) {\n\n\t\t\tglobject.material = material;\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\ttransparentObjects.push( globject );\n\n\t\t\t} else {\n\n\t\t\t\topaqueObjects.push( globject );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initObject( object, scene ) {\n\n\t\tif ( object.__webglInit === undefined ) {\n\n\t\t\tobject.__webglInit = true;\n\t\t\tobject._modelViewMatrix = new THREE.Matrix4();\n\t\t\tobject._normalMatrix = new THREE.Matrix3();\n\n\t\t\tobject.addEventListener( 'removed', onObjectRemoved );\n\n\t\t}\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry === undefined ) {\n\n\t\t\t// ImmediateRenderObject\n\n\t\t} else if ( geometry.__webglInit === undefined ) {\n\n\t\t\tgeometry.__webglInit = true;\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t//\n\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tinitGeometryGroups( scene, object, geometry );\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\n\n\t\t\t\t\tcreateLineBuffers( geometry );\n\t\t\t\t\tinitLineBuffers( geometry, object );\n\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.PointCloud ) {\n\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\n\n\t\t\t\t\tcreateParticleBuffers( geometry );\n\t\t\t\t\tinitParticleBuffers( geometry, object );\n\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.__webglActive === undefined) {\n\n\t\t\tobject.__webglActive = true;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\taddBuffer( _webglObjects, geometry, object );\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\n\n\t\t\t\t\tfor ( var i = 0,l = geometryGroupsList.length; i < l; i ++ ) {\n\n\t\t\t\t\t\taddBuffer( _webglObjects, geometryGroupsList[ i ], object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\n\n\t\t\t\taddBuffer( _webglObjects, geometry, object );\n\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\n\n\t\t\t\taddBufferImmediate( _webglObjectsImmediate, object );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Geometry splitting\n\n\tvar geometryGroups = {};\n\tvar geometryGroupCounter = 0;\n\n\tfunction makeGroups( geometry, usesFaceMaterial ) {\n\n\t\tvar maxVerticesInGroup = extensions.get( 'OES_element_index_uint' ) ? 4294967296 : 65535;\n\n\t\tvar groupHash, hash_map = {};\n\n\t\tvar numMorphTargets = geometry.morphTargets.length;\n\t\tvar numMorphNormals = geometry.morphNormals.length;\n\n\t\tvar group;\n\t\tvar groups = {};\n\t\tvar groupsList = [];\n\n\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = geometry.faces[ f ];\n\t\t\tvar materialIndex = usesFaceMaterial ? face.materialIndex : 0;\n\n\t\t\tif ( ! ( materialIndex in hash_map ) ) {\n\n\t\t\t\thash_map[ materialIndex ] = { hash: materialIndex, counter: 0 };\n\n\t\t\t}\n\n\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\n\n\t\t\tif ( ! ( groupHash in groups ) ) {\n\n\t\t\t\tgroup = {\n\t\t\t\t\tid: geometryGroupCounter ++,\n\t\t\t\t\tfaces3: [],\n\t\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\t\tvertices: 0,\n\t\t\t\t\tnumMorphTargets: numMorphTargets,\n\t\t\t\t\tnumMorphNormals: numMorphNormals\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tgroups[ groupHash ] = group;\n\t\t\t\tgroupsList.push( group );\n\n\t\t\t}\n\n\t\t\tif ( groups[ groupHash ].vertices + 3 > maxVerticesInGroup ) {\n\n\t\t\t\thash_map[ materialIndex ].counter += 1;\n\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\n\n\t\t\t\tif ( ! ( groupHash in groups ) ) {\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tid: geometryGroupCounter ++,\n\t\t\t\t\t\tfaces3: [],\n\t\t\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\t\t\tvertices: 0,\n\t\t\t\t\t\tnumMorphTargets: numMorphTargets,\n\t\t\t\t\t\tnumMorphNormals: numMorphNormals\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tgroups[ groupHash ] = group;\n\t\t\t\t\tgroupsList.push( group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgroups[ groupHash ].faces3.push( f );\n\t\t\tgroups[ groupHash ].vertices += 3;\n\n\t\t}\n\n\t\treturn groupsList;\n\n\t}\n\n\tfunction initGeometryGroups( scene, object, geometry ) {\n\n\t\tvar material = object.material, addBuffers = false;\n\n\t\tif ( geometryGroups[ geometry.id ] === undefined || geometry.groupsNeedUpdate === true ) {\n\n\t\t\tdelete _webglObjects[ object.id ];\n\n\t\t\tgeometryGroups[ geometry.id ] = makeGroups( geometry, material instanceof THREE.MeshFaceMaterial );\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\n\n\t\t// create separate VBOs per geometry chunk\n\n\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\n\n\t\t\tvar geometryGroup = geometryGroupsList[ i ];\n\n\t\t\t// initialise VBO on the first access\n\n\t\t\tif ( geometryGroup.__webglVertexBuffer === undefined ) {\n\n\t\t\t\tcreateMeshBuffers( geometryGroup );\n\t\t\t\tinitMeshBuffers( geometryGroup, object );\n\n\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\tgeometry.morphTargetsNeedUpdate = true;\n\t\t\t\tgeometry.elementsNeedUpdate = true;\n\t\t\t\tgeometry.uvsNeedUpdate = true;\n\t\t\t\tgeometry.normalsNeedUpdate = true;\n\t\t\t\tgeometry.tangentsNeedUpdate = true;\n\t\t\t\tgeometry.colorsNeedUpdate = true;\n\n\t\t\t\taddBuffers = true;\n\n\t\t\t} else {\n\n\t\t\t\taddBuffers = false;\n\n\t\t\t}\n\n\t\t\tif ( addBuffers || object.__webglActive === undefined ) {\n\n\t\t\t\taddBuffer( _webglObjects, geometryGroup, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tobject.__webglActive = true;\n\n\t}\n\n\tfunction addBuffer( objlist, buffer, object ) {\n\n\t\tvar id = object.id;\n\t\tobjlist[id] = objlist[id] || [];\n\t\tobjlist[id].push(\n\t\t\t{\n\t\t\t\tid: id,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tobject: object,\n\t\t\t\tmaterial: null,\n\t\t\t\tz: 0\n\t\t\t}\n\t\t);\n\n\t};\n\n\tfunction addBufferImmediate( objlist, object ) {\n\n\t\tobjlist.push(\n\t\t\t{\n\t\t\t\tid: null,\n\t\t\t\tobject: object,\n\t\t\t\topaque: null,\n\t\t\t\ttransparent: null,\n\t\t\t\tz: 0\n\t\t\t}\n\t\t);\n\n\t};\n\n\t// Objects updates\n\n\tfunction updateObject( object, scene ) {\n\n\t\tvar geometry = object.geometry, customAttributesDirty, material;\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tsetDirectBuffers( geometry );\n\n\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\t// check all geometry groups\n\n\t\t\tif ( geometry.groupsNeedUpdate === true ) {\n\n\t\t\t\tinitGeometryGroups( scene, object, geometry );\n\n\t\t\t}\n\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\n\n\t\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\n\n\t\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\n\n\t\t\t\tif ( geometry.groupsNeedUpdate === true ) {\n\n\t\t\t\t\tinitMeshBuffers( geometryGroup, object );\n\n\t\t\t\t}\n\n\t\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n\t\t\t\tif ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\n\t\t\t\t\t geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\n\t\t\t\t\t geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\n\n\t\t\t\t\tsetMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, ! geometry.dynamic, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.morphTargetsNeedUpdate = false;\n\t\t\tgeometry.elementsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.tangentsNeedUpdate = false;\n\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\n\n\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\tmaterial = getBufferMaterial( object, geometry );\n\n\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\n\n\t\t\t\tsetLineBuffers( geometry, _gl.DYNAMIC_DRAW );\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\n\n\n\t\t} else if ( object instanceof THREE.PointCloud ) {\n\n\t\t\tmaterial = getBufferMaterial( object, geometry );\n\n\t\t\tcustomAttributesDirty = material.attributes && areCustomAttributesDirty( material );\n\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty ) {\n\n\t\t\t\tsetParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\n\n\t\t}\n\n\t}\n\n\t// Objects updates - custom attributes check\n\n\tfunction areCustomAttributesDirty( material ) {\n\n\t\tfor ( var name in material.attributes ) {\n\n\t\t\tif ( material.attributes[ name ].needsUpdate ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction clearCustomAttributes( material ) {\n\n\t\tfor ( var name in material.attributes ) {\n\n\t\t\tmaterial.attributes[ name ].needsUpdate = false;\n\n\t\t}\n\n\t}\n\n\t// Objects removal\n\n\tfunction removeObject( object ) {\n\n\t\tif ( object instanceof THREE.Mesh  ||\n\t\t\t object instanceof THREE.PointCloud ||\n\t\t\t object instanceof THREE.Line ) {\n\n\t\t\tdelete _webglObjects[ object.id ];\n\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\n\n\t\t\tremoveInstances( _webglObjectsImmediate, object );\n\n\t\t}\n\n\t\tdelete object.__webglInit;\n\t\tdelete object._modelViewMatrix;\n\t\tdelete object._normalMatrix;\n\n\t\tdelete object.__webglActive;\n\n\t}\n\n\tfunction removeInstances( objlist, object ) {\n\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\n\n\t\t\tif ( objlist[ o ].object === object ) {\n\n\t\t\t\tobjlist.splice( o, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Materials\n\n\tfunction initMaterial( material, lights, fog, object ) {\n\n\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\tvar shaderID;\n\n\t\tif ( material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\tshaderID = 'depth';\n\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\tshaderID = 'normal';\n\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial ) {\n\n\t\t\tshaderID = 'basic';\n\n\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\tshaderID = 'lambert';\n\n\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\tshaderID = 'phong';\n\n\t\t} else if ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\tshaderID = 'basic';\n\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\tshaderID = 'dashed';\n\n\t\t} else if ( material instanceof THREE.PointCloudMaterial ) {\n\n\t\t\tshaderID = 'particle_basic';\n\n\t\t}\n\n\t\tif ( shaderID ) {\n\n\t\t\tvar shader = THREE.ShaderLib[ shaderID ];\n\n\t\t\tmaterial.__webglShader = {\n\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmaterial.__webglShader = {\n\t\t\t\tuniforms: material.uniforms,\n\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t}\n\n\t\t}\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxLightCount = allocateLights( lights );\n\t\tvar maxShadows = allocateShadows( lights );\n\t\tvar maxBones = allocateBones( object );\n\n\t\tvar parameters = {\n\n\t\t\tprecision: _precision,\n\t\t\tsupportsVertexTextures: _supportsVertexTextures,\n\n\t\t\tmap: !! material.map,\n\t\t\tenvMap: !! material.envMap,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: _logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: _this.maxMorphTargets,\n\t\t\tmaxMorphNormals: _this.maxMorphNormals,\n\n\t\t\tmaxDirLights: maxLightCount.directional,\n\t\t\tmaxPointLights: maxLightCount.point,\n\t\t\tmaxSpotLights: maxLightCount.spot,\n\t\t\tmaxHemiLights: maxLightCount.hemi,\n\n\t\t\tmaxShadows: maxShadows,\n\t\t\tshadowMapEnabled: _this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\n\t\t\tshadowMapType: _this.shadowMapType,\n\t\t\tshadowMapDebug: _this.shadowMapDebug,\n\t\t\tshadowMapCascade: _this.shadowMapCascade,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tmetal: material.metal,\n\t\t\twrapAround: material.wrapAround,\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\n\t\t\tflipSided: material.side === THREE.BackSide\n\n\t\t};\n\n\t\t// Generate code\n\n\t\tvar chunks = [];\n\n\t\tif ( shaderID ) {\n\n\t\t\tchunks.push( shaderID );\n\n\t\t} else {\n\n\t\t\tchunks.push( material.fragmentShader );\n\t\t\tchunks.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tchunks.push( name );\n\t\t\t\tchunks.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var name in parameters ) {\n\n\t\t\tchunks.push( name );\n\t\t\tchunks.push( parameters[ name ] );\n\n\t\t}\n\n\t\tvar code = chunks.join();\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\n\t\tfor ( var p = 0, pl = _programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = _programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\tprogram.usedTimes ++;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new THREE.WebGLProgram( _this, code, material, parameters );\n\t\t\t_programs.push( program );\n\n\t\t\t_this.info.memory.programs = _programs.length;\n\n\t\t}\n\n\t\tmaterial.program = program;\n\n\t\tvar attributes = program.attributes;\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tvar id, base = 'morphTarget';\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tid = base + i;\n\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tvar id, base = 'morphNormal';\n\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tid = base + i;\n\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tmaterial.uniformsList = [];\n\n\t\tfor ( var u in material.__webglShader.uniforms ) {\n\n\t\t\tvar location = material.program.uniforms[ u ];\n\n\t\t\tif ( location ) {\n\t\t\t\tmaterial.uniformsList.push( [ material.__webglShader.uniforms[ u ], location ] );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setProgram( camera, lights, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tif ( material.program ) deallocateMaterial( material );\n\n\t\t\tinitMaterial( material, lights, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tif ( ! object.__webglMorphTargetInfluences ) {\n\n\t\t\t\tobject.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = material.program,\n\t\t\tp_uniforms = program.uniforms,\n\t\t\tm_uniforms = material.__webglShader.uniforms;\n\n\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t_gl.useProgram( program.program );\n\t\t\t_currentProgram = program.id;\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\tif ( _currentMaterialId === -1 ) refreshLights = true;\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tif ( _logarithmicDepthBuffer ) {\n\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material.envMap ) {\n\n\t\t\t\tif ( p_uniforms.cameraPosition !== null ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\n\t\t\t\t material.skinning ) {\n\n\t\t\t\tif ( p_uniforms.viewMatrix !== null ) {\n\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== null ) {\n\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\n\n\t\t\t}\n\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null ) {\n\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\n\n\t\t\t}\n\n\t\t\tif ( _supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\tif ( p_uniforms.boneTexture !== null ) {\n\n\t\t\t\t\tvar textureUnit = getTextureUnit();\n\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\n\n\t\t\t\t}\n\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== null ) {\n\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\n\n\t\t\t\t}\n\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== null ) {\n\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\n\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== null ) {\n\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t material.lights ) {\n\n\t\t\t\tif ( _lightsNeedUpdate ) {\n\n\t\t\t\t\trefreshLights = true;\n\t\t\t\t\tsetupLights( lights );\n\t\t\t\t\t_lightsNeedUpdate = false;\n\t\t\t\t}\n\n\t\t\t\tif ( refreshLights ) {\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\n\t\t\t\t} else {\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t}\n\n\t\t\t// refresh single material specific uniforms\n\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.PointCloudMaterial ) {\n\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\tm_uniforms.mNear.value = camera.near;\n\t\t\t\tm_uniforms.mFar.value = camera.far;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\n\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\n\n\t\t\t}\n\n\t\t\t// load common uniforms\n\n\t\t\tloadUniformsGeneric( material.uniformsList );\n\n\t\t}\n\n\t\tloadUniformsMatrices( p_uniforms, object );\n\n\t\tif ( p_uniforms.modelMatrix !== null ) {\n\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon ( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( _this.gammaInput ) {\n\n\t\t\tuniforms.diffuse.value.copyGammaToLinear( material.color );\n\n\t\t} else {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tuniforms.map.value = material.map;\n\t\tuniforms.lightMap.value = material.lightMap;\n\t\tuniforms.specularMap.value = material.specularMap;\n\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t//  1. color map\n\t\t//  2. specular map\n\t\t//  3. normal map\n\t\t//  4. bump map\n\t\t//  5. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tvar offset = uvScaleMap.offset;\n\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t}\n\n\t\tuniforms.envMap.value = material.envMap;\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\tif ( _this.gammaInput ) {\n\n\t\t\t//uniforms.reflectivity.value = material.reflectivity * material.reflectivity;\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\n\t\t} else {\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\n\t\t}\n\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\t\tuniforms.combine.value = material.combine;\n\t\tuniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;\n\n\t}\n\n\tfunction refreshUniformsLine ( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash ( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsParticle ( uniforms, material ) {\n\n\t\tuniforms.psColor.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size;\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\n\n\t\tuniforms.map.value = material.map;\n\n\t}\n\n\tfunction refreshUniformsFog ( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong ( uniforms, material ) {\n\n\t\tuniforms.shininess.value = material.shininess;\n\n\t\tif ( _this.gammaInput ) {\n\n\t\t\tuniforms.ambient.value.copyGammaToLinear( material.ambient );\n\t\t\tuniforms.emissive.value.copyGammaToLinear( material.emissive );\n\t\t\tuniforms.specular.value.copyGammaToLinear( material.specular );\n\n\t\t} else {\n\n\t\t\tuniforms.ambient.value = material.ambient;\n\t\t\tuniforms.emissive.value = material.emissive;\n\t\t\tuniforms.specular.value = material.specular;\n\n\t\t}\n\n\t\tif ( material.wrapAround ) {\n\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert ( uniforms, material ) {\n\n\t\tif ( _this.gammaInput ) {\n\n\t\t\tuniforms.ambient.value.copyGammaToLinear( material.ambient );\n\t\t\tuniforms.emissive.value.copyGammaToLinear( material.emissive );\n\n\t\t} else {\n\n\t\t\tuniforms.ambient.value = material.ambient;\n\t\t\tuniforms.emissive.value = material.emissive;\n\n\t\t}\n\n\t\tif ( material.wrapAround ) {\n\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLights ( uniforms, lights ) {\n\n\t\tuniforms.ambientLightColor.value = lights.ambient;\n\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\n\n\t\tuniforms.pointLightColor.value = lights.point.colors;\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\n\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\n\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, boolean ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = boolean;\n\n\t\tuniforms.directionalLightColor.needsUpdate = boolean;\n\t\tuniforms.directionalLightDirection.needsUpdate = boolean;\n\n\t\tuniforms.pointLightColor.needsUpdate = boolean;\n\t\tuniforms.pointLightPosition.needsUpdate = boolean;\n\t\tuniforms.pointLightDistance.needsUpdate = boolean;\n\n\t\tuniforms.spotLightColor.needsUpdate = boolean;\n\t\tuniforms.spotLightPosition.needsUpdate = boolean;\n\t\tuniforms.spotLightDistance.needsUpdate = boolean;\n\t\tuniforms.spotLightDirection.needsUpdate = boolean;\n\t\tuniforms.spotLightAngleCos.needsUpdate = boolean;\n\t\tuniforms.spotLightExponent.needsUpdate = boolean;\n\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = boolean;\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = boolean;\n\t\tuniforms.hemisphereLightDirection.needsUpdate = boolean;\n\n\t}\n\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\n\n\t\tif ( uniforms.shadowMatrix ) {\n\n\t\t\tvar j = 0;\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( ! light.castShadow ) continue;\n\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\n\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\n\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\n\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\n\n\t\t\t\t\tj ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Uniforms (load to GPU)\n\n\tfunction loadUniformsMatrices ( uniforms, object ) {\n\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\n\n\t\tif ( uniforms.normalMatrix ) {\n\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\n\n\t\t}\n\n\t}\n\n\tfunction getTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= _maxTextures ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction loadUniformsGeneric ( uniforms ) {\n\n\t\tvar texture, textureUnit, offset;\n\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\n\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\n\n\t\t\t// needsUpdate property is not added to all uniforms.\n\t\t\tif ( uniform.needsUpdate === false ) continue;\n\n\t\t\tvar type = uniform.type;\n\t\t\tvar value = uniform.value;\n\t\t\tvar location = uniforms[ j ][ 1 ];\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase '1i':\n\t\t\t\t\t_gl.uniform1i( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '1f':\n\t\t\t\t\t_gl.uniform1f( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '2f':\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '3f':\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '4f':\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '1iv':\n\t\t\t\t\t_gl.uniform1iv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '3iv':\n\t\t\t\t\t_gl.uniform3iv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '1fv':\n\t\t\t\t\t_gl.uniform1fv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '2fv':\n\t\t\t\t\t_gl.uniform2fv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '3fv':\n\t\t\t\t\t_gl.uniform3fv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '4fv':\n\t\t\t\t\t_gl.uniform4fv( location, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Matrix3fv':\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Matrix4fv':\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\n\t\t\t\t\tbreak;\n\n\t\t\t\t//\n\n\t\t\t\tcase 'i':\n\n\t\t\t\t\t// single integer\n\t\t\t\t\t_gl.uniform1i( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'f':\n\n\t\t\t\t\t// single float\n\t\t\t\t\t_gl.uniform1f( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v2':\n\n\t\t\t\t\t// single THREE.Vector2\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v3':\n\n\t\t\t\t\t// single THREE.Vector3\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v4':\n\n\t\t\t\t\t// single THREE.Vector4\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'c':\n\n\t\t\t\t\t// single THREE.Color\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'iv1':\n\n\t\t\t\t\t// flat array of integers (JS or typed array)\n\t\t\t\t\t_gl.uniform1iv( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'iv':\n\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\n\t\t\t\t\t_gl.uniform3iv( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'fv1':\n\n\t\t\t\t\t// flat array of floats (JS or typed array)\n\t\t\t\t\t_gl.uniform1fv( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'fv':\n\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\n\t\t\t\t\t_gl.uniform3fv( location, value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v2v':\n\n\t\t\t\t\t// array of THREE.Vector2\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\toffset = i * 2;\n\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v3v':\n\n\t\t\t\t\t// array of THREE.Vector3\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\toffset = i * 3;\n\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'v4v':\n\n\t\t\t\t\t// array of THREE.Vector4\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\toffset = i * 4;\n\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\n\t\t\t\t\t\tuniform._array[ offset + 3 ] = value[ i ].w;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'm3':\n\n\t\t\t\t\t// single THREE.Matrix3\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'm3v':\n\n\t\t\t\t\t// array of THREE.Matrix3\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'm4':\n\n\t\t\t\t\t// single THREE.Matrix4\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'm4v':\n\n\t\t\t\t\t// array of THREE.Matrix4\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 't':\n\n\t\t\t\t\t// single THREE.Texture (2d or cube)\n\n\t\t\t\t\ttexture = value;\n\t\t\t\t\ttextureUnit = getTextureUnit();\n\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\n\n\t\t\t\t\tif ( ! texture ) continue;\n\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\n\t\t\t\t\t   ( texture.image instanceof Array && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/\n\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\n\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tv':\n\n\t\t\t\t\t// array of THREE.Texture (2d)\n\n\t\t\t\t\tif ( uniform._array === undefined ) {\n\n\t\t\t\t\t\tuniform._array = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\n\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\n\n\t\t\t\t\t\ttexture = uniform.value[ i ];\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\n\n\t\t\t\t\t\tif ( ! texture ) continue;\n\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupMatrices ( object, camera ) {\n\n\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject._normalMatrix.getNormalMatrix( object._modelViewMatrix );\n\n\t}\n\n\t//\n\n\tfunction setColorGamma( array, offset, color, intensitySq ) {\n\n\t\tarray[ offset ]     = color.r * color.r * intensitySq;\n\t\tarray[ offset + 1 ] = color.g * color.g * intensitySq;\n\t\tarray[ offset + 2 ] = color.b * color.b * intensitySq;\n\n\t}\n\n\tfunction setColorLinear( array, offset, color, intensity ) {\n\n\t\tarray[ offset ]     = color.r * intensity;\n\t\tarray[ offset + 1 ] = color.g * intensity;\n\t\tarray[ offset + 2 ] = color.b * intensity;\n\n\t}\n\n\tfunction setupLights ( lights ) {\n\n\t\tvar l, ll, light, n,\n\t\tr = 0, g = 0, b = 0,\n\t\tcolor, skyColor, groundColor,\n\t\tintensity,  intensitySq,\n\t\tposition,\n\t\tdistance,\n\n\t\tzlights = _lights,\n\n\t\tdirColors = zlights.directional.colors,\n\t\tdirPositions = zlights.directional.positions,\n\n\t\tpointColors = zlights.point.colors,\n\t\tpointPositions = zlights.point.positions,\n\t\tpointDistances = zlights.point.distances,\n\n\t\tspotColors = zlights.spot.colors,\n\t\tspotPositions = zlights.spot.positions,\n\t\tspotDistances = zlights.spot.distances,\n\t\tspotDirections = zlights.spot.directions,\n\t\tspotAnglesCos = zlights.spot.anglesCos,\n\t\tspotExponents = zlights.spot.exponents,\n\n\t\themiSkyColors = zlights.hemi.skyColors,\n\t\themiGroundColors = zlights.hemi.groundColors,\n\t\themiPositions = zlights.hemi.positions,\n\n\t\tdirLength = 0,\n\t\tpointLength = 0,\n\t\tspotLength = 0,\n\t\themiLength = 0,\n\n\t\tdirCount = 0,\n\t\tpointCount = 0,\n\t\tspotCount = 0,\n\t\themiCount = 0,\n\n\t\tdirOffset = 0,\n\t\tpointOffset = 0,\n\t\tspotOffset = 0,\n\t\themiOffset = 0;\n\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\tlight = lights[ l ];\n\n\t\t\tif ( light.onlyShadow ) continue;\n\n\t\t\tcolor = light.color;\n\t\t\tintensity = light.intensity;\n\t\t\tdistance = light.distance;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\tif ( ! light.visible ) continue;\n\n\t\t\t\tif ( _this.gammaInput ) {\n\n\t\t\t\t\tr += color.r * color.r;\n\t\t\t\t\tg += color.g * color.g;\n\t\t\t\t\tb += color.b * color.b;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tr += color.r;\n\t\t\t\t\tg += color.g;\n\t\t\t\t\tb += color.b;\n\n\t\t\t\t}\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tdirCount += 1;\n\n\t\t\t\tif ( ! light.visible ) continue;\n\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t_direction.sub( _vector3 );\n\t\t\t\t_direction.normalize();\n\n\t\t\t\tdirOffset = dirLength * 3;\n\n\t\t\t\tdirPositions[ dirOffset ]     = _direction.x;\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\n\n\t\t\t\tif ( _this.gammaInput ) {\n\n\t\t\t\t\tsetColorGamma( dirColors, dirOffset, color, intensity * intensity );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\n\n\t\t\t\t}\n\n\t\t\t\tdirLength += 1;\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tpointCount += 1;\n\n\t\t\t\tif ( ! light.visible ) continue;\n\n\t\t\t\tpointOffset = pointLength * 3;\n\n\t\t\t\tif ( _this.gammaInput ) {\n\n\t\t\t\t\tsetColorGamma( pointColors, pointOffset, color, intensity * intensity );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\n\n\t\t\t\t}\n\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tpointPositions[ pointOffset ]     = _vector3.x;\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\n\n\t\t\t\tpointDistances[ pointLength ] = distance;\n\n\t\t\t\tpointLength += 1;\n\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\n\n\t\t\t\tspotCount += 1;\n\n\t\t\t\tif ( ! light.visible ) continue;\n\n\t\t\t\tspotOffset = spotLength * 3;\n\n\t\t\t\tif ( _this.gammaInput ) {\n\n\t\t\t\t\tsetColorGamma( spotColors, spotOffset, color, intensity * intensity );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\n\n\t\t\t\t}\n\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tspotPositions[ spotOffset ]     = _direction.x;\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _direction.y;\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _direction.z;\n\n\t\t\t\tspotDistances[ spotLength ] = distance;\n\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t_direction.sub( _vector3 );\n\t\t\t\t_direction.normalize();\n\n\t\t\t\tspotDirections[ spotOffset ]     = _direction.x;\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\n\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\n\n\t\t\t\tspotLength += 1;\n\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\n\n\t\t\t\themiCount += 1;\n\n\t\t\t\tif ( ! light.visible ) continue;\n\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t_direction.normalize();\n\n\t\t\t\themiOffset = hemiLength * 3;\n\n\t\t\t\themiPositions[ hemiOffset ]     = _direction.x;\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\n\n\t\t\t\tskyColor = light.color;\n\t\t\t\tgroundColor = light.groundColor;\n\n\t\t\t\tif ( _this.gammaInput ) {\n\n\t\t\t\t\tintensitySq = intensity * intensity;\n\n\t\t\t\t\tsetColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );\n\t\t\t\t\tsetColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\n\n\t\t\t\t}\n\n\t\t\t\themiLength += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// null eventual remains from removed lights\n\t\t// (this is to avoid if in shader)\n\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\n\n\t\tzlights.directional.length = dirLength;\n\t\tzlights.point.length = pointLength;\n\t\tzlights.spot.length = spotLength;\n\t\tzlights.hemi.length = hemiLength;\n\n\t\tzlights.ambient[ 0 ] = r;\n\t\tzlights.ambient[ 1 ] = g;\n\t\tzlights.ambient[ 2 ] = b;\n\n\t}\n\n\t// GL state setting\n\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\tif ( cullFace === THREE.CullFaceNone ) {\n\n\t\t\t_gl.disable( _gl.CULL_FACE );\n\n\t\t} else {\n\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\n\n\t\t\t\t_gl.frontFace( _gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.frontFace( _gl.CCW );\n\n\t\t\t}\n\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\n\n\t\t\t\t_gl.cullFace( _gl.BACK );\n\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\n\n\t\t\t\t_gl.cullFace( _gl.FRONT );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\n\n\t\t\t}\n\n\t\t\t_gl.enable( _gl.CULL_FACE );\n\n\t\t}\n\n\t};\n\n\tthis.setMaterialFaces = function ( material ) {\n\n\t\tvar doubleSided = material.side === THREE.DoubleSide;\n\t\tvar flipSided = material.side === THREE.BackSide;\n\n\t\tif ( _oldDoubleSided !== doubleSided ) {\n\n\t\t\tif ( doubleSided ) {\n\n\t\t\t\t_gl.disable( _gl.CULL_FACE );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.enable( _gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\t_oldDoubleSided = doubleSided;\n\n\t\t}\n\n\t\tif ( _oldFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\t_gl.frontFace( _gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.frontFace( _gl.CCW );\n\n\t\t\t}\n\n\t\t\t_oldFlipSided = flipSided;\n\n\t\t}\n\n\t};\n\n\tthis.setDepthTest = function ( depthTest ) {\n\n\t\tif ( _oldDepthTest !== depthTest ) {\n\n\t\t\tif ( depthTest ) {\n\n\t\t\t\t_gl.enable( _gl.DEPTH_TEST );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.disable( _gl.DEPTH_TEST );\n\n\t\t\t}\n\n\t\t\t_oldDepthTest = depthTest;\n\n\t\t}\n\n\t};\n\n\tthis.setDepthWrite = function ( depthWrite ) {\n\n\t\tif ( _oldDepthWrite !== depthWrite ) {\n\n\t\t\t_gl.depthMask( depthWrite );\n\t\t\t_oldDepthWrite = depthWrite;\n\n\t\t}\n\n\t};\n\n\tfunction setLineWidth ( width ) {\n\n\t\tif ( width !== _oldLineWidth ) {\n\n\t\t\t_gl.lineWidth( width );\n\n\t\t\t_oldLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset ( polygonoffset, factor, units ) {\n\n\t\tif ( _oldPolygonOffset !== polygonoffset ) {\n\n\t\t\tif ( polygonoffset ) {\n\n\t\t\t\t_gl.enable( _gl.POLYGON_OFFSET_FILL );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.disable( _gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t\t_oldPolygonOffset = polygonoffset;\n\n\t\t}\n\n\t\tif ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {\n\n\t\t\t_gl.polygonOffset( factor, units );\n\n\t\t\t_oldPolygonOffsetFactor = factor;\n\t\t\t_oldPolygonOffsetUnits = units;\n\n\t\t}\n\n\t}\n\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {\n\n\t\tif ( blending !== _oldBlending ) {\n\n\t\t\tif ( blending === THREE.NoBlending ) {\n\n\t\t\t\t_gl.disable( _gl.BLEND );\n\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\n\n\t\t\t\t_gl.enable( _gl.BLEND );\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\n\t\t\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );\n\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\n\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\n\t\t\t\t_gl.enable( _gl.BLEND );\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\n\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\n\t\t\t\t_gl.enable( _gl.BLEND );\n\t\t\t\t_gl.blendEquation( _gl.FUNC_ADD );\n\t\t\t\t_gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );\n\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\n\n\t\t\t\t_gl.enable( _gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.enable( _gl.BLEND );\n\t\t\t\t_gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );\n\t\t\t\t_gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t}\n\n\t\t\t_oldBlending = blending;\n\n\t\t}\n\n\t\tif ( blending === THREE.CustomBlending ) {\n\n\t\t\tif ( blendEquation !== _oldBlendEquation ) {\n\n\t\t\t\t_gl.blendEquation( paramThreeToGL( blendEquation ) );\n\n\t\t\t\t_oldBlendEquation = blendEquation;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {\n\n\t\t\t\t_gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );\n\n\t\t\t\t_oldBlendSrc = blendSrc;\n\t\t\t\t_oldBlendDst = blendDst;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_oldBlendEquation = null;\n\t\t\t_oldBlendSrc = null;\n\t\t\t_oldBlendDst = null;\n\n\t\t}\n\n\t};\n\n\t// Textures\n\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\n\n\t\tvar extension;\n\n\t\tif ( isImagePowerOfTwo ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension && texture.type !== THREE.FloatType ) {\n\n\t\t\tif ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\n\t\t\t\ttexture.__oldAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.uploadTexture = function ( texture ) {\n\n\t\tif ( texture.__webglInit === undefined ) {\n\n\t\t\ttexture.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttexture.__webglTexture = _gl.createTexture();\n\n\t\t\t_this.info.memory.textures ++;\n\n\t\t}\n\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\ttexture.image = clampToMaxSize( texture.image, _maxTextureSize );\n\n\t\tvar image = texture.image,\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\n\t\tglFormat = paramThreeToGL( texture.format ),\n\t\tglType = paramThreeToGL( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture instanceof THREE.DataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\n\n\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( \"Attempt to load unsupported compressed texture format\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else { // regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttexture.needsUpdate = false;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate();\n\n\t};\n\n\tthis.setTexture = function ( texture, slot ) {\n\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\tif ( texture.needsUpdate ) {\n\n\t\t\t_this.uploadTexture( texture );\n\n\t\t} else {\n\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\n\n\t\t}\n\n\t};\n\n\tfunction clampToMaxSize ( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer:', image, 'is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height + '.' );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction setCubeTexture ( texture, slot ) {\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.needsUpdate ) {\n\n\t\t\t\tif ( ! texture.image.__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttexture.image.__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t_this.info.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\n\n\t\t\t\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( \"Attempt to load unsupported compressed texture format\" );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = false;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate();\n\n\t\t\t} else {\n\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setCubeTextureDynamic ( texture, slot ) {\n\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\n\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\n\n\t}\n\n\t// Render targets\n\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\n\n\t}\n\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget  ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\t\t*/\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t}\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\n\t\tif ( renderTarget && renderTarget.__webglFramebuffer === undefined ) {\n\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\trenderTarget.__webglTexture = _gl.createTexture();\n\n\t\t\t_this.info.memory.textures ++;\n\n\t\t\t// Setup texture, create render and frame buffers\n\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTarget.__webglFramebuffer = [];\n\t\t\t\trenderTarget.__webglRenderbuffer = [];\n\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\t\t\t\t\trenderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t} else {\n\n\t\t\t\trenderTarget.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\n\n\t\t\t\t\trenderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\n\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\n\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t}\n\n\t\t\t// Release everything\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tvar framebuffer, width, height, vx, vy;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer;\n\n\t\t\t}\n\n\t\t\twidth = renderTarget.width;\n\t\t\theight = renderTarget.height;\n\n\t\t\tvx = 0;\n\t\t\tvy = 0;\n\n\t\t} else {\n\n\t\t\tframebuffer = null;\n\n\t\t\twidth = _viewportWidth;\n\t\t\theight = _viewportHeight;\n\n\t\t\tvx = _viewportX;\n\t\t\tvy = _viewportY;\n\n\t\t}\n\n\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.viewport( vx, vy, width, height );\n\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\t_currentWidth = width;\n\t\t_currentHeight = height;\n\n\t};\n\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\n\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback ( f ) {\n\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t// Map three.js constants to WebGL constants\n\n\tfunction paramThreeToGL ( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\tif ( p === THREE.IntType ) return _gl.INT;\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\n\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t}\n\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t// Allocations\n\n\tfunction allocateBones ( object ) {\n\n\t\tif ( _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader\n\t\t\t//   to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction allocateLights( lights ) {\n\n\t\tvar dirLights = 0;\n\t\tvar pointLights = 0;\n\t\tvar spotLights = 0;\n\t\tvar hemiLights = 0;\n\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = lights[ l ];\n\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\n\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\n\n\t\t}\n\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\n\n\t}\n\n\tfunction allocateShadows( lights ) {\n\n\t\tvar maxShadows = 0;\n\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = lights[ l ];\n\n\t\t\tif ( ! light.castShadow ) continue;\n\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\n\t\t\tif ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\n\n\t\t}\n\n\t\treturn maxShadows;\n\n\t}\n\n\t// DEPRECATED\n\t\n\tthis.initMaterial = function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t};\n\n\tthis.addPrePlugin = function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t};\n\n\tthis.addPostPlugin = function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t};\n\n\tthis.updateShadowMap = function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t};\n\n};\n\n// File:src/renderers/WebGLRenderTarget.js\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\toptions = options || {};\n\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\n\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\n\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\n\n\tthis.offset = new THREE.Vector2( 0, 0 );\n\tthis.repeat = new THREE.Vector2( 1, 1 );\n\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\n\tthis.generateMipmaps = true;\n\n\tthis.shareDepthFrom = null;\n\n};\n\nTHREE.WebGLRenderTarget.prototype = {\n\n\tconstructor: THREE.WebGLRenderTarget,\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar tmp = new THREE.WebGLRenderTarget( this.width, this.height );\n\n\t\ttmp.wrapS = this.wrapS;\n\t\ttmp.wrapT = this.wrapT;\n\n\t\ttmp.magFilter = this.magFilter;\n\t\ttmp.minFilter = this.minFilter;\n\n\t\ttmp.anisotropy = this.anisotropy;\n\n\t\ttmp.offset.copy( this.offset );\n\t\ttmp.repeat.copy( this.repeat );\n\n\t\ttmp.format = this.format;\n\t\ttmp.type = this.type;\n\n\t\ttmp.depthBuffer = this.depthBuffer;\n\t\ttmp.stencilBuffer = this.stencilBuffer;\n\n\t\ttmp.generateMipmaps = this.generateMipmaps;\n\n\t\ttmp.shareDepthFrom = this.shareDepthFrom;\n\n\t\treturn tmp;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\n\n// File:src/renderers/WebGLRenderTargetCube.js\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\n\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n};\n\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\n\n// File:src/renderers/webgl/WebGLExtensions.js\n\nTHREE.WebGLExtensions = function ( gl ) {\n\n\tvar extensions = {};\n\n\tthis.get = function ( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tvar extension;\n\n\t\tswitch ( name ) {\n\t\t\n\t\t\tcase 'OES_texture_float':\n\t\t\t\textension = gl.getExtension( 'OES_texture_float' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'OES_texture_float_linear':\n\t\t\t\textension = gl.getExtension( 'OES_texture_float_linear' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'OES_standard_derivatives':\n\t\t\t\textension = gl.getExtension( 'OES_standard_derivatives' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'OES_element_index_uint':\n\t\t\t\textension = gl.getExtension( 'OES_element_index_uint' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_blend_minmax':\n\t\t\t\textension = gl.getExtension( 'EXT_blend_minmax' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_frag_depth':\n\t\t\t\textension = gl.getExtension( 'EXT_frag_depth' );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t};\n\n};\n\n// File:src/renderers/webgl/WebGLProgram.js\n\nTHREE.WebGLProgram = ( function () {\n\n\tvar programIdCount = 0;\n\n\tvar generateDefines = function ( defines ) {\n\n\t\tvar value, chunk, chunks = [];\n\n\t\tfor ( var d in defines ) {\n\n\t\t\tvalue = defines[ d ];\n\t\t\tif ( value === false ) continue;\n\n\t\t\tchunk = \"#define \" + d + \" \" + value;\n\t\t\tchunks.push( chunk );\n\n\t\t}\n\n\t\treturn chunks.join( \"\\n\" );\n\n\t};\n\n\tvar cacheUniformLocations = function ( gl, program, identifiers ) {\n\n\t\tvar uniforms = {};\n\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\n\n\t\t\tvar id = identifiers[ i ];\n\t\t\tuniforms[ id ] = gl.getUniformLocation( program, id );\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t};\n\n\tvar cacheAttributeLocations = function ( gl, program, identifiers ) {\n\n\t\tvar attributes = {};\n\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\n\n\t\t\tvar id = identifiers[ i ];\n\t\t\tattributes[ id ] = gl.getAttribLocation( program, id );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t};\n\n\treturn function ( renderer, code, material, parameters ) {\n\n\t\tvar _this = renderer;\n\t\tvar _gl = _this.context;\n\n\t\tvar defines = material.defines;\n\t\tvar uniforms = material.__webglShader.uniforms;\n\t\tvar attributes = material.attributes;\n\n\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\tvar index0AttributeName = material.index0AttributeName;\n\n\t\tif ( index0AttributeName === undefined && parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\n\t\t\tindex0AttributeName = 'position';\n\n\t\t}\n\n\t\tvar shadowMapTypeDefine = \"SHADOWMAP_TYPE_BASIC\";\n\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF\";\n\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = \"SHADOWMAP_TYPE_PCF_SOFT\";\n\n\t\t}\n\n\t\t// console.log( \"building new program \" );\n\n\t\t//\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\t//\n\n\t\tvar program = _gl.createProgram();\n\n\t\tvar prefix_vertex, prefix_fragment;\n\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\n\n\t\t\tprefix_vertex = '';\n\t\t\tprefix_fragment = '';\n\n\t\t} else {\n\n\t\t\tprefix_vertex = [\n\n\t\t\t\t\"precision \" + parameters.precision + \" float;\",\n\t\t\t\t\"precision \" + parameters.precision + \" int;\",\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\n\n\t\t\t\t_this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n\t\t\t\t_this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n\n\t\t\t\t\"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\n\t\t\t\t\"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\n\t\t\t\t\"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\n\t\t\t\t\"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\n\n\t\t\t\t\"#define MAX_SHADOWS \" + parameters.maxShadows,\n\n\t\t\t\t\"#define MAX_BONES \" + parameters.maxBones,\n\n\t\t\t\tparameters.map ? \"#define USE_MAP\" : \"\",\n\t\t\t\tparameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n\t\t\t\tparameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n\t\t\t\tparameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n\t\t\t\tparameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n\t\t\t\tparameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n\t\t\t\tparameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n\t\t\t\tparameters.vertexColors ? \"#define USE_COLOR\" : \"\",\n\n\t\t\t\tparameters.skinning ? \"#define USE_SKINNING\" : \"\",\n\t\t\t\tparameters.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\n\n\t\t\t\tparameters.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\n\t\t\t\tparameters.morphNormals ? \"#define USE_MORPHNORMALS\" : \"\",\n\t\t\t\tparameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\n\t\t\t\tparameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n\t\t\t\tparameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n\t\t\t\tparameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n\t\t\t\tparameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n\t\t\t\tparameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n\t\t\t\tparameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\n\n\t\t\t\tparameters.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n\t\t\t\t//_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n\n\n\t\t\t\t\"uniform mat4 modelMatrix;\",\n\t\t\t\t\"uniform mat4 modelViewMatrix;\",\n\t\t\t\t\"uniform mat4 projectionMatrix;\",\n\t\t\t\t\"uniform mat4 viewMatrix;\",\n\t\t\t\t\"uniform mat3 normalMatrix;\",\n\t\t\t\t\"uniform vec3 cameraPosition;\",\n\n\t\t\t\t\"attribute vec3 position;\",\n\t\t\t\t\"attribute vec3 normal;\",\n\t\t\t\t\"attribute vec2 uv;\",\n\t\t\t\t\"attribute vec2 uv2;\",\n\n\t\t\t\t\"#ifdef USE_COLOR\",\n\n\t\t\t\t\"\tattribute vec3 color;\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t\"#ifdef USE_MORPHTARGETS\",\n\n\t\t\t\t\"\tattribute vec3 morphTarget0;\",\n\t\t\t\t\"\tattribute vec3 morphTarget1;\",\n\t\t\t\t\"\tattribute vec3 morphTarget2;\",\n\t\t\t\t\"\tattribute vec3 morphTarget3;\",\n\n\t\t\t\t\"\t#ifdef USE_MORPHNORMALS\",\n\n\t\t\t\t\"\t\tattribute vec3 morphNormal0;\",\n\t\t\t\t\"\t\tattribute vec3 morphNormal1;\",\n\t\t\t\t\"\t\tattribute vec3 morphNormal2;\",\n\t\t\t\t\"\t\tattribute vec3 morphNormal3;\",\n\n\t\t\t\t\"\t#else\",\n\n\t\t\t\t\"\t\tattribute vec3 morphTarget4;\",\n\t\t\t\t\"\t\tattribute vec3 morphTarget5;\",\n\t\t\t\t\"\t\tattribute vec3 morphTarget6;\",\n\t\t\t\t\"\t\tattribute vec3 morphTarget7;\",\n\n\t\t\t\t\"\t#endif\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t\"#ifdef USE_SKINNING\",\n\n\t\t\t\t\"\tattribute vec4 skinIndex;\",\n\t\t\t\t\"\tattribute vec4 skinWeight;\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t\"\"\n\n\t\t\t].join( '\\n' );\n\n\t\t\tprefix_fragment = [\n\n\t\t\t\t\"precision \" + parameters.precision + \" float;\",\n\t\t\t\t\"precision \" + parameters.precision + \" int;\",\n\n\t\t\t\t( parameters.bumpMap || parameters.normalMap ) ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\t\"#define MAX_DIR_LIGHTS \" + parameters.maxDirLights,\n\t\t\t\t\"#define MAX_POINT_LIGHTS \" + parameters.maxPointLights,\n\t\t\t\t\"#define MAX_SPOT_LIGHTS \" + parameters.maxSpotLights,\n\t\t\t\t\"#define MAX_HEMI_LIGHTS \" + parameters.maxHemiLights,\n\n\t\t\t\t\"#define MAX_SHADOWS \" + parameters.maxShadows,\n\n\t\t\t\tparameters.alphaTest ? \"#define ALPHATEST \" + parameters.alphaTest: \"\",\n\n\t\t\t\t_this.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n\t\t\t\t_this.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? \"#define USE_FOG\" : \"\",\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? \"#define FOG_EXP2\" : \"\",\n\n\t\t\t\tparameters.map ? \"#define USE_MAP\" : \"\",\n\t\t\t\tparameters.envMap ? \"#define USE_ENVMAP\" : \"\",\n\t\t\t\tparameters.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n\t\t\t\tparameters.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n\t\t\t\tparameters.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n\t\t\t\tparameters.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n\t\t\t\tparameters.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n\t\t\t\tparameters.vertexColors ? \"#define USE_COLOR\" : \"\",\n\n\t\t\t\tparameters.metal ? \"#define METAL\" : \"\",\n\t\t\t\tparameters.wrapAround ? \"#define WRAP_AROUND\" : \"\",\n\t\t\t\tparameters.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n\t\t\t\tparameters.flipSided ? \"#define FLIP_SIDED\" : \"\",\n\n\t\t\t\tparameters.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n\t\t\t\tparameters.shadowMapEnabled ? \"#define \" + shadowMapTypeDefine : \"\",\n\t\t\t\tparameters.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n\t\t\t\tparameters.shadowMapCascade ? \"#define SHADOWMAP_CASCADE\" : \"\",\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n\t\t\t\t//_this._glExtensionFragDepth ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n\n\t\t\t\t\"uniform mat4 viewMatrix;\",\n\t\t\t\t\"uniform vec3 cameraPosition;\",\n\t\t\t\t\"\"\n\n\t\t\t].join( '\\n' );\n\n\t\t}\n\n\t\tvar glVertexShader = new THREE.WebGLShader( _gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader );\n\t\tvar glFragmentShader = new THREE.WebGLShader( _gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader );\n\n\t\t_gl.attachShader( program, glVertexShader );\n\t\t_gl.attachShader( program, glFragmentShader );\n\n\t\tif ( index0AttributeName !== undefined ) {\n\n\t\t\t// Force a particular attribute to index 0.\n\t\t\t// because potentially expensive emulation is done by browser if attribute 0 is disabled.\n\t\t\t// And, color, for example is often automatically bound to index 0 so disabling it\n\n\t\t\t_gl.bindAttribLocation( program, 0, index0AttributeName );\n\n\t\t}\n\n\t\t_gl.linkProgram( program );\n\n\t\tif ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: Could not initialise shader.' );\n\t\t\tconsole.error( 'gl.VALIDATE_STATUS', _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ) );\n\t\t\tconsole.error( 'gl.getError()', _gl.getError() );\n\n\t\t}\n\n\t\tif ( _gl.getProgramInfoLog( program ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', _gl.getProgramInfoLog( program ) );\n\n\t\t}\n\n\t\t// clean up\n\n\t\t_gl.deleteShader( glVertexShader );\n\t\t_gl.deleteShader( glFragmentShader );\n\n\t\t// cache uniform locations\n\n\t\tvar identifiers = [\n\n\t\t\t'viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition', 'morphTargetInfluences', 'bindMatrix', 'bindMatrixInverse'\n\n\t\t];\n\n\t\tif ( parameters.useVertexTexture ) {\n\n\t\t\tidentifiers.push( 'boneTexture' );\n\t\t\tidentifiers.push( 'boneTextureWidth' );\n\t\t\tidentifiers.push( 'boneTextureHeight' );\n\n\t\t} else {\n\n\t\t\tidentifiers.push( 'boneGlobalMatrices' );\n\n\t\t}\n\n\t\tif ( parameters.logarithmicDepthBuffer ) {\n\n\t\t\tidentifiers.push('logDepthBufFC');\n\n\t\t}\n\n\n\t\tfor ( var u in uniforms ) {\n\n\t\t\tidentifiers.push( u );\n\n\t\t}\n\n\t\tthis.uniforms = cacheUniformLocations( _gl, program, identifiers );\n\n\t\t// cache attributes locations\n\n\t\tidentifiers = [\n\n\t\t\t\"position\", \"normal\", \"uv\", \"uv2\", \"tangent\", \"color\",\n\t\t\t\"skinIndex\", \"skinWeight\", \"lineDistance\"\n\n\t\t];\n\n\t\tfor ( var i = 0; i < parameters.maxMorphTargets; i ++ ) {\n\n\t\t\tidentifiers.push( \"morphTarget\" + i );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameters.maxMorphNormals; i ++ ) {\n\n\t\t\tidentifiers.push( \"morphNormal\" + i );\n\n\t\t}\n\n\t\tfor ( var a in attributes ) {\n\n\t\t\tidentifiers.push( a );\n\n\t\t}\n\n\t\tthis.attributes = cacheAttributeLocations( _gl, program, identifiers );\n\t\tthis.attributesKeys = Object.keys( this.attributes );\n\n\t\t//\n\n\t\tthis.id = programIdCount ++;\n\t\tthis.code = code;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\n\t\treturn this;\n\n\t};\n\n} )();\n\n// File:src/renderers/webgl/WebGLShader.js\n\nTHREE.WebGLShader = ( function () {\n\n\tvar addLineNumbers = function ( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t};\n\n\treturn function ( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type ); \n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t}\n\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog( shader ) );\n\t\t\tconsole.warn( addLineNumbers( string ) );\n\n\t\t}\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\treturn shader;\n\n\t};\n\n} )();\n\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\n\n\tvar gl = renderer.context;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\tvar hasVertexTexture;\n\n\tvar tempTexture, occlusionTexture;\n\n\tvar init = function () {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t-1, -1,  0, 0,\n\t\t\t 1, -1,  1, 0,\n\t\t\t 1,  1,  1, 1,\n\t\t\t-1,  1,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\t// buffers\n\n\t\tvertexBuffer     = gl.createBuffer();\n\t\telementBuffer    = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t// textures\n\n\t\ttempTexture      = gl.createTexture();\n\t\tocclusionTexture = gl.createTexture();\n\n\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\n\n\t\tvar shader;\n\n\t\tif ( hasVertexTexture ) {\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"precision mediump float;\",\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t}\n\n\t\tprogram = createProgram( shader );\n\n\t\tattributes = {\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t}\n\n\t\tuniforms = {\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t};\n\n\t};\n\n\t/*\n\t * Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.\n\t */\n\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\n\n\t\tif ( flares.length === 0 ) return;\n\n\t\tvar tempPosition = new THREE.Vector3();\n\n\t\tvar invAspect = viewportHeight / viewportWidth,\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\n\n\t\tvar size = 16 / viewportHeight,\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\n\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tgl.enableVertexAttribArray( attributes.vertex );\n\t\tgl.enableVertexAttribArray( attributes.uv );\n\n\t\t// loop through all lens flares to update their occlusion and positions\n\t\t// setup gl and common used attribs/unforms\n\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.depthMask( false );\n\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\tsize = 16 / viewportHeight;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t// calc object screen position\n\n\t\t\tvar flare = flares[ i ];\n\t\t\t\n\t\t\ttempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\n\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t// setup arrays for gl programs\n\n\t\t\tscreenPosition.copy( tempPosition )\n\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\n\n\t\t\t// screen cull\n\n\t\t\tif ( hasVertexTexture || (\n\t\t\t\tscreenPositionPixels.x > 0 &&\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\n\t\t\t\tscreenPositionPixels.y > 0 &&\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\n\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\tgl.disable( gl.BLEND );\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\tgl.activeTexture( gl.TEXTURE0 );\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\n\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// update object positions\n\n\t\t\t\tflare.positionScreen.copy( screenPosition )\n\n\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t}\n\n\t\t\t\t// render flares\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\tgl.enable( gl.BLEND );\n\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\n\n\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\trenderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\n\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tgl.enable( gl.CULL_FACE );\n\t\tgl.enable( gl.DEPTH_TEST );\n\t\tgl.depthMask( true );\n\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram ( shader ) {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\tgl.compileShader( fragmentShader );\n\t\tgl.compileShader( vertexShader );\n\n\t\tgl.attachShader( program, fragmentShader );\n\t\tgl.attachShader( program, vertexShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n};\n\n// File:src/renderers/webgl/plugins/ShadowMapPlugin.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShadowMapPlugin = function ( _renderer, _lights, _webglObjects, _webglObjectsImmediate ) {\n\n\tvar _gl = _renderer.context;\n\n\tvar _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\n\n\t_frustum = new THREE.Frustum(),\n\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t_min = new THREE.Vector3(),\n\t_max = new THREE.Vector3(),\n\n\t_matrixPosition = new THREE.Vector3(),\n\t\n\t_renderList = [];\n\n\t// init\n\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\n\n\t_depthMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: depthUniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader\n\t } );\n\n\t_depthMaterialMorph = new THREE.ShaderMaterial( {\n\t\tuniforms: depthUniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader,\n\t\tmorphTargets: true\n\t} );\n\n\t_depthMaterialSkin = new THREE.ShaderMaterial( {\n\t\tuniforms: depthUniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader,\n\t\tskinning: true\n\t} );\n\n\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( {\n\t\tuniforms: depthUniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader,\n\t\tmorphTargets: true,\n\t\tskinning: true\n\t} );\n\n\t_depthMaterial._shadowPass = true;\n\t_depthMaterialMorph._shadowPass = true;\n\t_depthMaterialSkin._shadowPass = true;\n\t_depthMaterialMorphSkin._shadowPass = true;\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( _renderer.shadowMapEnabled === false ) return;\n\n\t\tvar i, il, j, jl, n,\n\n\t\tshadowMap, shadowMatrix, shadowCamera,\n\t\tprogram, buffer, material,\n\t\twebglObject, object, light,\n\n\t\tlights = [],\n\t\tk = 0,\n\n\t\tfog = null;\n\n\t\t// set GL state for depth map\n\n\t\t_gl.clearColor( 1, 1, 1, 1 );\n\t\t_gl.disable( _gl.BLEND );\n\n\t\t_gl.enable( _gl.CULL_FACE );\n\t\t_gl.frontFace( _gl.CCW );\n\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\n\n\t\t\t_gl.cullFace( _gl.FRONT );\n\n\t\t} else {\n\n\t\t\t_gl.cullFace( _gl.BACK );\n\n\t\t}\n\n\t\t_renderer.setDepthTest( true );\n\n\t\t// preprocess lights\n\t\t// \t- skip lights that are not casting shadows\n\t\t//\t- create virtual lights for cascaded shadow maps\n\n\t\tfor ( i = 0, il = _lights.length; i < il; i ++ ) {\n\n\t\t\tlight = _lights[ i ];\n\n\t\t\tif ( ! light.castShadow ) continue;\n\n\t\t\tif ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\n\n\t\t\t\tfor ( n = 0; n < light.shadowCascadeCount; n ++ ) {\n\n\t\t\t\t\tvar virtualLight;\n\n\t\t\t\t\tif ( ! light.shadowCascadeArray[ n ] ) {\n\n\t\t\t\t\t\tvirtualLight = createVirtualLight( light, n );\n\t\t\t\t\t\tvirtualLight.originalCamera = camera;\n\n\t\t\t\t\t\tvar gyro = new THREE.Gyroscope();\n\t\t\t\t\t\tgyro.position.copy( light.shadowCascadeOffset );\n\n\t\t\t\t\t\tgyro.add( virtualLight );\n\t\t\t\t\t\tgyro.add( virtualLight.target );\n\n\t\t\t\t\t\tcamera.add( gyro );\n\n\t\t\t\t\t\tlight.shadowCascadeArray[ n ] = virtualLight;\n\n\t\t\t\t\t\tconsole.log( \"Created virtualLight\", virtualLight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvirtualLight = light.shadowCascadeArray[ n ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateVirtualLight( light, n );\n\n\t\t\t\t\tlights[ k ] = virtualLight;\n\t\t\t\t\tk ++;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tlights[ k ] = light;\n\t\t\t\tk ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// render depth map\n\n\t\tfor ( i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tlight = lights[ i ];\n\n\t\t\tif ( ! light.shadowMap ) {\n\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\n\n\t\t\t\tif ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\n\n\t\t\t\t}\n\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\n\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\n\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\n\n\t\t\t}\n\n\t\t\tif ( ! light.shadowCamera ) {\n\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\n\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\n\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( \"Unsupported light type for shadow\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tscene.add( light.shadowCamera );\n\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t}\n\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\n\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\n\t\t\t\tscene.add( light.cameraHelper );\n\n\t\t\t}\n\n\t\t\tif ( light.isVirtual && virtualLight.originalCamera == camera ) {\n\n\t\t\t\tupdateShadowCamera( camera, light );\n\n\t\t\t}\n\n\t\t\tshadowMap = light.shadowMap;\n\t\t\tshadowMatrix = light.shadowMatrix;\n\t\t\tshadowCamera = light.shadowCamera;\n\n\t\t\t//\n\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( _matrixPosition );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t//\n\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\n\n\t\t\t// compute shadow matrix\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t// render shadow map\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// set object matrices & frustum culling\n\n\t\t\t_renderList.length = 0;\n\n\t\t\tprojectObject( scene, scene, shadowCamera );\n\n\n\t\t\t// render regular objects\n\n\t\t\tvar objectMaterial, useMorphing, useSkinning;\n\n\t\t\tfor ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\twebglObject = _renderList[ j ];\n\n\t\t\t\tobject = webglObject.object;\n\t\t\t\tbuffer = webglObject.buffer;\n\n\t\t\t\t// culling is overriden globally for all objects\n\t\t\t\t// while rendering depth map\n\n\t\t\t\t// need to deal with MeshFaceMaterial somehow\n\t\t\t\t// in that case just use the first of material.materials for now\n\t\t\t\t// (proper solution would require to break objects by materials\n\t\t\t\t//  similarly to regular rendering and then set corresponding\n\t\t\t\t//  depth materials per each chunk instead of just once per object)\n\n\t\t\t\tobjectMaterial = getObjectMaterial( object );\n\n\t\t\t\tuseMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\n\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\n\n\t\t\t\tif ( object.customDepthMaterial ) {\n\n\t\t\t\t\tmaterial = object.customDepthMaterial;\n\n\t\t\t\t} else if ( useSkinning ) {\n\n\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\n\n\t\t\t\t} else if ( useMorphing ) {\n\n\t\t\t\t\tmaterial = _depthMaterialMorph;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterial = _depthMaterial;\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setMaterialFaces( objectMaterial );\n\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, fog, material, buffer, object );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_renderer.renderBuffer( shadowCamera, _lights, fog, material, buffer, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// set matrices and render immediate objects\n\n\t\t\tfor ( j = 0, jl = _webglObjectsImmediate.length; j < jl; j ++ ) {\n\n\t\t\t\twebglObject = _webglObjectsImmediate[ j ];\n\t\t\t\tobject = webglObject.object;\n\n\t\t\t\tif ( object.visible && object.castShadow ) {\n\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\t_renderer.renderImmediateObject( shadowCamera, _lights, fog, _depthMaterial, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore GL state\n\n\t\tvar clearColor = _renderer.getClearColor(),\n\t\tclearAlpha = _renderer.getClearAlpha();\n\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\n\t\t_gl.enable( _gl.BLEND );\n\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\n\n\t\t\t_gl.cullFace( _gl.BACK );\n\n\t\t}\n\n\t\t_renderer.resetGLState();\n\n\t};\n\n\tfunction projectObject( scene, object, shadowCamera ){\n\n\t\tif ( object.visible ) {\n\n\t\t\tvar webglObjects = _webglObjects[ object.id ];\n\n\t\t\tif ( webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\n\n\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar webglObject = webglObjects[ i ];\n\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t_renderList.push( webglObject );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( scene, object.children[ i ], shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVirtualLight( light, cascade ) {\n\n\t\tvar virtualLight = new THREE.DirectionalLight();\n\n\t\tvirtualLight.isVirtual = true;\n\n\t\tvirtualLight.onlyShadow = true;\n\t\tvirtualLight.castShadow = true;\n\n\t\tvirtualLight.shadowCameraNear = light.shadowCameraNear;\n\t\tvirtualLight.shadowCameraFar = light.shadowCameraFar;\n\n\t\tvirtualLight.shadowCameraLeft = light.shadowCameraLeft;\n\t\tvirtualLight.shadowCameraRight = light.shadowCameraRight;\n\t\tvirtualLight.shadowCameraBottom = light.shadowCameraBottom;\n\t\tvirtualLight.shadowCameraTop = light.shadowCameraTop;\n\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\n\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\n\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\n\t\tvirtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\n\t\tvirtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\n\n\t\tvirtualLight.pointsWorld = [];\n\t\tvirtualLight.pointsFrustum = [];\n\n\t\tvar pointsWorld = virtualLight.pointsWorld,\n\t\t\tpointsFrustum = virtualLight.pointsFrustum;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tpointsWorld[ i ] = new THREE.Vector3();\n\t\t\tpointsFrustum[ i ] = new THREE.Vector3();\n\n\t\t}\n\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\n\n\t\tpointsFrustum[ 0 ].set( - 1, - 1, nearZ );\n\t\tpointsFrustum[ 1 ].set(  1, - 1, nearZ );\n\t\tpointsFrustum[ 2 ].set( - 1,  1, nearZ );\n\t\tpointsFrustum[ 3 ].set(  1,  1, nearZ );\n\n\t\tpointsFrustum[ 4 ].set( - 1, - 1, farZ );\n\t\tpointsFrustum[ 5 ].set(  1, - 1, farZ );\n\t\tpointsFrustum[ 6 ].set( - 1,  1, farZ );\n\t\tpointsFrustum[ 7 ].set(  1,  1, farZ );\n\n\t\treturn virtualLight;\n\n\t}\n\n\t// Synchronize virtual light with the original light\n\n\tfunction updateVirtualLight( light, cascade ) {\n\n\t\tvar virtualLight = light.shadowCascadeArray[ cascade ];\n\n\t\tvirtualLight.position.copy( light.position );\n\t\tvirtualLight.target.position.copy( light.target.position );\n\t\tvirtualLight.lookAt( virtualLight.target );\n\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\n\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\n\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\n\n\t\tvar pointsFrustum = virtualLight.pointsFrustum;\n\n\t\tpointsFrustum[ 0 ].z = nearZ;\n\t\tpointsFrustum[ 1 ].z = nearZ;\n\t\tpointsFrustum[ 2 ].z = nearZ;\n\t\tpointsFrustum[ 3 ].z = nearZ;\n\n\t\tpointsFrustum[ 4 ].z = farZ;\n\t\tpointsFrustum[ 5 ].z = farZ;\n\t\tpointsFrustum[ 6 ].z = farZ;\n\t\tpointsFrustum[ 7 ].z = farZ;\n\n\t}\n\n\t// Fit shadow camera's ortho frustum to camera frustum\n\n\tfunction updateShadowCamera( camera, light ) {\n\n\t\tvar shadowCamera = light.shadowCamera,\n\t\t\tpointsFrustum = light.pointsFrustum,\n\t\t\tpointsWorld = light.pointsWorld;\n\n\t\t_min.set( Infinity, Infinity, Infinity );\n\t\t_max.set( - Infinity, - Infinity, - Infinity );\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar p = pointsWorld[ i ];\n\n\t\t\tp.copy( pointsFrustum[ i ] );\n\t\t\tp.unproject( camera );\n\n\t\t\tp.applyMatrix4( shadowCamera.matrixWorldInverse );\n\n\t\t\tif ( p.x < _min.x ) _min.x = p.x;\n\t\t\tif ( p.x > _max.x ) _max.x = p.x;\n\n\t\t\tif ( p.y < _min.y ) _min.y = p.y;\n\t\t\tif ( p.y > _max.y ) _max.y = p.y;\n\n\t\t\tif ( p.z < _min.z ) _min.z = p.z;\n\t\t\tif ( p.z > _max.z ) _max.z = p.z;\n\n\t\t}\n\n\t\tshadowCamera.left = _min.x;\n\t\tshadowCamera.right = _max.x;\n\t\tshadowCamera.top = _max.y;\n\t\tshadowCamera.bottom = _min.y;\n\n\t\t// can't really fit near/far\n\t\t//shadowCamera.near = _min.z;\n\t\t//shadowCamera.far = _max.z;\n\n\t\tshadowCamera.updateProjectionMatrix();\n\n\t}\n\n\t// For the moment just ignore objects that have multiple materials with different animation methods\n\t// Only the first material will be taken into account for deciding which depth material to use for shadow maps\n\n\tfunction getObjectMaterial( object ) {\n\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\n\t\t\t? object.material.materials[ 0 ]\n\t\t\t: object.material;\n\n\t};\n\n};\n\n// File:src/renderers/webgl/plugins/SpritePlugin.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SpritePlugin = function ( renderer, sprites ) {\n\n\tvar gl = renderer.context;\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\t\n\tvar init = function () {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t- 0.5,   0.5,  0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer  = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new THREE.Texture( canvas );\n\t\ttexture.needsUpdate = true;\n\n\t};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tgl.useProgram( program );\n\n\t\tgl.enableVertexAttribArray( attributes.position );\n\t\tgl.enableVertexAttribArray( attributes.uv );\n\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\n\t\t\tif ( sprite.renderDepth === null ) {\n\n\t\t\t\tsprite.z = - sprite._modelViewMatrix.elements[ 14 ];\n\n\t\t\t} else {\n\n\t\t\t\tsprite.z = sprite.renderDepth;\n\n\t\t\t}\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\n\n\t\t\tscale[ 0 ] = sprite.scale.x;\n\t\t\tscale[ 1 ] = sprite.scale.y;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\trenderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\trenderer.setDepthTest( material.depthTest );\n\t\t\trenderer.setDepthWrite( material.depthWrite );\n\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\n\n\t\t\t\trenderer.setTexture( material.map, 0 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setTexture( texture, 0 );\n\n\t\t\t}\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tgl.enable( gl.CULL_FACE );\n\t\t\n\t\trenderer.resetGLState();\n\n\t};\n\n\tfunction createProgram () {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main() {',\n\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t'}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t};\n\n\tfunction painterSortStable ( a, b ) {\n\n\t\tif ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t};\n\n};\n\n// File:src/extras/GeometryUtils.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\tvar matrix;\n\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\n// File:src/extras/ImageUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Daosheng Mu / https://github.com/DaoshengMu/\n */\n\nTHREE.ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tvar loader = new THREE.ImageLoader();\n\t\tloader.crossOrigin = this.crossOrigin;\n\n\t\tvar texture = new THREE.Texture( undefined, mapping );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t}, undefined, function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t} );\n\n\t\ttexture.sourceFile = url;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\n\n\t\tvar images = [];\n\n\t\tvar loader = new THREE.ImageLoader();\n\t\tloader.crossOrigin = this.crossOrigin;\n\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\n\n\t\t// no flipping needed for cube textures\n\n\t\ttexture.flipY = false;\n\n\t\tvar loaded = 0;\n\n\t\tvar loadTexture = function ( i ) {\n\n\t\t\tloader.load( array[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\n\n\t},\n\n\tgetNormalMap: function ( image, depth ) {\n\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\n\n\t\tvar cross = function ( a, b ) {\n\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\n\n\t\t}\n\n\t\tvar subtract = function ( a, b ) {\n\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\n\n\t\t}\n\n\t\tvar normalize = function ( a ) {\n\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\n\n\t\t}\n\n\t\tdepth = depth | 1;\n\n\t\tvar width = image.width;\n\t\tvar height = image.height;\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\n\t\tvar imageData = context.createImageData( width, height );\n\t\tvar output = imageData.data;\n\n\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\n\n\t\t\t\tvar points = [];\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\n\n\t\t\t\tvar normals = [];\n\t\t\t\tvar num_points = points.length;\n\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\n\n\t\t\t\t\tvar v1 = points[ i ];\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\n\t\t\t\t\tv1 = subtract( v1, origin );\n\t\t\t\t\tv2 = subtract( v2, origin );\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar normal = [ 0, 0, 0 ];\n\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\n\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\n\n\t\t\t\t}\n\n\t\t\t\tnormal[ 0 ] /= normals.length;\n\t\t\t\tnormal[ 1 ] /= normals.length;\n\t\t\t\tnormal[ 2 ] /= normals.length;\n\n\t\t\t\tvar idx = ( y * width + x ) * 4;\n\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\n\t\t\t\toutput[ idx + 3 ] = 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\treturn canvas;\n\n\t},\n\n\tgenerateDataTexture: function ( width, height, color ) {\n\n\t\tvar size = width * height;\n\t\tvar data = new Uint8Array( 3 * size );\n\n\t\tvar r = Math.floor( color.r * 255 );\n\t\tvar g = Math.floor( color.g * 255 );\n\t\tvar b = Math.floor( color.b * 255 );\n\n\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\tdata[ i * 3 ] \t   = r;\n\t\t\tdata[ i * 3 + 1 ] = g;\n\t\t\tdata[ i * 3 + 2 ] = b;\n\n\t\t}\n\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t}\n\n};\n\n// File:src/extras/SceneUtils.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\tvar group = new THREE.Object3D();\n\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\n\n\t\t}\n\n\t\treturn group;\n\n\t},\n\n\tdetach: function ( child, parent, scene ) {\n\n\t\tchild.applyMatrix( parent.matrixWorld );\n\t\tparent.remove( child );\n\t\tscene.add( child );\n\n\t},\n\n\tattach: function ( child, scene, parent ) {\n\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\tscene.remove( child );\n\t\tparent.add( child );\n\n\t}\n\n};\n\n// File:src/extras/FontUtils.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For Text operations in three.js (See TextGeometry)\n *\n * It uses techniques used in:\n *\n * \ttypeface.js and canvastext\n * \t\tFor converting fonts and rendering with javascript\n *\t\thttp://typeface.neocracy.org\n *\n *\tTriangulation ported from AS3\n *\t\tSimple Polygon Triangulation\n *\t\thttp://actionsnippet.com/?p=1462\n *\n * \tA Method to triangulate shapes with holes\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\n *\n */\n\nTHREE.FontUtils = {\n\n\tfaces: {},\n\n\t// Just for now. face[weight][style]\n\n\tface: 'helvetiker',\n\tweight: 'normal',\n\tstyle: 'normal',\n\tsize: 150,\n\tdivisions: 10,\n\n\tgetFace: function () {\n\n\t\ttry {\n\n\t\t\treturn this.faces[ this.face ][ this.weight ][ this.style ];\n\n\t\t} catch (e) {\n\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\n\n\t\t};\n\n\t},\n\n\tloadFace: function ( data ) {\n\n\t\tvar family = data.familyName.toLowerCase();\n\n\t\tvar ThreeFont = this;\n\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\n\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\n\n\t\tvar face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\n\n\t\treturn data;\n\n\t},\n\n\tdrawText: function ( text ) {\n\n\t\tvar characterPts = [], allPts = [];\n\n\t\t// RenderText\n\n\t\tvar i, p,\n\t\t\tface = this.getFace(),\n\t\t\tscale = this.size / face.resolution,\n\t\t\toffset = 0,\n\t\t\tchars = String( text ).split( '' ),\n\t\t\tlength = chars.length;\n\n\t\tvar fontPaths = [];\n\n\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\tvar path = new THREE.Path();\n\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\n\t\t\toffset += ret.offset;\n\n\t\t\tfontPaths.push( ret.path );\n\n\t\t}\n\n\t\t// get the width\n\n\t\tvar width = offset / 2;\n\t\t//\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\n\t\t//\n\t\t// \tallPts[ p ].x -= width;\n\t\t//\n\t\t// }\n\n\t\t//var extract = this.extractPoints( allPts, characterPts );\n\t\t//extract.contour = allPts;\n\n\t\t//extract.paths = fontPaths;\n\t\t//extract.offset = width;\n\n\t\treturn { paths: fontPaths, offset: width };\n\n\t},\n\n\n\n\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\n\n\t\tvar pts = [];\n\n\t\tvar i, i2, divisions,\n\t\t\toutline, action, length,\n\t\t\tscaleX, scaleY,\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\n\t\t\tlaste,\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) return;\n\n\t\tif ( glyph.o ) {\n\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\t\t\tlength = outline.length;\n\n\t\t\tscaleX = scale;\n\t\t\tscaleY = scale;\n\n\t\t\tfor ( i = 0; i < length; ) {\n\n\t\t\t\taction = outline[ i ++ ];\n\n\t\t\t\t//console.log( action );\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm':\n\n\t\t\t\t\t// Move To\n\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l':\n\n\t\t\t\t\t// Line To\n\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\n\t\t\t\t\tpath.lineTo( x,y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q':\n\n\t\t\t\t\t// QuadraticCurveTo\n\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\n\t\t\t\t\t  }\n\n\t\t\t\t  }\n\n\t\t\t\t  break;\n\n\t\t\t\tcase 'b':\n\n\t\t\t\t\t// Cubic Bezier Curve\n\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\tvar tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\tvar ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\n\n\t\treturn { offset: glyph.ha * scale, path:path };\n\t}\n\n};\n\n\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\n\n\t// Parameters \n\n\tparameters = parameters || {};\n\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\n\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\n\n\tTHREE.FontUtils.size = size;\n\tTHREE.FontUtils.divisions = curveSegments;\n\n\tTHREE.FontUtils.face = font;\n\tTHREE.FontUtils.weight = weight;\n\tTHREE.FontUtils.style = style;\n\n\t// Get a Font data json object\n\n\tvar data = THREE.FontUtils.drawText( text );\n\n\tvar paths = data.paths;\n\tvar shapes = [];\n\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t}\n\n\treturn shapes;\n\n};\n\n\n/**\n * This code is a quick port of code written in C++ which was submitted to\n * flipcode.com by John W. Ratcliff  // July 22, 2000\n * See original code and more information here:\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n *\n * ported to actionscript by Zevan Rosser\n * www.actionsnippet.com\n *\n * ported to javascript by Joshua Koo\n * http://www.lab4games.net/zz85/blog\n *\n */\n\n\n( function ( namespace ) {\n\n\tvar EPSILON = 0.0000000001;\n\n\t// takes in an contour array and returns\n\n\tvar process = function ( contour, indices ) {\n\n\t\tvar n = contour.length;\n\n\t\tif ( n < 3 ) return null;\n\n\t\tvar result = [],\n\t\t\tverts = [],\n\t\t\tvertIndices = [];\n\n\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\tvar u, v, w;\n\n\t\tif ( area( contour ) > 0.0 ) {\n\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t} else {\n\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t}\n\n\t\tvar nv = n;\n\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\tvar count = 2 * nv;   /* error detection */\n\n\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t//return null;\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\tconsole.log( 'Warning, unable to triangulate polygon!' );\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t/* true names of the vertices */\n\n\t\t\t\ta = verts[ u ];\n\t\t\t\tb = verts[ v ];\n\t\t\t\tc = verts[ w ];\n\n\t\t\t\t/* output Triangle */\n\n\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\tcontour[ b ],\n\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s++, t++ ) {\n\n\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t}\n\n\t\t\t\tnv --;\n\n\t\t\t\t/* reset error detection counter */\n\n\t\t\t\tcount = 2 * nv;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( indices ) return vertIndices;\n\t\treturn result;\n\n\t};\n\n\t// calculate area of the contour polygon\n\n\tvar area = function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t};\n\n\tvar snip = function ( contour, u, v, w, n, verts ) {\n\n\t\tvar p;\n\t\tvar ax, ay, bx, by;\n\t\tvar cx, cy, px, py;\n\n\t\tax = contour[ verts[ u ] ].x;\n\t\tay = contour[ verts[ u ] ].y;\n\n\t\tbx = contour[ verts[ v ] ].x;\n\t\tby = contour[ verts[ v ] ].y;\n\n\t\tcx = contour[ verts[ w ] ].x;\n\t\tcy = contour[ verts[ w ] ].y;\n\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n\t\tvar aX, aY, bX, bY, cX, cY;\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\taX = cx - bx;  aY = cy - by;\n\t\tbX = ax - cx;  bY = ay - cy;\n\t\tcX = bx - ax;  cY = by - ay;\n\n\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\tpx = contour[ verts[ p ] ].x\n\t\t\tpy = contour[ verts[ p ] ].y\n\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t// see if p is inside triangle abc\n\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n\n\tnamespace.Triangulate = process;\n\tnamespace.Triangulate.area = area;\n\n\treturn namespace;\n\n} )( THREE.FontUtils );\n\n// To use the typeface.js face files, hook up the API\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\nTHREE.typeface_js = self._typeface_js;\n\n// File:src/extras/audio/Audio.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.Audio = function ( listener ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\tthis.source = this.context.createBufferSource();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n};\n\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Audio.prototype.load = function ( file ) {\n\n\tvar scope = this;\n\n\tvar request = new XMLHttpRequest();\n\trequest.open( 'GET', file, true );\n\trequest.responseType = 'arraybuffer';\n\trequest.onload = function ( e ) {\n\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\n\n\t\t\tscope.source.buffer = buffer;\n\t\t\tscope.source.connect( scope.panner );\n\t\t\tscope.source.start( 0 );\n\n\t\t} );\n\n\t};\n\trequest.send();\n\n\treturn this;\n\n};\n\nTHREE.Audio.prototype.setLoop = function ( value ) {\n\n\tthis.source.loop = value;\n\n};\n\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\n\n\tthis.panner.refDistance = value;\n\n};\n\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\n\n\tthis.panner.rolloffFactor = value;\n\n};\n\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\n\n\tvar position = new THREE.Vector3();\n\n\treturn function ( force ) {\n\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t};\n\n} )();\n\n// File:src/extras/audio/AudioListener.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AudioListener = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\n\n};\n\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\n\n\tvar position = new THREE.Vector3();\n\tvar quaternion = new THREE.Quaternion();\n\tvar scale = new THREE.Vector3();\n\n\tvar orientation = new THREE.Vector3();\n\tvar velocity = new THREE.Vector3();\n\n\tvar positionPrev = new THREE.Vector3();\n\n\treturn function ( force ) {\n\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tvar listener = this.context.listener;\n\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\torientation.set( 0, 0, -1 ).applyQuaternion( quaternion );\n\t\tvelocity.subVectors( position, positionPrev );\n\n\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, this.up.x, this.up.y, this.up.z );\n\t\tlistener.setVelocity( velocity.x, velocity.y, velocity.z );\n\n\t\tpositionPrev.copy( position );\n\n\t};\n\n} )();\n\n// File:src/extras/core/Curve.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of Curve methods\n * .getPoint(t), getTangent(t)\n * .getPointAt(u), getTagentAt(u)\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following classes subclasses THREE.Curve:\n *\n * -- 2d classes --\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.CubicBezierCurve\n * THREE.SplineCurve\n * THREE.ArcCurve\n * THREE.EllipseCurve\n *\n * -- 3d classes --\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n * THREE.CubicBezierCurve3\n * THREE.SplineCurve3\n * THREE.ClosedSplineCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nTHREE.Curve = function () {\n\n};\n\n// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\n\nTHREE.Curve.prototype.getPoint = function ( t ) {\n\n\tconsole.log( \"Warning, getPoint() not implemented!\" );\n\treturn null;\n\n};\n\n// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\n\nTHREE.Curve.prototype.getPointAt = function ( u ) {\n\n\tvar t = this.getUtoTmapping( u );\n\treturn this.getPoint( t );\n\n};\n\n// Get sequence of points using getPoint( t )\n\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\n\n\tif ( ! divisions ) divisions = 5;\n\n\tvar d, pts = [];\n\n\tfor ( d = 0; d <= divisions; d ++ ) {\n\n\t\tpts.push( this.getPoint( d / divisions ) );\n\n\t}\n\n\treturn pts;\n\n};\n\n// Get sequence of points using getPointAt( u )\n\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\n\n\tif ( ! divisions ) divisions = 5;\n\n\tvar d, pts = [];\n\n\tfor ( d = 0; d <= divisions; d ++ ) {\n\n\t\tpts.push( this.getPointAt( d / divisions ) );\n\n\t}\n\n\treturn pts;\n\n};\n\n// Get total curve arc length\n\nTHREE.Curve.prototype.getLength = function () {\n\n\tvar lengths = this.getLengths();\n\treturn lengths[ lengths.length - 1 ];\n\n};\n\n// Get list of cumulative segment lengths\n\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\n\n\tif ( ! divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;\n\n\tif ( this.cacheArcLengths\n\t\t&& ( this.cacheArcLengths.length == divisions + 1 )\n\t\t&& ! this.needsUpdate) {\n\n\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\treturn this.cacheArcLengths;\n\n\t}\n\n\tthis.needsUpdate = false;\n\n\tvar cache = [];\n\tvar current, last = this.getPoint( 0 );\n\tvar p, sum = 0;\n\n\tcache.push( 0 );\n\n\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\tcurrent = this.getPoint ( p / divisions );\n\t\tsum += current.distanceTo( last );\n\t\tcache.push( sum );\n\t\tlast = current;\n\n\t}\n\n\tthis.cacheArcLengths = cache;\n\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n};\n\n\nTHREE.Curve.prototype.updateArcLengths = function() {\n\tthis.needsUpdate = true;\n\tthis.getLengths();\n};\n\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\n\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\n\n\tvar arcLengths = this.getLengths();\n\n\tvar i = 0, il = arcLengths.length;\n\n\tvar targetArcLength; // The targeted u distance value to get\n\n\tif ( distance ) {\n\n\t\ttargetArcLength = distance;\n\n\t} else {\n\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t}\n\n\t//var time = Date.now();\n\n\t// binary search for the index with largest value smaller than target u distance\n\n\tvar low = 0, high = il - 1, comparison;\n\n\twhile ( low <= high ) {\n\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\tif ( comparison < 0 ) {\n\n\t\t\tlow = i + 1;\n\t\t\tcontinue;\n\n\t\t} else if ( comparison > 0 ) {\n\n\t\t\thigh = i - 1;\n\t\t\tcontinue;\n\n\t\t} else {\n\n\t\t\thigh = i;\n\t\t\tbreak;\n\n\t\t\t// DONE\n\n\t\t}\n\n\t}\n\n\ti = high;\n\n\t//console.log('b' , i, low, high, Date.now()- time);\n\n\tif ( arcLengths[ i ] == targetArcLength ) {\n\n\t\tvar t = i / ( il - 1 );\n\t\treturn t;\n\n\t}\n\n\t// we could get finer grain at lengths, or use simple interpolatation between two points\n\n\tvar lengthBefore = arcLengths[ i ];\n    var lengthAfter = arcLengths[ i + 1 ];\n\n    var segmentLength = lengthAfter - lengthBefore;\n\n    // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n    // add that fractional amount to t\n\n    var t = ( i + segmentFraction ) / ( il -1 );\n\n\treturn t;\n\n};\n\n// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\n\nTHREE.Curve.prototype.getTangent = function( t ) {\n\n\tvar delta = 0.0001;\n\tvar t1 = t - delta;\n\tvar t2 = t + delta;\n\n\t// Capping in case of danger\n\n\tif ( t1 < 0 ) t1 = 0;\n\tif ( t2 > 1 ) t2 = 1;\n\n\tvar pt1 = this.getPoint( t1 );\n\tvar pt2 = this.getPoint( t2 );\n\n\tvar vec = pt2.clone().sub(pt1);\n\treturn vec.normalize();\n\n};\n\n\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\n\n\tvar t = this.getUtoTmapping( u );\n\treturn this.getTangent( t );\n\n};\n\n\n\n\n\n/**************************************************************\n *\tUtils\n **************************************************************/\n\nTHREE.Curve.Utils = {\n\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t},\n\n\t// Puay Bing, thanks for helping with this derivative!\n\n\ttangentCubicBezier: function (t, p0, p1, p2, p3 ) {\n\n\t\treturn - 3 * p0 * (1 - t) * (1 - t)  +\n\t\t\t3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +\n\t\t\t6 * t *  p2 * (1-t) - 3 * t * t * p2 +\n\t\t\t3 * t * t * p3;\n\n\t},\n\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t// To check if my formulas are correct\n\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\treturn h00 + h10 + h01 + h11;\n\n\t},\n\n\t// Catmull-Rom\n\n\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n};\n\n\n// TODO: Transformation for Curves?\n\n/**************************************************************\n *\t3D Curves\n **************************************************************/\n\n// A Factory method for creating new curve subclasses\n\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\n\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\n\tconstructor.prototype.getPoint = getPointFunc;\n\n\treturn constructor;\n\n};\n\n// File:src/extras/core/CurvePath.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nTHREE.CurvePath = function () {\n\n\tthis.curves = [];\n\tthis.bends = [];\n\t\n\tthis.autoClose = false; // Automatically closes the path\n};\n\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.CurvePath.prototype.add = function ( curve ) {\n\n\tthis.curves.push( curve );\n\n};\n\nTHREE.CurvePath.prototype.checkConnection = function() {\n\t// TODO\n\t// If the ending of curve is not connected to the starting\n\t// or the next curve, then, this is not a real path\n};\n\nTHREE.CurvePath.prototype.closePath = function() {\n\t// TODO Test\n\t// and verify for vector3 (needs to implement equals)\n\t// Add a line curve if start and end of lines are not connected\n\tvar startPoint = this.curves[0].getPoint(0);\n\tvar endPoint = this.curves[this.curves.length-1].getPoint(1);\n\t\n\tif (! startPoint.equals(endPoint)) {\n\t\tthis.curves.push( new THREE.LineCurve(endPoint, startPoint) );\n\t}\n\t\n};\n\n// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\n\nTHREE.CurvePath.prototype.getPoint = function( t ) {\n\n\tvar d = t * this.getLength();\n\tvar curveLengths = this.getCurveLengths();\n\tvar i = 0, diff, curve;\n\n\t// To think about boundaries points.\n\n\twhile ( i < curveLengths.length ) {\n\n\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\tdiff = curveLengths[ i ] - d;\n\t\t\tcurve = this.curves[ i ];\n\n\t\t\tvar u = 1 - diff / curve.getLength();\n\n\t\t\treturn curve.getPointAt( u );\n\n\t\t\tbreak;\n\t\t}\n\n\t\ti ++;\n\n\t}\n\n\treturn null;\n\n\t// loop where sum != 0, sum > d , sum+1 <d\n\n};\n\n/*\nTHREE.CurvePath.prototype.getTangent = function( t ) {\n};*/\n\n\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\n\nTHREE.CurvePath.prototype.getLength = function() {\n\n\tvar lens = this.getCurveLengths();\n\treturn lens[ lens.length - 1 ];\n\n};\n\n// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\n\nTHREE.CurvePath.prototype.getCurveLengths = function() {\n\n\t// We use cache values if curves and cache array are same length\n\n\tif ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\n\n\t\treturn this.cacheLengths;\n\n\t};\n\n\t// Get length of subsurve\n\t// Push sums into cached array\n\n\tvar lengths = [], sums = 0;\n\tvar i, il = this.curves.length;\n\n\tfor ( i = 0; i < il; i ++ ) {\n\n\t\tsums += this.curves[ i ].getLength();\n\t\tlengths.push( sums );\n\n\t}\n\n\tthis.cacheLengths = lengths;\n\n\treturn lengths;\n\n};\n\n\n\n// Returns min and max coordinates\n\nTHREE.CurvePath.prototype.getBoundingBox = function () {\n\n\tvar points = this.getPoints();\n\n\tvar maxX, maxY, maxZ;\n\tvar minX, minY, minZ;\n\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\n\tminX = minY = Number.POSITIVE_INFINITY;\n\n\tvar p, i, il, sum;\n\n\tvar v3 = points[0] instanceof THREE.Vector3;\n\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\n\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\n\n\t\tp = points[ i ];\n\n\t\tif ( p.x > maxX ) maxX = p.x;\n\t\telse if ( p.x < minX ) minX = p.x;\n\n\t\tif ( p.y > maxY ) maxY = p.y;\n\t\telse if ( p.y < minY ) minY = p.y;\n\n\t\tif ( v3 ) {\n\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\n\n\t\t}\n\n\t\tsum.add( p );\n\n\t}\n\n\tvar ret = {\n\n\t\tminX: minX,\n\t\tminY: minY,\n\t\tmaxX: maxX,\n\t\tmaxY: maxY\n\n\t};\n\n\tif ( v3 ) {\n\n\t\tret.maxZ = maxZ;\n\t\tret.minZ = minZ;\n\n\t}\n\n\treturn ret;\n\n};\n\n/**************************************************************\n *\tCreate Geometries Helpers\n **************************************************************/\n\n/// Generate geometry from path points (for Line or Points objects)\n\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\n\n\tvar pts = this.getPoints( divisions, true );\n\treturn this.createGeometry( pts );\n\n};\n\n// Generate geometry from equidistance sampling along the path\n\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\n\n\tvar pts = this.getSpacedPoints( divisions, true );\n\treturn this.createGeometry( pts );\n\n};\n\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\n\n\tvar geometry = new THREE.Geometry();\n\n\tfor ( var i = 0; i < points.length; i ++ ) {\n\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\n\n\t}\n\n\treturn geometry;\n\n};\n\n\n/**************************************************************\n *\tBend / Wrap Helper Methods\n **************************************************************/\n\n// Wrap path / Bend modifiers?\n\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\n\n\tthis.bends.push( bendpath );\n\n};\n\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\n\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\n\tvar i, il;\n\n\tif ( ! bends ) {\n\n\t\tbends = this.bends;\n\n\t}\n\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\n\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\n\n\t}\n\n\treturn oldPts;\n\n};\n\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\n\n\tvar oldPts = this.getSpacedPoints( segments );\n\n\tvar i, il;\n\n\tif ( ! bends ) {\n\n\t\tbends = this.bends;\n\n\t}\n\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\n\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\n\n\t}\n\n\treturn oldPts;\n\n};\n\n// This returns getPoints() bend/wrapped around the contour of a path.\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\n\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\n\n\tvar bounds = this.getBoundingBox();\n\n\tvar i, il, p, oldX, oldY, xNorm;\n\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\n\n\t\tp = oldPts[ i ];\n\n\t\toldX = p.x;\n\t\toldY = p.y;\n\n\t\txNorm = oldX / bounds.maxX;\n\n\t\t// If using actual distance, for length > path, requires line extrusions\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\n\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\n\n\t\t// check for out of bounds?\n\n\t\tvar pathPt = path.getPoint( xNorm );\n\t\tvar normal = path.getTangent( xNorm );\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\n\n\t\tp.x = pathPt.x + normal.x;\n\t\tp.y = pathPt.y + normal.y;\n\n\t}\n\n\treturn oldPts;\n\n};\n\n\n// File:src/extras/core/Gyroscope.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Gyroscope = function () {\n\n\tTHREE.Object3D.call( this );\n\n};\n\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.Gyroscope.prototype.updateMatrixWorld = ( function () {\n\n\tvar translationObject = new THREE.Vector3();\n\tvar quaternionObject = new THREE.Quaternion();\n\tvar scaleObject = new THREE.Vector3();\n\n\tvar translationWorld = new THREE.Vector3();\n\tvar quaternionWorld = new THREE.Quaternion();\n\tvar scaleWorld = new THREE.Vector3();\n\n\treturn function ( force ) {\n\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\n\n\t\t// update matrixWorld\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent ) {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\n\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\n\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t}\n\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t};\n\t\n}() );\n\n// File:src/extras/core/Path.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n *\n **/\n\nTHREE.Path = function ( points ) {\n\n\tTHREE.CurvePath.call(this);\n\n\tthis.actions = [];\n\n\tif ( points ) {\n\n\t\tthis.fromPoints( points );\n\n\t}\n\n};\n\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\n\nTHREE.PathActions = {\n\n\tMOVE_TO: 'moveTo',\n\tLINE_TO: 'lineTo',\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\n\tELLIPSE: 'ellipse'\n};\n\n// TODO Clean up PATH API\n\n// Create path using straight lines to connect all points\n// - vectors: array of Vector2\n\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\n\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\n\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\n\n\t};\n\n};\n\n// startPath() endPath()?\n\nTHREE.Path.prototype.moveTo = function ( x, y ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.lineTo = function ( x, y ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\n\tthis.curves.push( curve );\n\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\n\tthis.curves.push( curve );\n\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\n\tthis.curves.push( curve );\n\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\n\n};\n\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\n\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n//---\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\n\tArray.prototype.push.apply( npts, pts );\n\n\tvar curve = new THREE.SplineCurve( npts );\n\tthis.curves.push( curve );\n\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\n\n};\n\n// FUTURE: Change the API or follow canvas API?\n\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\n\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\tthis.absarc(aX + x0, aY + y0, aRadius,\n\t\taStartAngle, aEndAngle, aClockwise );\n\n };\n\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\n\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n };\n\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\n\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\n\tvar x0 = lastargs[ lastargs.length - 2 ];\n\tvar y0 = lastargs[ lastargs.length - 1 ];\n\n\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius,\n\t\taStartAngle, aEndAngle, aClockwise );\n\n };\n\n\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\n\n\tvar args = Array.prototype.slice.call( arguments );\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\tthis.curves.push( curve );\n\n\tvar lastPoint = curve.getPoint(1);\n\targs.push(lastPoint.x);\n\targs.push(lastPoint.y);\n\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\n\n };\n\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\n\n\tif ( ! divisions ) divisions = 40;\n\n\tvar points = [];\n\n\tfor ( var i = 0; i < divisions; i ++ ) {\n\n\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\n\n\t}\n\n\t// if ( closedPath ) {\n\t//\n\t// \tpoints.push( points[ 0 ] );\n\t//\n\t// }\n\n\treturn points;\n\n};\n\n/* Return an array of vectors based on contour of the path */\n\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\n\n\tif (this.useSpacedPoints) {\n\t\tconsole.log('tata');\n\t\treturn this.getSpacedPoints( divisions, closedPath );\n\t}\n\n\tdivisions = divisions || 12;\n\n\tvar points = [];\n\n\tvar i, il, item, action, args;\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\n\t\tlaste, j,\n\t\tt, tx, ty;\n\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\n\n\t\titem = this.actions[ i ];\n\n\t\taction = item.action;\n\t\targs = item.args;\n\n\t\tswitch( action ) {\n\n\t\tcase THREE.PathActions.MOVE_TO:\n\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n\t\t\tbreak;\n\n\t\tcase THREE.PathActions.LINE_TO:\n\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\n\n\t\t\tbreak;\n\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\n\n\t\t\tcpx  = args[ 2 ];\n\t\t\tcpy  = args[ 3 ];\n\n\t\t\tcpx1 = args[ 0 ];\n\t\t\tcpy1 = args[ 1 ];\n\n\t\t\tif ( points.length > 0 ) {\n\n\t\t\t\tlaste = points[ points.length - 1 ];\n\n\t\t\t\tcpx0 = laste.x;\n\t\t\t\tcpy0 = laste.y;\n\n\t\t\t} else {\n\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\n\n\t\t\t}\n\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\n\n\t\t\t\tt = j / divisions;\n\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\n\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\n\n\t\t\tcpx  = args[ 4 ];\n\t\t\tcpy  = args[ 5 ];\n\n\t\t\tcpx1 = args[ 0 ];\n\t\t\tcpy1 = args[ 1 ];\n\n\t\t\tcpx2 = args[ 2 ];\n\t\t\tcpy2 = args[ 3 ];\n\n\t\t\tif ( points.length > 0 ) {\n\n\t\t\t\tlaste = points[ points.length - 1 ];\n\n\t\t\t\tcpx0 = laste.x;\n\t\t\t\tcpy0 = laste.y;\n\n\t\t\t} else {\n\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\n\n\t\t\t}\n\n\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\n\n\t\t\t\tt = j / divisions;\n\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase THREE.PathActions.CSPLINE_THRU:\n\n\t\t\tlaste = this.actions[ i - 1 ].args;\n\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\n\t\t\tvar spts = [ last ];\n\n\t\t\tvar n = divisions * args[ 0 ].length;\n\n\t\t\tspts = spts.concat( args[ 0 ] );\n\n\t\t\tvar spline = new THREE.SplineCurve( spts );\n\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\n\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) ) ;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase THREE.PathActions.ARC:\n\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\n\t\t\t\taRadius = args[ 2 ],\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\n\t\t\t\taClockwise = !! args[ 5 ];\n\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\n\t\t\tvar angle;\n\t\t\tvar tdivisions = divisions * 2;\n\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\n\n\t\t\t\tt = j / tdivisions;\n\n\t\t\t\tif ( ! aClockwise ) {\n\n\t\t\t\t\tt = 1 - t;\n\n\t\t\t\t}\n\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\n\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\n\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t}\n\n\t\t\t//console.log(points);\n\n\t\t  break;\n\t\t  \n\t\tcase THREE.PathActions.ELLIPSE:\n\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\n\t\t\t\txRadius = args[ 2 ],\n\t\t\t\tyRadius = args[ 3 ],\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\n\t\t\t\taClockwise = !! args[ 6 ];\n\n\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\n\t\t\tvar angle;\n\t\t\tvar tdivisions = divisions * 2;\n\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\n\n\t\t\t\tt = j / tdivisions;\n\n\t\t\t\tif ( ! aClockwise ) {\n\n\t\t\t\t\tt = 1 - t;\n\n\t\t\t\t}\n\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\n\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\n\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\n\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\n\n\t\t\t}\n\n\t\t\t//console.log(points);\n\n\t\t  break;\n\n\t\t} // end switch\n\n\t}\n\n\n\n\t// Normalize to remove the closing point by default.\n\tvar lastPoint = points[ points.length - 1];\n\tvar EPSILON = 0.0000000001;\n\tif ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\n\t\t\t Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\n\t\tpoints.splice( points.length - 1, 1);\n\tif ( closedPath ) {\n\n\t\tpoints.push( points[ 0 ] );\n\n\t}\n\n\treturn points;\n\n};\n\n//\n// Breaks path into shapes\n//\n//\tAssumptions (if parameter isCCW==true the opposite holds):\n//\t- solid shapes are defined clockwise (CW)\n//\t- holes are defined counterclockwise (CCW)\n//\n//\tIf parameter noHoles==true:\n//  - all subPaths are regarded as solid shapes\n//  - definition order CW/CCW has no relevance\n//\n\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\n\n\tfunction extractSubpaths( inActions ) {\n\n\t\tvar i, il, item, action, args;\n\n\t\tvar subPaths = [], lastPath = new THREE.Path();\n\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\n\n\t\t\titem = inActions[ i ];\n\n\t\t\targs = item.args;\n\t\t\taction = item.action;\n\n\t\t\tif ( action == THREE.PathActions.MOVE_TO ) {\n\n\t\t\t\tif ( lastPath.actions.length != 0 ) {\n\n\t\t\t\t\tsubPaths.push( lastPath );\n\t\t\t\t\tlastPath = new THREE.Path();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlastPath[ action ].apply( lastPath, args );\n\n\t\t}\n\n\t\tif ( lastPath.actions.length != 0 ) {\n\n\t\t\tsubPaths.push( lastPath );\n\n\t\t}\n\n\t\t// console.log(subPaths);\n\n\t\treturn\tsubPaths;\n\t}\n\n\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\tvar shapes = [];\n\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\n\n\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\tvar tmpShape = new THREE.Shape();\n\t\t\ttmpShape.actions = tmpPath.actions;\n\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\tshapes.push( tmpShape );\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\t};\n\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\t\tvar EPSILON = 0.0000000001;\n\n\t\tvar polyLen = inPolygon.length;\n\n\t\t// inPt on polygon contour => immediate success    or\n\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t//  with the horizontal line through inPt, left of inPt\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\tvar inside = false;\n\t\tfor( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\tif ( Math.abs(edgeDy) > EPSILON ) {\t\t\t// not parallel\n\t\t\t\tif ( edgeDy < 0 ) {\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\t\t\t\t}\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\tif ( inPt.y == edgeLowPt.y ) {\n\t\t\t\t\tif ( inPt.x == edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t} else {\n\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\tif ( perpEdge == 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\t\t\t\t}\n\t\t\t} else {\t\t// parallel or colinear\n\t\t\t\tif ( inPt.y != edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t// egde lies on the same horizontal line as inPt\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t// continue;\n\t\t\t}\n\t\t}\n\n\t\treturn\tinside;\n\t}\n\n\n\tvar subPaths = extractSubpaths( this.actions );\n\tif ( subPaths.length == 0 ) return [];\n\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\tif ( subPaths.length == 1) {\n\n\t\ttmpPath = subPaths[0];\n\t\ttmpShape = new THREE.Shape();\n\t\ttmpShape.actions = tmpPath.actions;\n\t\ttmpShape.curves = tmpPath.curves;\n\t\tshapes.push( tmpShape );\n\t\treturn shapes;\n\n\t}\n\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t// console.log(\"Holes first\", holesFirst);\n\t\n\tvar betterShapeHoles = [];\n\tvar newShapes = [];\n\tvar newShapeHoles = [];\n\tvar mainIdx = 0;\n\tvar tmpPoints;\n\n\tnewShapes[mainIdx] = undefined;\n\tnewShapeHoles[mainIdx] = [];\n\n\tvar i, il;\n\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\n\n\t\ttmpPath = subPaths[ i ];\n\t\ttmpPoints = tmpPath.getPoints();\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\n\t\tsolid = isCCW ? ! solid : solid;\n\n\t\tif ( solid ) {\n\n\t\t\tif ( (! holesFirst ) && ( newShapes[mainIdx] ) )\tmainIdx ++;\n\n\t\t\tnewShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\n\t\t\tnewShapes[mainIdx].s.actions = tmpPath.actions;\n\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\n\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\t//console.log('cw', i);\n\n\t\t} else {\n\n\t\t\tnewShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\n\n\t\t\t//console.log('ccw', i);\n\n\t\t}\n\n\t}\n\n\t// only Holes? -> probably all Shapes with wrong orientation\n\tif ( ! newShapes[0] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\tif ( newShapes.length > 1 ) {\n\t\tvar ambigious = false;\n\t\tvar toChange = [];\n\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t}\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\t\t\tvar sh = newShapes[sIdx];\n\t\t\tvar sho = newShapeHoles[sIdx];\n\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\t\t\t\tvar ho = sho[hIdx];\n\t\t\t\tvar hole_unassigned = true;\n\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\n\t\t\t\t\t\tif ( sIdx != s2Idx )\t\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push( ho );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tambigious = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\n\t\t\t}\n\t\t}\n\t\t// console.log(\"ambigious: \", ambigious);\n\t\tif ( toChange.length > 0 ) {\n\t\t\t// console.log(\"to change: \", toChange);\n\t\t\tif (! ambigious)\tnewShapeHoles = betterShapeHoles;\n\t\t}\n\t}\n\n\tvar tmpHoles, j, jl;\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\n\t\ttmpShape = newShapes[i].s;\n\t\tshapes.push( tmpShape );\n\t\ttmpHoles = newShapeHoles[i];\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\t\t\ttmpShape.holes.push( tmpHoles[j].h );\n\t\t}\n\t}\n\n\t//console.log(\"shape\", shapes);\n\n\treturn shapes;\n\n};\n\n// File:src/extras/core/Shape.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nTHREE.Shape = function () {\n\n\tTHREE.Path.apply( this, arguments );\n\tthis.holes = [];\n\n};\n\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\n\n// Convenience method to return ExtrudeGeometry\n\nTHREE.Shape.prototype.extrude = function ( options ) {\n\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\n\treturn extruded;\n\n};\n\n// Convenience method to return ShapeGeometry\n\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\n\n\tvar geometry = new THREE.ShapeGeometry( this, options );\n\treturn geometry;\n\n};\n\n// Get points of holes\n\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\n\n\tvar i, il = this.holes.length, holesPts = [];\n\n\tfor ( i = 0; i < il; i ++ ) {\n\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\n\n\t}\n\n\treturn holesPts;\n\n};\n\n// Get points of holes (spaced by regular distance)\n\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\n\n\tvar i, il = this.holes.length, holesPts = [];\n\n\tfor ( i = 0; i < il; i ++ ) {\n\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\n\n\t}\n\n\treturn holesPts;\n\n};\n\n\n// Get points of shape and holes (keypoints based on segments parameter)\n\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\n\n\treturn {\n\n\t\tshape: this.getTransformedPoints( divisions ),\n\t\tholes: this.getPointsHoles( divisions )\n\n\t};\n\n};\n\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\n\n\tif (this.useSpacedPoints) {\n\t\treturn this.extractAllSpacedPoints(divisions);\n\t}\n\n\treturn this.extractAllPoints(divisions);\n\n};\n\n//\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\n//\n// \treturn {\n//\n// \t\tshape: this.transform( bend, divisions ),\n// \t\tholes: this.getPointsHoles( divisions, bend )\n//\n// \t};\n//\n// };\n\n// Get points of shape and holes (spaced by regular distance)\n\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\n\n\treturn {\n\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\n\t\tholes: this.getSpacedPointsHoles( divisions )\n\n\t};\n\n};\n\n/**************************************************************\n *\tUtils\n **************************************************************/\n\nTHREE.Shape.Utils = {\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\t\t\t// inOtherPt needs to be colinear to the inSegment\n\t\t\tif ( inSegPt1.x != inSegPt2.x ) {\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\t\t\t\t} else {\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\t\t\t\t} else {\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\t\t\tvar EPSILON = 0.0000000001;\n\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\tif ( Math.abs(limit) > EPSILON ) {\t\t\t// not parallel\n\n\t\t\t\tvar perpSeg2;\n\t\t\t\tif ( limit > 0 ) {\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\t\t\t\t} else {\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\t\t\t\t}\n\n\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\tif ( perpSeg2 == 0 ) {\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\n\t\t\t\t}\n\t\t\t\tif ( perpSeg2 == limit ) {\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\n\t\t\t\t\treturn  [ inSeg1Pt2 ];\n\t\t\t\t}\n\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\tif ( perpSeg1 == 0 )\t\treturn  [ inSeg2Pt1 ];\n\t\t\t\tif ( perpSeg1 == limit )\treturn  [ inSeg2Pt2 ];\n\n\t\t\t\t// return real intersection point\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t} else {\t\t// parallel or colinear\n\t\t\t\tif ( ( perpSeg1 != 0 ) ||\n\t\t\t\t\t ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t// they are collinear or degenerate\n\t\t\t\tvar seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );\t// segment1 ist just a point?\n\t\t\t\tvar seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );\t// segment2 ist just a point?\n\t\t\t\t// both segments are points\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\t\t\t\t\tif ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\n\t\t\t\t\t\t (inSeg1Pt1.y != inSeg2Pt1.y) )\t\treturn [];   \t// they are distinct  points\n\t\t\t\t\treturn  [ inSeg1Pt1 ];                 \t\t\t\t\t// they are the same point\n\t\t\t\t}\n\t\t\t\t// segment#1  is a single point\n\t\t\t\tif ( seg1Pt ) {\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\treturn  [ inSeg1Pt1 ];\n\t\t\t\t}\n\t\t\t\t// segment#2  is a single point\n\t\t\t\tif ( seg2Pt ) {\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\treturn  [ inSeg2Pt1 ];\n\t\t\t\t}\n\n\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\tif (seg1dx != 0) {\t\t// the segments are NOT on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\t\t\t\t\t}\n\t\t\t\t} else {\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\tif ( seg1maxVal == seg2minVal )\t{\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg2min ];\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\t\t\t\t} else {\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\tif ( seg1minVal == seg2maxVal )\t{\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg1min ];\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\t\t\t// The order of legs is important\n\n\t\t\tvar EPSILON = 0.0000000001;\n\n\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\tif ( Math.abs(from2toAngle) > EPSILON ) {\t\t\t// angle != 180 deg.\n\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\tif ( from2toAngle > 0 ) {\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\t\t\t\t} else {\t\t\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\t\t\t\t}\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\treturn\t( from2otherAngle > 0 );\n\t\t\t}\n\t\t}\n\n\n\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\tvar hole;\n\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\n\t\t\t\tif (! insideAngle ) {\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\treturn\tfalse;\n\t\t\t\t}\n\n\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\n\t\t\t\tif (! insideAngle ) {\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\treturn\tfalse;\n\t\t\t\t}\n\n\t\t\t\treturn\ttrue;\n\t\t\t}\n\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\t\t\t\t// checks for intersections with shape edges\n\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\t\t\t\t\tnextIdx = sIdx+1; nextIdx %= shape.length;\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\t\t\t\t}\n\n\t\t\t\treturn\tfalse;\n\t\t\t}\n\n\t\t\tvar indepHoles = [];\n\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\t\t\t\t// checks for intersections with hole edges\n\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\t\t\t\t\tchkHole = holes[indepHoles[ihIdx]];\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\t\t\t\t\t\tnextIdx = hIdx+1; nextIdx %= chkHole.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn\tfalse;\n\t\t\t}\n\n\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\tshapePt, holePt,\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tindepHoles.push( h );\n\n\t\t\t}\n\n\t\t\tvar minShapeIndex = 0;\n\t\t\tvar counter = indepHoles.length * 2;\n\t\t\twhile ( indepHoles.length > 0 ) {\n\t\t\t\tcounter --;\n\t\t\t\tif ( counter < 0 ) {\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t// which can be connected without intersections\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\t\t\t\t\t\tholeIdx = indepHoles[h];\n\n\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\tif ( failedCuts[cutKey] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\thole = holes[holeIdx];\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\tif (! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\tindepHoles.splice(h,1);\n\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex+1 );\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex+1 );\n\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\tfailedCuts[cutKey] = true;\t\t\t// remember failure\n\t\t\t\t\t}\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shape; \t\t\t/* shape with no holes */\n\t\t}\n\n\n\t\tvar i, il, f, face,\n\t\t\tkey, index,\n\t\t\tallPointsMap = {};\n\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\tvar allpoints = contour.concat();\n\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tArray.prototype.push.apply( allpoints, holes[h] );\n\n\t\t}\n\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t// prepare all points map\n\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\tconsole.log( \"Duplicate point\", key );\n\n\t\t\t}\n\n\t\t\tallPointsMap[ key ] = i;\n\n\t\t}\n\n\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t// check all face vertices against all points map\n\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\tface = triangles[ i ];\n\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn triangles.concat();\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\n\n\t},\n\n\t// Bezier Curves formulas obtained from\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t// Quad Bezier Functions\n\n\tb2p0: function ( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t},\n\n\tb2p1: function ( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t},\n\n\tb2p2: function ( t, p ) {\n\n\t\treturn t * t * p;\n\n\t},\n\n\tb2: function ( t, p0, p1, p2 ) {\n\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\n\n\t},\n\n\t// Cubic Bezier Functions\n\n\tb3p0: function ( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t},\n\n\tb3p1: function ( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t},\n\n\tb3p2: function ( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * t * t * p;\n\n\t},\n\n\tb3p3: function ( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t},\n\n\tb3: function ( t, p0, p1, p2, p3 ) {\n\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\n\n\t}\n\n};\n\n\n// File:src/extras/curves/LineCurve.js\n\n/**************************************************************\n *\tLine\n **************************************************************/\n\nTHREE.LineCurve = function ( v1, v2 ) {\n\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n};\n\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\n\n\tvar point = this.v2.clone().sub(this.v1);\n\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\n\n\treturn this.getPoint( u );\n\n};\n\nTHREE.LineCurve.prototype.getTangent = function( t ) {\n\n\tvar tangent = this.v2.clone().sub(this.v1);\n\n\treturn tangent.normalize();\n\n};\n\n// File:src/extras/curves/QuadraticBezierCurve.js\n\n/**************************************************************\n *\tQuadratic Bezier curve\n **************************************************************/\n\n\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\n};\n\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\n\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar vector = new THREE.Vector2();\n\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\n\n\treturn vector;\n\n};\n\n\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\tvar vector = new THREE.Vector2();\n\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\n\n\t// returns unit vector\n\n\treturn vector.normalize();\n\n};\n\n// File:src/extras/curves/CubicBezierCurve.js\n\n/**************************************************************\n *\tCubic Bezier curve\n **************************************************************/\n\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\n\n\tthis.v0 = v0;\n\tthis.v1 = v1;\n\tthis.v2 = v2;\n\tthis.v3 = v3;\n\n};\n\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\tvar tx, ty;\n\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n\n\treturn new THREE.Vector2( tx, ty );\n\n};\n\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\n\n\tvar tx, ty;\n\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n\n\tvar tangent = new THREE.Vector2( tx, ty );\n\ttangent.normalize();\n\n\treturn tangent;\n\n};\n\n// File:src/extras/curves/SplineCurve.js\n\n/**************************************************************\n *\tSpline curve\n **************************************************************/\n\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\n\n\tthis.points = ( points == undefined ) ? [] : points;\n\n};\n\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\n\n\tvar points = this.points;\n\tvar point = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( point );\n\tvar weight = point - intPoint;\n\n\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ]\n\tvar point1 = points[ intPoint ]\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length -1 : intPoint + 1 ]\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length -1 : intPoint + 2 ]\n\n\tvar vector = new THREE.Vector2();\n\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\n\n\treturn vector;\n\n};\n\n// File:src/extras/curves/EllipseCurve.js\n\n/**************************************************************\n *\tEllipse curve\n **************************************************************/\n\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tthis.aX = aX;\n\tthis.aY = aY;\n\n\tthis.xRadius = xRadius;\n\tthis.yRadius = yRadius;\n\n\tthis.aStartAngle = aStartAngle;\n\tthis.aEndAngle = aEndAngle;\n\n\tthis.aClockwise = aClockwise;\n\n};\n\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\n\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\n\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\n\n\tvar angle;\n\n\tif ( this.aClockwise === true ) {\n\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\n\n\t} else {\n\n\t\tangle = this.aStartAngle + t * deltaAngle;\n\n\t}\n\t\n\tvar vector = new THREE.Vector2();\n\n\tvector.x = this.aX + this.xRadius * Math.cos( angle );\n\tvector.y = this.aY + this.yRadius * Math.sin( angle );\n\n\treturn vector;\n\n};\n\n// File:src/extras/curves/ArcCurve.js\n\n/**************************************************************\n *\tArc curve\n **************************************************************/\n\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n};\n\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\n\n// File:src/extras/curves/LineCurve3.js\n\n/**************************************************************\n *\tLine3D\n **************************************************************/\n\nTHREE.LineCurve3 = THREE.Curve.create(\n\n\tfunction ( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\tvector.multiplyScalar( t );\n\t\tvector.add( this.v1 );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/curves/QuadraticBezierCurve3.js\n\n/**************************************************************\n *\tQuadratic Bezier 3D curve\n **************************************************************/\n\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\n\n\tfunction ( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/curves/CubicBezierCurve3.js\n\n/**************************************************************\n *\tCubic Bezier 3D curve\n **************************************************************/\n\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\n\n\tfunction ( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/curves/SplineCurve3.js\n\n/**************************************************************\n *\tSpline 3D curve\n **************************************************************/\n\n\nTHREE.SplineCurve3 = THREE.Curve.create(\n\n\tfunction ( points /* array of Vector3 */) {\n\n\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/curves/ClosedSplineCurve3.js\n\n/**************************************************************\n *\tClosed Spline 3D curve\n **************************************************************/\n\n\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\n\n\tfunction ( points /* array of Vector3 */) {\n\n\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t},\n\n\tfunction ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\n\n\t\treturn vector;\n\n\t}\n\n);\n\n// File:src/extras/animation/AnimationHandler.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n */\n\nTHREE.AnimationHandler = {\n\n\tLINEAR: 0,\n\tCATMULLROM: 1,\n\tCATMULLROM_FORWARD: 2,\n\n\t//\n\n\tadd: function () { console.warn( 'THREE.AnimationHandler.add() has been deprecated.' ); },\n\tget: function () { console.warn( 'THREE.AnimationHandler.get() has been deprecated.' ); },\n\tremove: function () { console.warn( 'THREE.AnimationHandler.remove() has been deprecated.' ); },\n\n\t//\n\n\tanimations: [],\n\n\tinit: function ( data ) {\n\n\t\tif ( data.initialized === true ) return;\n\n\t\t// loop through all keys\n\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t// remove minus times\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\n\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\n\n\t\t\t\t}\n\n\t\t\t\t// create quaternions\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\n\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// prepare morph target keys\n\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\n\n\t\t\t\t// get all used\n\n\t\t\t\tvar usedMorphTargets = {};\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\n\n\n\t\t\t\t// set all used on all frames\n\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\t\tvar influences = {};\n\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\n\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\n\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// remove all keys that are on the same time\n\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\n\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\n\t\t\t\t\tk --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// set index\n\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\n\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdata.initialized = true;\n\n\t\treturn data;\n\n\t},\n\n\tparse: function ( root ) {\n\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\n\n\t\t\thierarchy.push( root );\n\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\n\n\t\t};\n\n\t\t// setup hierarchy\n\n\t\tvar hierarchy = [];\n\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\n\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\n\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparseRecurseHierarchy( root, hierarchy );\n\n\t\t}\n\n\t\treturn hierarchy;\n\n\t},\n\n\tplay: function ( animation ) {\n\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\n\n\t\t\tthis.animations.push( animation );\n\n\t\t}\n\n\t},\n\n\tstop: function ( animation ) {\n\n\t\tvar index = this.animations.indexOf( animation );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.animations.splice( index, 1 );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( deltaTimeMS ) {\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].resetBlendWeights( );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\n\n\t\t}\n\n\t}\n\n};\n\n// File:src/extras/animation/Animation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Animation = function ( root, data ) {\n\n\tthis.root = root;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\n\n\tthis.currentTime = 0;\n\tthis.timeScale = 1;\n\n\tthis.isPlaying = false;\n\tthis.loop = true;\n\tthis.weight = 0;\n\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\n\n};\n\n\nTHREE.Animation.prototype.keyTypes = [ \"pos\", \"rot\", \"scl\" ];\n\n\nTHREE.Animation.prototype.play = function ( startTime, weight ) {\n\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\tthis.weight = weight !== undefined ? weight: 1;\n\n\tthis.isPlaying = true;\n\n\tthis.reset();\n\n\tTHREE.AnimationHandler.play( this );\n\n};\n\n\nTHREE.Animation.prototype.stop = function() {\n\n\tthis.isPlaying = false;\n\n\tTHREE.AnimationHandler.stop( this );\n\n};\n\nTHREE.Animation.prototype.reset = function () {\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar object = this.hierarchy[ h ];\n\n\t\tobject.matrixAutoUpdate = true;\n\n\t\tif ( object.animationCache === undefined ) {\n\n\t\t\tobject.animationCache = {\n\t\t\t\tanimations: {},\n\t\t\t\tblending: {\n\t\t\t\t\tpositionWeight: 0.0,\n\t\t\t\t\tquaternionWeight: 0.0,\n\t\t\t\t\tscaleWeight: 0.0\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif ( object.animationCache.animations[this.data.name] === undefined ) {\n\n\t\t\tobject.animationCache.animations[this.data.name] = {};\n\t\t\tobject.animationCache.animations[this.data.name].prevKey = { pos: 0, rot: 0, scl: 0 };\n\t\t\tobject.animationCache.animations[this.data.name].nextKey = { pos: 0, rot: 0, scl: 0 };\n\t\t\tobject.animationCache.animations[this.data.name].originalMatrix = object.matrix;\n\n\t\t}\n\n\t\tvar animationCache = object.animationCache.animations[this.data.name];\n\n\t\t// Get keys to match our current time\n\n\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\tvar type = this.keyTypes[ t ];\n\n\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\tprevKey = nextKey;\n\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t}\n\n\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.Animation.prototype.resetBlendWeights = function () {\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar object = this.hierarchy[ h ];\n\n\t\tif ( object.animationCache !== undefined ) {\n\n\t\t\tobject.animationCache.blending.positionWeight = 0.0;\n\t\t\tobject.animationCache.blending.quaternionWeight = 0.0;\n\t\t\tobject.animationCache.blending.scaleWeight = 0.0;\n\n\t\t}\n\n\t}\n\n};\n\nTHREE.Animation.prototype.update = (function(){\n\n\tvar points = [];\n\tvar target = new THREE.Vector3();\n\tvar newVector = new THREE.Vector3();\n\tvar newQuat = new THREE.Quaternion();\n\n\t// Catmull-Rom spline\n\n\tvar interpolateCatmullRom = function ( points, scale ) {\n\n\t\tvar c = [], v3 = [],\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tpoint = ( points.length - 1 ) * scale;\n\t\tintPoint = Math.floor( point );\n\t\tweight = point - intPoint;\n\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\tc[ 1 ] = intPoint;\n\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\n\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\n\n\t\tpa = points[ c[ 0 ] ];\n\t\tpb = points[ c[ 1 ] ];\n\t\tpc = points[ c[ 2 ] ];\n\t\tpd = points[ c[ 3 ] ];\n\n\t\tw2 = weight * weight;\n\t\tw3 = weight * w2;\n\n\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\n\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\n\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\n\n\t\treturn v3;\n\n\t};\n\n\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t};\n\n\treturn function ( delta ) {\n\n\t\tif ( this.isPlaying === false ) return;\n\n\t\tthis.currentTime += delta * this.timeScale;\n\n\t\tif ( this.weight === 0 )\n\t\t\treturn;\n\n\t\t//\n\n\t\tvar duration = this.data.length;\n\n\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\n\n\t\t\tif ( this.loop ) {\n\n\t\t\t\tthis.currentTime %= duration;\n\n\t\t\t\tif ( this.currentTime < 0 )\n\t\t\t\t\tthis.currentTime += duration;\n\n\t\t\t\tthis.reset();\n\n\t\t\t} else {\n\n\t\t\t\tthis.stop();\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\t\tvar object = this.hierarchy[ h ];\n\t\t\tvar animationCache = object.animationCache.animations[this.data.name];\n\t\t\tvar blending = object.animationCache.blending;\n\n\t\t\t// loop through pos/rot/scl\n\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\n\n\t\t\t\t// get keys\n\n\t\t\t\tvar type    = this.keyTypes[ t ];\n\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\n\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\n\n\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\n\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\n\n\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\n\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\n\n\t\t\t\t}\n\n\t\t\t\tobject.matrixAutoUpdate = true;\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\n\n\t\t\t\tvar prevXYZ = prevKey[ type ];\n\t\t\t\tvar nextXYZ = nextKey[ type ];\n\n\t\t\t\tif ( scale < 0 ) scale = 0;\n\t\t\t\tif ( scale > 1 ) scale = 1;\n\n\t\t\t\t// interpolate\n\n\t\t\t\tif ( type === \"pos\" ) {\n\n\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\n\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\t\t// blend\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\n\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\n\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\n\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\n\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\n\n\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\n\n\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\n\t\t\t\t\t\tblending.positionWeight += this.weight;\n\n\t\t\t\t\t\t// blend\n\n\t\t\t\t\t\tvar vector = object.position;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\n\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\n\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\n\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\n\n\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\n\t\t\t\t\t\t\ttarget.sub( vector );\n\t\t\t\t\t\t\ttarget.y = 0;\n\t\t\t\t\t\t\ttarget.normalize();\n\n\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\n\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( type === \"rot\" ) {\n\n\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\n\n\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\n\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\n\n\t\t\t\t\t\tobject.quaternion.copy(newQuat);\n\t\t\t\t\t\tblending.quaternionWeight = this.weight;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\n\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\n\t\t\t\t\t\tblending.quaternionWeight += this.weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( type === \"scl\" ) {\n\n\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\n\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\n\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\n\n\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\n\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\n\t\t\t\t\tblending.scaleWeight += this.weight;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n})();\n\n\n\n\n\n// Get next key with\n\nTHREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {\n\n\tvar keys = this.data.hierarchy[ h ].keys;\n\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\n\n\t} else {\n\n\t\tkey = key % keys.length;\n\n\t}\n\n\tfor ( ; key < keys.length; key ++ ) {\n\n\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\treturn keys[ key ];\n\n\t\t}\n\n\t}\n\n\treturn this.data.hierarchy[ h ].keys[ 0 ];\n\n};\n\n// Get previous key with\n\nTHREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {\n\n\tvar keys = this.data.hierarchy[ h ].keys;\n\n\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\n\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\n\n\t\tkey = key > 0 ? key : 0;\n\n\t} else {\n\n\t\tkey = key >= 0 ? key : key + keys.length;\n\n\t}\n\n\n\tfor ( ; key >= 0; key -- ) {\n\n\t\tif ( keys[ key ][ type ] !== undefined ) {\n\n\t\t\treturn keys[ key ];\n\n\t\t}\n\n\t}\n\n\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\n\n};\n\n// File:src/extras/animation/KeyFrameAnimation.js\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author khang duong\n * @author erik kitson\n */\n\nTHREE.KeyFrameAnimation = function ( data ) {\n\n\tthis.root = data.node;\n\tthis.data = THREE.AnimationHandler.init( data );\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\n\tthis.currentTime = 0;\n\tthis.timeScale = 0.001;\n\tthis.isPlaying = false;\n\tthis.isPaused = true;\n\tthis.loop = true;\n\n\t// initialize to first keyframes\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar keys = this.data.hierarchy[h].keys,\n\t\t\tsids = this.data.hierarchy[h].sids,\n\t\t\tobj = this.hierarchy[h];\n\n\t\tif ( keys.length && sids ) {\n\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\n\n\t\t\t\tvar sid = sids[ s ],\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\n\n\t\t\t\tif ( next ) {\n\n\t\t\t\t\tnext.apply( sid );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.matrixAutoUpdate = false;\n\t\t\tthis.data.hierarchy[h].node.updateMatrix();\n\t\t\tobj.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t}\n\n};\n\n\nTHREE.KeyFrameAnimation.prototype.play = function ( startTime ) {\n\n\tthis.currentTime = startTime !== undefined ? startTime : 0;\n\n\tif ( this.isPlaying === false ) {\n\n\t\tthis.isPlaying = true;\n\n\t\t// reset key cache\n\n\t\tvar h, hl = this.hierarchy.length,\n\t\t\tobject,\n\t\t\tnode;\n\n\t\tfor ( h = 0; h < hl; h ++ ) {\n\n\t\t\tobject = this.hierarchy[ h ];\n\t\t\tnode = this.data.hierarchy[ h ];\n\n\t\t\tif ( node.animationCache === undefined ) {\n\n\t\t\t\tnode.animationCache = {};\n\t\t\t\tnode.animationCache.prevKey = null;\n\t\t\t\tnode.animationCache.nextKey = null;\n\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\n\n\t\t\t}\n\n\t\t\tvar keys = this.data.hierarchy[h].keys;\n\n\t\t\tif (keys.length) {\n\n\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\n\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\n\n\t\t\t\tthis.startTime = Math.min( keys[0].time, this.startTime );\n\t\t\t\tthis.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.update( 0 );\n\n\t}\n\n\tthis.isPaused = false;\n\n\tTHREE.AnimationHandler.play( this );\n\n};\n\n\nTHREE.KeyFrameAnimation.prototype.stop = function() {\n\n\tthis.isPlaying = false;\n\tthis.isPaused  = false;\n\n\tTHREE.AnimationHandler.stop( this );\n\n\t// reset JIT matrix and remove cache\n\n\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\n\t\t\n\t\tvar obj = this.hierarchy[ h ];\n\t\tvar node = this.data.hierarchy[ h ];\n\n\t\tif ( node.animationCache !== undefined ) {\n\n\t\t\tvar original = node.animationCache.originalMatrix;\n\n\t\t\toriginal.copy( obj.matrix );\n\t\t\tobj.matrix = original;\n\n\t\t\tdelete node.animationCache;\n\n\t\t}\n\n\t}\n\n};\n\n\n// Update\n\nTHREE.KeyFrameAnimation.prototype.update = function ( delta ) {\n\n\tif ( this.isPlaying === false ) return;\n\n\tthis.currentTime += delta * this.timeScale;\n\n\t//\n\n\tvar duration = this.data.length;\n\n\tif ( this.loop === true && this.currentTime > duration ) {\n\n\t\tthis.currentTime %= duration;\n\n\t}\n\n\tthis.currentTime = Math.min( this.currentTime, duration );\n\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\n\n\t\tvar object = this.hierarchy[ h ];\n\t\tvar node = this.data.hierarchy[ h ];\n\n\t\tvar keys = node.keys,\n\t\t\tanimationCache = node.animationCache;\n\n\n\t\tif ( keys.length ) {\n\n\t\t\tvar prevKey = animationCache.prevKey;\n\t\t\tvar nextKey = animationCache.nextKey;\n\n\t\t\tif ( nextKey.time <= this.currentTime ) {\n\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\n\n\t\t\t\t\tprevKey = nextKey;\n\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tanimationCache.prevKey = prevKey;\n\t\t\t\tanimationCache.nextKey = nextKey;\n\n\t\t\t}\n\n\t\t\tif ( nextKey.time >= this.currentTime ) {\n\n\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\n\n\t\t\t}\n\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\n\t\t\tobject.matrixWorldNeedsUpdate = true;\n\n\t\t}\n\n\t}\n\n};\n\n// Get next key with\n\nTHREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {\n\n\tvar keys = this.data.hierarchy[ h ].keys;\n\tkey = key % keys.length;\n\n\tfor ( ; key < keys.length; key ++ ) {\n\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\treturn keys[ key ];\n\n\t\t}\n\n\t}\n\n\treturn keys[ 0 ];\n\n};\n\n// Get previous key with\n\nTHREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {\n\n\tvar keys = this.data.hierarchy[ h ].keys;\n\tkey = key >= 0 ? key : key + keys.length;\n\n\tfor ( ; key >= 0; key -- ) {\n\n\t\tif ( keys[ key ].hasTarget( sid ) ) {\n\n\t\t\treturn keys[ key ];\n\n\t\t}\n\n\t}\n\n\treturn keys[ keys.length - 1 ];\n\n};\n\n// File:src/extras/animation/MorphAnimation.js\n\n/**\n * @author mrdoob / http://mrdoob.com\n */\n\nTHREE.MorphAnimation = function ( mesh ) {\n\n\tthis.mesh = mesh;\n\tthis.frames = mesh.morphTargetInfluences.length;\n\tthis.currentTime = 0;\n\tthis.duration = 1000;\n\tthis.loop = true;\n\n\tthis.isPlaying = false;\n\n};\n\nTHREE.MorphAnimation.prototype = {\n\n\tplay: function () {\n\n\t\tthis.isPlaying = true;\n\n\t},\n\n\tpause: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar lastFrame = 0;\n\t\tvar currentFrame = 0;\n\n\t\treturn function ( delta ) {\n\n\t\t\tif ( this.isPlaying === false ) return;\n\n\t\t\tthis.currentTime += delta;\n\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\n\n\t\t\t\tthis.currentTime %= this.duration;\n\n\t\t\t}\n\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\n\n\t\t\tvar interpolation = this.duration / this.frames;\n\t\t\tvar frame = Math.floor( this.currentTime / interpolation );\n\n\t\t\tif ( frame != currentFrame ) {\n\n\t\t\t\tthis.mesh.morphTargetInfluences[ lastFrame ] = 0;\n\t\t\t\tthis.mesh.morphTargetInfluences[ currentFrame ] = 1;\n\t\t\t\tthis.mesh.morphTargetInfluences[ frame ] = 0;\n\n\t\t\t\tlastFrame = currentFrame;\n\t\t\t\tcurrentFrame = frame;\n\n\t\t\t}\n\n\t\t\tthis.mesh.morphTargetInfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\n\t\t\tthis.mesh.morphTargetInfluences[ lastFrame ] = 1 - this.mesh.morphTargetInfluences[ frame ];\n\n\t\t}\n\n\t} )()\n\n};\n\n// File:src/extras/geometries/BoxGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n */\n\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.widthSegments = widthSegments || 1;\n\tthis.heightSegments = heightSegments || 1;\n\tthis.depthSegments = depthSegments || 1;\n\n\tvar scope = this;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\tvar depth_half = depth / 2;\n\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\n\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\n\n\t\tvar w, ix, iy,\n\t\tgridX = scope.widthSegments,\n\t\tgridY = scope.heightSegments,\n\t\twidth_half = width / 2,\n\t\theight_half = height / 2,\n\t\toffset = scope.vertices.length;\n\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\n\n\t\t\tw = 'z';\n\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\n\n\t\t\tw = 'y';\n\t\t\tgridY = scope.depthSegments;\n\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\n\n\t\t\tw = 'x';\n\t\t\tgridX = scope.depthSegments;\n\n\t\t}\n\n\t\tvar gridX1 = gridX + 1,\n\t\tgridY1 = gridY + 1,\n\t\tsegment_width = width / gridX,\n\t\tsegment_height = height / gridY,\n\t\tnormal = new THREE.Vector3();\n\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar vector = new THREE.Vector3();\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\n\t\t\t\tvector[ w ] = depth;\n\n\t\t\t\tscope.vertices.push( vector );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\n\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\n\t\t\t\tface.normal.copy( normal );\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\tscope.faces.push( face );\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\n\t\t\t\tface.normal.copy( normal );\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\n\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\tscope.faces.push( face );\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.mergeVertices();\n\n};\n\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/CircleGeometry.js\n\n/**\n * @author hughes\n */\n\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 50;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tvar i, uvs = [],\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\n\n\tthis.vertices.push(center);\n\tuvs.push( centerUV );\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar segment = thetaStart + i / segments * thetaLength;\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tthis.vertices.push( vertex );\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/CubeGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tconsole.warn( 'THREE.CubeGeometry has been renamed to THREE.BoxGeometry.' );\n\treturn new THREE.BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n };\n\n// File:src/extras/geometries/CylinderGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded\n\t};\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\theight = height !== undefined ? height : 100;\n\n\tradialSegments = radialSegments || 8;\n\theightSegments = heightSegments || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\n\tvar heightHalf = height / 2;\n\n\tvar x, y, vertices = [], uvs = [];\n\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\tvar verticesRow = [];\n\t\tvar uvsRow = [];\n\n\t\tvar v = y / heightSegments;\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvertex.x = radius * Math.sin( u * Math.PI * 2 );\n\t\t\tvertex.y = - v * height + heightHalf;\n\t\t\tvertex.z = radius * Math.cos( u * Math.PI * 2 );\n\n\t\t\tthis.vertices.push( vertex );\n\n\t\t\tverticesRow.push( this.vertices.length - 1 );\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\n\n\t\t}\n\n\t\tvertices.push( verticesRow );\n\t\tuvs.push( uvsRow );\n\n\t}\n\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\n\tvar na, nb;\n\n\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\tif ( radiusTop !== 0 ) {\n\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\n\n\t\t} else {\n\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\n\n\t\t}\n\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\n\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tvar v1 = vertices[ y ][ x ];\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\n\n\t\t\tvar n1 = na.clone();\n\t\t\tvar n2 = na.clone();\n\t\t\tvar n3 = nb.clone();\n\t\t\tvar n4 = nb.clone();\n\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\n\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\n\n\t\t}\n\n\t}\n\n\t// top cap\n\n\tif ( openEnded === false && radiusTop > 0 ) {\n\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar v1 = vertices[ 0 ][ x ];\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\n\t\t\tvar v3 = this.vertices.length - 1;\n\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\n\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n\t\t}\n\n\t}\n\n\t// bottom cap\n\n\tif ( openEnded === false && radiusBottom > 0 ) {\n\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\tvar v3 = this.vertices.length - 1;\n\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\n\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n\t\t}\n\n\t}\n\n\tthis.computeFaceNormals();\n\n}\n\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/ExtrudeGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n *\n *  material: <int> // material index for front and back faces\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\n *  uvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\n\n\tif ( typeof( shapes ) === \"undefined\" ) {\n\t\tshapes = [];\n\t\treturn;\n\t}\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tshapes = shapes instanceof Array ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeFaceNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n};\n\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\tvar sl = shapes.length;\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\t}\n};\n\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\tvar material = options.material;\n\tvar extrudeMaterial = options.extrudeMaterial;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// Reuse TNB from TubeGeomtry for now.\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new THREE.Vector3();\n\t\tnormal = new THREE.Vector3();\n\t\tposition2 = new THREE.Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initalization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\tvar bevelPoints = [];\n\n\tvar shapesOffset = this.vertices.length;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices ) ;\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t}\n\n\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2 ( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.log( \"die\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length,\n\t\tcont, clen = contour.length;\n\n\n\t// Find directions for point movement\n\n\tvar RAD_TO_DEGREES = 180 / Math.PI;\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\tvar EPSILON = 0.0000000001;\n\t\t\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shiftet by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\t\t\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\t\t\n\t\t// check for colinear edges\n\t\tvar colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\t\t\n\t\tif ( Math.abs( colinear0 ) > EPSILON ) {\t\t// not colinear\n\t\t\t\n\t\t\t// length of vectors for normalizing\n\t\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\t\t\t\n\t\t\t// shift adjacent points by unit vectors to the left\n\t\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\t\t\t\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\t\n\t\t\t// scaling factor for v_prev to intersection point\n\t\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\t\n\t\t\t// vector from inPt to intersection point\n\t\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\t\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\n\t\t\t} else {\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\t\t\t}\n\t\t\t\n\t\t} else {\t\t// handle special case of colinear edges\n\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\tif ( v_prev_x > EPSILON ) {\n\t\t\t\tif ( v_next_x > EPSILON ) { direction_eq = true; }\n\t\t\t} else {\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\n\t\t\t\t\tif ( v_next_x < - EPSILON ) { direction_eq = true; }\n\t\t\t\t} else {\n\t\t\t\t\tif ( Math.sign(v_prev_y) == Math.sign(v_next_y) ) { direction_eq = true; }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\t\t\t} else {\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\t\t\t}\n\n\t\t}\n\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tvar pt_i = contour[ i ];\n\t\tvar pt_j = contour[ j ];\n\t\tvar pt_k = contour[ k ];\n\n\t\tcontourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * ( 1 - t );\n\n\t\t//z = bevelThickness * t;\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved\n\t\t//bs = bevelSize * t ; // linear\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\n\t\t\tbinormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\n\n\t\t\tposition2.copy( extrudePts[0] ).add(normal).add(binormal);\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[s] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * ( 1 - t );\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\t\tbs = bevelSize * Math.sin ( t * Math.PI/2 ) ;\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0 ; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length;  h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( --i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tfunction v( x, y, z ) {\n\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\n\n\t}\n\n\tfunction f3( a, b, c ) {\n\n\t\ta += shapesOffset;\n\t\tb += shapesOffset;\n\t\tc += shapesOffset;\n\n\t\t// normal, color, material\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n \t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t}\n\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\ta += shapesOffset;\n\t\tb += shapesOffset;\n\t\tc += shapesOffset;\n\t\td += shapesOffset;\n\n \t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\n \t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\n\n \t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t}\n\n};\n\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\tvar vertices = geometry.vertices;\n\n\t\tvar a = vertices[ indexA ];\n\t\tvar b = vertices[ indexB ];\n\t\tvar c = vertices[ indexC ];\n\n\t\treturn [\n\t\t\tnew THREE.Vector2( a.x, a.y ),\n\t\t\tnew THREE.Vector2( b.x, b.y ),\n\t\t\tnew THREE.Vector2( c.x, c.y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\tvar vertices = geometry.vertices;\n\n\t\tvar a = vertices[ indexA ];\n\t\tvar b = vertices[ indexB ];\n\t\tvar c = vertices[ indexC ];\n\t\tvar d = vertices[ indexD ];\n\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\n\t\t\t];\n\t\t} else {\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\n\t\t\t];\n\t\t}\n\t}\n};\n\n// File:src/extras/geometries/ShapeGeometry.js\n\n/**\n * @author jonobr1 / http://jonobr1.com\n *\n * Creates a one-sided polygonal geometry from a path shape. Similar to\n * ExtrudeGeometry.\n *\n * parameters = {\n *\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n *\n *\tmaterial: <int> // material index for front and back faces\n *\tuvGenerator: <Object> // object that provides UV generator functions\n *\n * }\n **/\n\nTHREE.ShapeGeometry = function ( shapes, options ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( shapes instanceof Array === false ) shapes = [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeFaceNormals();\n\n};\n\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n/**\n * Add an array of shapes to THREE.ShapeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tthis.addShape( shapes[ i ], options );\n\n\t}\n\n\treturn this;\n\n};\n\n/**\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n */\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\tif ( options === undefined ) options = {};\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar material = options.material;\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t//\n\n\tvar i, l, hole, s;\n\n\tvar shapesOffset = this.vertices.length;\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\n\n\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\treverse = false;\n\n\t}\n\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\n\n\t// Vertices\n\n\tvar contour = vertices;\n\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\thole = holes[ i ];\n\t\tvertices = vertices.concat( hole );\n\n\t}\n\n\t//\n\n\tvar vert, vlen = vertices.length;\n\tvar face, flen = faces.length;\n\tvar cont, clen = contour.length;\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = vertices[ i ];\n\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\n\n\t}\n\n\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\tface = faces[ i ];\n\n\t\tvar a = face[ 0 ] + shapesOffset;\n\t\tvar b = face[ 1 ] + shapesOffset;\n\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t}\n\n};\n\n// File:src/extras/geometries/LatheGeometry.js\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://exocortex.com\n */\n\n// points - to create a closed torus, one must use a set of points \n//    like so: [ a, b, c, d, a ], see first is the same as last.\n// segments - the number of circumference segments to create\n// phiStart - the starting radian\n// phiLength - the radian (0 to 2*PI) range of the lathed section\n//    2*pi is a closed lathe, less than 2PI is a portion.\n\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = segments || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || 2 * Math.PI;\n\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\n\tvar inverseSegments = 1.0 / segments;\n\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar c = Math.cos( phi ),\n\t\t\ts = Math.sin( phi );\n\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\n\n\t\t\tvar pt = points[ j ];\n\n\t\t\tvar vertex = new THREE.Vector3();\n\n\t\t\tvertex.x = c * pt.x - s * pt.y;\n\t\t\tvertex.y = s * pt.x + c * pt.y;\n\t\t\tvertex.z = pt.z;\n\n\t\t\tthis.vertices.push( vertex );\n\n\t\t}\n\n\t}\n\n\tvar np = points.length;\n\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\n\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\n\n\t\t\tvar base = j + np * i;\n\t\t\tvar a = base;\n\t\t\tvar b = base + np;\n\t\t\tvar c = base + 1 + np;\n\t\t\tvar d = base + 1;\n\n\t\t\tvar u0 = i * inverseSegments;\n\t\t\tvar v0 = j * inversePointLength;\n\t\t\tvar u1 = u0 + inverseSegments;\n\t\t\tvar v1 = v0 + inversePointLength;\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\n\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\n\t\t\t\tnew THREE.Vector2( u0, v1 )\n\n\t\t\t] );\n\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\n\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\n\t\t\t\tnew THREE.Vector2( u0, v1 )\n\n\t\t\t] );\n\n\n\t\t}\n\n\t}\n\n\tthis.mergeVertices();\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n};\n\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/PlaneGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\tconsole.info( 'THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.' );\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n};\n\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/PlaneBufferGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n */\n\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = widthSegments || 1;\n\tvar gridY = heightSegments || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\tvar offset = 0;\n\tvar offset2 = 0;\n\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices[ offset     ] = x;\n\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\tuvs[ offset2     ] = ix / gridX;\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\toffset += 3;\n\t\t\toffset2 += 2;\n\n\t\t}\n\n\t}\n\n\toffset = 0;\n\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\tindices[ offset     ] = a;\n\t\t\tindices[ offset + 1 ] = b;\n\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\tindices[ offset + 3 ] = b;\n\t\t\tindices[ offset + 4 ] = c;\n\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\toffset += 6;\n\n\t\t}\n\n\t}\n\n\tthis.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n};\n\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\n// File:src/extras/geometries/RingGeometry.js\n\n/**\n * @author Kaleb Murphy\n */\n\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0;\n\touterRadius = outerRadius || 50;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\n\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\n\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tthis.vertices.push( vertex );\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\n\t\t}\n\n\t\tradius += radiusStep;\n\n\t}\n\n\tvar n = new THREE.Vector3( 0, 0, 1 );\n\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\n\n\t\tvar thetaSegment = i * (thetaSegments + 1);\n\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\n\n\t\t\tvar segment = o + thetaSegment;\n\n\t\t\tvar v1 = segment;\n\t\t\tvar v2 = segment + thetaSegments + 1;\n\t\t\tvar v3 = segment + thetaSegments + 2;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t\tv1 = segment;\n\t\t\tv2 = segment + thetaSegments + 2;\n\t\t\tv3 = segment + 1;\n\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n\n// File:src/extras/geometries/SphereGeometry.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength \n\t};\n\n\tradius = radius || 50;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar x, y, vertices = [], uvs = [];\n\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\tvar verticesRow = [];\n\t\tvar uvsRow = [];\n\n\t\tfor ( x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\tvar u = x / widthSegments;\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tthis.vertices.push( vertex );\n\n\t\t\tverticesRow.push( this.vertices.length - 1 );\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\n\n\t\t}\n\n\t\tvertices.push( verticesRow );\n\t\tuvs.push( uvsRow );\n\n\t}\n\n\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\tfor ( x = 0; x < widthSegments; x ++ ) {\n\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\tvar n1 = this.vertices[ v1 ].clone().normalize();\n\t\t\tvar n2 = this.vertices[ v2 ].clone().normalize();\n\t\t\tvar n3 = this.vertices[ v3 ].clone().normalize();\n\t\t\tvar n4 = this.vertices[ v4 ].clone().normalize();\n\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\n\t\t\tvar uv3 = uvs[ y + 1 ][ x ].clone();\n\t\t\tvar uv4 = uvs[ y + 1 ][ x + 1 ].clone();\n\n\t\t\tif ( Math.abs( this.vertices[ v1 ].y ) === radius ) {\n\n\t\t\t\tuv1.x = ( uv1.x + uv2.x ) / 2;\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\n\n\t\t\t} else if ( Math.abs( this.vertices[ v3 ].y ) === radius ) {\n\n\t\t\t\tuv3.x = ( uv3.x + uv4.x ) / 2;\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\n\n\t\t\t} else {\n\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\n\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n};\n\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TextGeometry.js\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * For creating 3D text geometry in three.js\n *\n * Text = 3D Text\n *\n * parameters = {\n *  size: \t\t\t<float>, \t// size of the text\n *  height: \t\t<float>, \t// thickness to extrude text\n *  curveSegments: \t<int>,\t\t// number of points on the curves\n *\n *  font: \t\t\t<string>,\t\t// font name\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\n *\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\n *  }\n *\n */\n\n/*\tUsage Examples\n\n\t// TextGeometry wrapper\n\n\tvar text3d = new TextGeometry( text, options );\n\n\t// Complete manner\n\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\n\n*/\n\n\nTHREE.TextGeometry = function ( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\n\n\tthis.type = 'TextGeometry';\n\n};\n\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\n\n// File:src/extras/geometries/TorusGeometry.js\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n */\n\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\tradialSegments = radialSegments || 8;\n\ttubularSegments = tubularSegments || 6;\n\tarc = arc || Math.PI * 2;\n\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\n\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tthis.vertices.push( vertex );\n\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\n\n\t\t}\n\n\t}\n\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\n\t\t\tthis.faces.push( face );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\n\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\n\t\t\tthis.faces.push( face );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\n\n\t\t}\n\n\t}\n\n\tthis.computeFaceNormals();\n\n};\n\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TorusKnotGeometry.js\n\n/**\n * @author oosmoxiecode\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\n */\n\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tp: p,\n\t\tq: q,\n\t\theightScale: heightScale\n\t};\n\n\tradius = radius || 100;\n\ttube = tube || 40;\n\tradialSegments = radialSegments || 64;\n\ttubularSegments = tubularSegments || 8;\n\tp = p || 2;\n\tq = q || 3;\n\theightScale = heightScale || 1;\n\t\n\tvar grid = new Array( radialSegments );\n\tvar tang = new THREE.Vector3();\n\tvar n = new THREE.Vector3();\n\tvar bitan = new THREE.Vector3();\n\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\n\n\t\tgrid[ i ] = new Array( tubularSegments );\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\n\t\ttang.subVectors( p2, p1 );\n\t\tn.addVectors( p2, p1 );\n\n\t\tbitan.crossVectors( tang, n );\n\t\tn.crossVectors( bitan, tang );\n\t\tbitan.normalize();\n\t\tn.normalize();\n\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\n\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\tvar pos = new THREE.Vector3();\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\n\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\n\n\t\t}\n\n\t}\n\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\n\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\n\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\n\n\t\t\tvar a = grid[ i ][ j ];\n\t\t\tvar b = grid[ ip ][ j ];\n\t\t\tvar c = grid[ ip ][ jp ];\n\t\t\tvar d = grid[ i ][ jp ];\n\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = in_q / in_p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\n\n\t\treturn new THREE.Vector3( tx, ty, tz );\n\n\t}\n\n};\n\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TubeGeometry.js\n\n/**\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n *\n * Modified from the TorusKnotGeometry by @oosmoxiecode\n *\n * Creates a tube which extrudes along a 3d spline\n *\n * Uses parallel transport frames as described in\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n */\n\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\tsegments: segments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tsegments = segments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar grid = [];\n\n\tvar scope = this,\n\n\t\ttangent,\n\t\tnormal,\n\t\tbinormal,\n\n\t\tnumpoints = segments + 1,\n\n\t\tx, y, z,\n\t\ttx, ty, tz,\n\t\tu, v,\n\n\t\tcx, cy,\n\t\tpos, pos2 = new THREE.Vector3(),\n\t\ti, j,\n\t\tip, jp,\n\t\ta, b, c, d,\n\t\tuva, uvb, uvc, uvd;\n\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\n\t\ttangents = frames.tangents,\n\t\tnormals = frames.normals,\n\t\tbinormals = frames.binormals;\n\n\t// proxy internals\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\tfunction vert( x, y, z ) {\n\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\n\n\t}\n\n\t// consruct the grid\n\n\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\tgrid[ i ] = [];\n\n\t\tu = i / ( numpoints - 1 );\n\n\t\tpos = path.getPointAt( u );\n\n\t\ttangent = tangents[ i ];\n\t\tnormal = normals[ i ];\n\t\tbinormal = binormals[ i ];\n\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\tv = j / radialSegments * 2 * Math.PI;\n\n\t\t\tcx = - radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\t\tcy = radius * Math.sin( v );\n\n\t\t\tpos2.copy( pos );\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\n\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n\t\t}\n\t}\n\n\n\t// construct the mesh\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\tip = ( closed ) ? (i + 1) % segments : i + 1;\n\t\t\tjp = (j + 1) % radialSegments;\n\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\n\t\t\tb = grid[ ip ][ j ];\n\t\t\tc = grid[ ip ][ jp ];\n\t\t\td = grid[ i ][ jp ];\n\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t}\n\t}\n\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n};\n\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n\tvar\ttangent = new THREE.Vector3(),\n\t\tnormal = new THREE.Vector3(),\n\t\tbinormal = new THREE.Vector3(),\n\n\t\ttangents = [],\n\t\tnormals = [],\n\t\tbinormals = [],\n\n\t\tvec = new THREE.Vector3(),\n\t\tmat = new THREE.Matrix4(),\n\n\t\tnumpoints = segments + 1,\n\t\ttheta,\n\t\tepsilon = 0.0001,\n\t\tsmallest,\n\n\t\ttx, ty, tz,\n\t\ti, u, v;\n\n\n\t// expose internals\n\tthis.tangents = tangents;\n\tthis.normals = normals;\n\tthis.binormals = binormals;\n\n\t// compute the tangent vectors for each segment on the path\n\n\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\tu = i / ( numpoints - 1 );\n\n\t\ttangents[ i ] = path.getTangentAt( u );\n\t\ttangents[ i ].normalize();\n\n\t}\n\n\tinitialNormal3();\n\n\t/*\n\tfunction initialNormal1(lastBinormal) {\n\t\t// fixed start binormal. Has dangers of 0 vectors\n\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\t}\n\n\tfunction initialNormal2() {\n\n\t\t// This uses the Frenet-Serret formula for deriving binormal\n\t\tvar t2 = path.getTangentAt( epsilon );\n\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n\t}\n\t*/\n\n\tfunction initialNormal3() {\n\t\t// select an initial normal vector perpenicular to the first tangent vector,\n\t\t// and in the direction of the smallest tangent xyz component\n\n\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\tsmallest = Number.MAX_VALUE;\n\t\ttx = Math.abs( tangents[ 0 ].x );\n\t\tty = Math.abs( tangents[ 0 ].y );\n\t\ttz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= smallest ) {\n\t\t\tsmallest = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\t\t}\n\n\t\tif ( ty <= smallest ) {\n\t\t\tsmallest = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\t\t}\n\n\t\tif ( tz <= smallest ) {\n\t\t\tnormal.set( 0, 0, 1 );\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\t}\n\n\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\tnormals[ i ] = normals[ i-1 ].clone();\n\n\t\tbinormals[ i ] = binormals[ i-1 ].clone();\n\n\t\tvec.crossVectors( tangents[ i-1 ], tangents[ i ] );\n\n\t\tif ( vec.length() > epsilon ) {\n\n\t\t\tvec.normalize();\n\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i-1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t}\n\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t}\n\n\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\tif ( closed ) {\n\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints-1 ] ), - 1, 1 ) );\n\t\ttheta /= ( numpoints - 1 );\n\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {\n\n\t\t\ttheta = - theta;\n\n\t\t}\n\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\t// twist a little...\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t}\n};\n\n// File:src/extras/geometries/PolyhedronGeometry.js\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\tvar that = this;\n\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n\t}\n\n\tvar midpoints = [], p = this.vertices;\n\n\tvar faces = [];\n\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n\t\tvar v1 = p[ indices[ i     ] ];\n\t\tvar v2 = p[ indices[ i + 1 ] ];\n\t\tvar v3 = p[ indices[ i + 2 ] ];\n\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n\t}\n\n\tvar centroid = new THREE.Vector3();\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tsubdivide( faces[ i ], detail );\n\n\t}\n\n\n\t// Handle case when face straddles the seam\n\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\tvar x0 = uvs[ 0 ].x;\n\t\tvar x1 = uvs[ 1 ].x;\n\t\tvar x2 = uvs[ 2 ].x;\n\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\n\n\t\tif ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\n\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n\t\t}\n\n\t}\n\n\n\t// Apply radius\n\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\tthis.vertices[ i ].multiplyScalar( radius );\n\n\t}\n\n\n\t// Merge vertices\n\n\tthis.mergeVertices();\n\n\tthis.computeFaceNormals();\n\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n\t// Project vector onto sphere's surface\n\n\tfunction prepare( vector ) {\n\n\t\tvar vertex = vector.normalize().clone();\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\n\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\n\n\t\treturn vertex;\n\n\t}\n\n\n\t// Approximate a curved face with recursively sub-divided triangles.\n\n\tfunction make( v1, v2, v3 ) {\n\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\t\tthat.faces.push( face );\n\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n\t\tvar azi = azimuth( centroid );\n\n\t\tthat.faceVertexUvs[ 0 ].push( [\n\t\t\tcorrectUV( v1.uv, v1, azi ),\n\t\t\tcorrectUV( v2.uv, v2, azi ),\n\t\t\tcorrectUV( v3.uv, v3, azi )\n\t\t] );\n\n\t}\n\n\n\t// Analytically subdivide a face to the required detail level.\n\n\tfunction subdivide( face, detail ) {\n\n\t\tvar cols = Math.pow(2, detail);\n\t\tvar cells = Math.pow(4, detail);\n\t\tvar a = prepare( that.vertices[ face.a ] );\n\t\tvar b = prepare( that.vertices[ face.b ] );\n\t\tvar c = prepare( that.vertices[ face.c ] );\n\t\tvar v = [];\n\n\t\t// Construct all of the vertices for this subdivision.\n\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( var j = 0; j <= rows; j ++) {\n\n\t\t\t\tif ( j == 0 && i == cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Construct all of the faces.\n\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\n\n\t\t\tfor ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 == 0 ) {\n\n\t\t\t\t\tmake(\n\t\t\t\t\t\tv[ i ][ k + 1],\n\t\t\t\t\t\tv[ i + 1 ][ k ],\n\t\t\t\t\t\tv[ i ][ k ]\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmake(\n\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\tv[ i + 1][ k + 1],\n\t\t\t\t\t\tv[ i + 1 ][ k ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n\n\t// Texture fixing helper. Spheres have some odd behaviours.\n\n\tfunction correctUV( uv, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n\t\treturn uv.clone();\n\n\t}\n\n\n};\n\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/DodecahedronGeometry.js\n\n/**\n * @author Abe Pazos / https://hamoid.com\n */\n\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t-1, -1, -1,    -1, -1,  1,\n\t\t-1,  1, -1,    -1,  1,  1,\n\t\t 1, -1, -1,     1, -1,  1,\n\t\t 1,  1, -1,     1,  1,  1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, -r, -t,     0, -r,  t,\n\t\t 0,  r, -t,     0,  r,  t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t-r, -t,  0,    -r,  t,  0,\n\t\t r, -t,  0,     r,  t,  0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t-t,  0, -r,     t,  0, -r,\n\t\t-t,  0,  r,     t,  0,  r\n\t];\n\n\tvar indices = [\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n};\n\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/IcosahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t];\n\n\tvar indices = [\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n};\n\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/OctahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.OctahedronGeometry = function ( radius, detail ) {\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tvar vertices = [\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n};\n\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/TetrahedronGeometry.js\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n */\n\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\n\n\tvar vertices = [\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t];\n\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n};\n\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/geometries/ParametricGeometry.js\n\n/**\n * @author zz85 / https://github.com/zz85\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n *\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n *\n */\n\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tvar verts = this.vertices;\n\tvar faces = this.faces;\n\tvar uvs = this.faceVertexUvs[ 0 ];\n\n\tvar i, il, j, p;\n\tvar u, v;\n\n\tvar stackCount = stacks + 1;\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tv = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tu = j / slices;\n\n\t\t\tp = func( u, v );\n\t\t\tverts.push( p );\n\n\t\t}\n\t}\n\n\tvar a, b, c, d;\n\tvar uva, uvb, uvc, uvd;\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\ta = i * sliceCount + j;\n\t\t\tb = i * sliceCount + j + 1;\n\t\t\tc = (i + 1) * sliceCount + j + 1;\n\t\t\td = (i + 1) * sliceCount + j;\n\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\n\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\n\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t}\n\n\t}\n\n\t// console.log(this);\n\n\t// magic bullet\n\t// var diff = this.mergeVertices();\n\t// console.log('removed ', diff, ' vertices by merging');\n\n\tthis.computeFaceNormals();\n\tthis.computeVertexNormals();\n\n};\n\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\n// File:src/extras/helpers/AxisHelper.js\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.AxisHelper = function ( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = new Float32Array( [\n\t\t0, 0, 0,  size, 0, 0,\n\t\t0, 0, 0,  0, size, 0,\n\t\t0, 0, 0,  0, 0, size\n\t] );\n\n\tvar colors = new Float32Array( [\n\t\t1, 0, 0,  1, 0.6, 0,\n\t\t0, 1, 0,  0.6, 1, 0,\n\t\t0, 0, 1,  0, 0.6, 1\n\t] );\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n};\n\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/helpers/ArrowHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://exocortex.com\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nTHREE.ArrowHelper = ( function () {\n\n\tvar lineGeometry = new THREE.Geometry();\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\tconeGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\n\n\treturn function ( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\t\tif ( length === undefined ) length = 1;\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n}() );\n\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new THREE.Vector3();\n\tvar radians;\n\n\treturn function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, length, 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.set( color );\n\tthis.cone.material.color.set( color );\n\n};\n\n// File:src/extras/helpers/BoxHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.BoxHelper = function ( object ) {\n\n\tvar geometry = new THREE.BufferGeometry();\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( 72 ), 3 ) );\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\n\n\tif ( object !== undefined ) {\n\n\t\tthis.update( object );\n\n\t}\n\n};\n\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.BoxHelper.prototype.update = function ( object ) {\n\n\tvar geometry = object.geometry;\n\n\tif ( geometry.boundingBox === null ) {\n\n\t\tgeometry.computeBoundingBox();\n\n\t}\n\n\tvar min = geometry.boundingBox.min;\n\tvar max = geometry.boundingBox.max;\n\n\t/*\n\t  5____4\n\t1/___0/|\n\t| 6__|_7\n\t2/___3/\n\n\t0: max.x, max.y, max.z\n\t1: min.x, max.y, max.z\n\t2: min.x, min.y, max.z\n\t3: max.x, min.y, max.z\n\t4: max.x, max.y, min.z\n\t5: min.x, max.y, min.z\n\t6: min.x, min.y, min.z\n\t7: max.x, min.y, min.z\n\t*/\n\n\tvar vertices = this.geometry.attributes.position.array;\n\n\tvertices[  0 ] = max.x; vertices[  1 ] = max.y; vertices[  2 ] = max.z;\n\tvertices[  3 ] = min.x; vertices[  4 ] = max.y; vertices[  5 ] = max.z;\n\n\tvertices[  6 ] = min.x; vertices[  7 ] = max.y; vertices[  8 ] = max.z;\n\tvertices[  9 ] = min.x; vertices[ 10 ] = min.y; vertices[ 11 ] = max.z;\n\n\tvertices[ 12 ] = min.x; vertices[ 13 ] = min.y; vertices[ 14 ] = max.z;\n\tvertices[ 15 ] = max.x; vertices[ 16 ] = min.y; vertices[ 17 ] = max.z;\n\n\tvertices[ 18 ] = max.x; vertices[ 19 ] = min.y; vertices[ 20 ] = max.z;\n\tvertices[ 21 ] = max.x; vertices[ 22 ] = max.y; vertices[ 23 ] = max.z;\n\n\t//\n\n\tvertices[ 24 ] = max.x; vertices[ 25 ] = max.y; vertices[ 26 ] = min.z;\n\tvertices[ 27 ] = min.x; vertices[ 28 ] = max.y; vertices[ 29 ] = min.z;\n\n\tvertices[ 30 ] = min.x; vertices[ 31 ] = max.y; vertices[ 32 ] = min.z;\n\tvertices[ 33 ] = min.x; vertices[ 34 ] = min.y; vertices[ 35 ] = min.z;\n\n\tvertices[ 36 ] = min.x; vertices[ 37 ] = min.y; vertices[ 38 ] = min.z;\n\tvertices[ 39 ] = max.x; vertices[ 40 ] = min.y; vertices[ 41 ] = min.z;\n\n\tvertices[ 42 ] = max.x; vertices[ 43 ] = min.y; vertices[ 44 ] = min.z;\n\tvertices[ 45 ] = max.x; vertices[ 46 ] = max.y; vertices[ 47 ] = min.z;\n\n\t//\n\n\tvertices[ 48 ] = max.x; vertices[ 49 ] = max.y; vertices[ 50 ] = max.z;\n\tvertices[ 51 ] = max.x; vertices[ 52 ] = max.y; vertices[ 53 ] = min.z;\n\n\tvertices[ 54 ] = min.x; vertices[ 55 ] = max.y; vertices[ 56 ] = max.z;\n\tvertices[ 57 ] = min.x; vertices[ 58 ] = max.y; vertices[ 59 ] = min.z;\n\n\tvertices[ 60 ] = min.x; vertices[ 61 ] = min.y; vertices[ 62 ] = max.z;\n\tvertices[ 63 ] = min.x; vertices[ 64 ] = min.y; vertices[ 65 ] = min.z;\n\n\tvertices[ 66 ] = max.x; vertices[ 67 ] = min.y; vertices[ 68 ] = max.z;\n\tvertices[ 69 ] = max.x; vertices[ 70 ] = min.y; vertices[ 71 ] = min.z;\n\n\tthis.geometry.attributes.position.needsUpdate = true;\n\n\tthis.geometry.computeBoundingSphere();\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n};\n\n// File:src/extras/helpers/BoundingBoxHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n// a helper to show the world-axis-aligned bounding box for an object\n\nTHREE.BoundingBoxHelper = function ( object, hex ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\tthis.object = object;\n\n\tthis.box = new THREE.Box3();\n\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n};\n\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.BoundingBoxHelper.prototype.update = function () {\n\n\tthis.box.setFromObject( this.object );\n\n\tthis.box.size( this.scale );\n\n\tthis.box.center( this.position );\n\n};\n\n// File:src/extras/helpers/CameraHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nTHREE.CameraHelper = function ( camera ) {\n\n\tvar geometry = new THREE.Geometry();\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar hexFrustum = 0xffaa00;\n\tvar hexCone = 0xff0000;\n\tvar hexUp = 0x00aaff;\n\tvar hexTarget = 0xffffff;\n\tvar hexCross = 0x333333;\n\n\t// near\n\n\taddLine( \"n1\", \"n2\", hexFrustum );\n\taddLine( \"n2\", \"n4\", hexFrustum );\n\taddLine( \"n4\", \"n3\", hexFrustum );\n\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t// far\n\n\taddLine( \"f1\", \"f2\", hexFrustum );\n\taddLine( \"f2\", \"f4\", hexFrustum );\n\taddLine( \"f4\", \"f3\", hexFrustum );\n\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t// sides\n\n\taddLine( \"n1\", \"f1\", hexFrustum );\n\taddLine( \"n2\", \"f2\", hexFrustum );\n\taddLine( \"n3\", \"f3\", hexFrustum );\n\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t// cone\n\n\taddLine( \"p\", \"n1\", hexCone );\n\taddLine( \"p\", \"n2\", hexCone );\n\taddLine( \"p\", \"n3\", hexCone );\n\taddLine( \"p\", \"n4\", hexCone );\n\n\t// up\n\n\taddLine( \"u1\", \"u2\", hexUp );\n\taddLine( \"u2\", \"u3\", hexUp );\n\taddLine( \"u3\", \"u1\", hexUp );\n\n\t// target\n\n\taddLine( \"c\", \"t\", hexTarget );\n\taddLine( \"p\", \"c\", hexCross );\n\n\t// cross\n\n\taddLine( \"cn1\", \"cn2\", hexCross );\n\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\taddLine( \"cf1\", \"cf2\", hexCross );\n\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\tfunction addLine( a, b, hex ) {\n\n\t\taddPoint( a, hex );\n\t\taddPoint( b, hex );\n\n\t}\n\n\tfunction addPoint( id, hex ) {\n\n\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t}\n\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n\tthis.camera = camera;\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n};\n\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.CameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\t\n\tvar vector = new THREE.Vector3();\n\tvar camera = new THREE.Camera();\n\n\tvar setPoint = function ( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\treturn function () {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t// near\n\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t};\n\n}();\n\n// File:src/extras/helpers/DirectionalLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.DirectionalLightHelper = function ( light, size ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tsize = size || 1;\n\n\tvar geometry = new THREE.Geometry();\n\tgeometry.vertices.push(\n\t\tnew THREE.Vector3( - size,   size, 0 ),\n\t\tnew THREE.Vector3(   size,   size, 0 ),\n\t\tnew THREE.Vector3(   size, - size, 0 ),\n\t\tnew THREE.Vector3( - size, - size, 0 ),\n\t\tnew THREE.Vector3( - size,   size, 0 )\n\t);\n\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\tthis.lightPlane = new THREE.Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new THREE.Geometry();\n\tgeometry.vertices.push(\n\t\tnew THREE.Vector3(),\n\t\tnew THREE.Vector3()\n\t);\n\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\tthis.targetLine = new THREE.Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n};\n\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n};\n\nTHREE.DirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new THREE.Vector3();\n\tvar v2 = new THREE.Vector3();\n\tvar v3 = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\n\n\t};\n\n}();\n\n// File:src/extras/helpers/EdgesHelper.js\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nTHREE.EdgesHelper = function ( object, hex ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\tvar edge = [ 0, 0 ], hash = {};\n\tvar sortFunction = function ( a, b ) { return a - b };\n\n\tvar keys = [ 'a', 'b', 'c' ];\n\tvar geometry = new THREE.BufferGeometry();\n\n\tvar geometry2 = object.geometry.clone();\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar vertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\tvar numEdges = 0;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge.sort( sortFunction );\n\n\t\t\tvar key = edge.toString();\n\n\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\t\t\t\tnumEdges ++;\n\n\t\t\t} else {\n\n\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\tvar index = 0;\n\n\tfor ( var key in hash ) {\n\n\t\tvar h = hash[ key ];\n\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) < 0.9999 ) { // hardwired const OK\n\n\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\tcoords[ index ++ ] = vertex.x;\n\t\t\tcoords[ index ++ ] = vertex.y;\n\t\t\tcoords[ index ++ ] = vertex.z;\n\n\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\tcoords[ index ++ ] = vertex.x;\n\t\t\tcoords[ index ++ ] = vertex.y;\n\t\t\tcoords[ index ++ ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n};\n\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/helpers/FaceNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\tvar geometry = new THREE.Geometry();\n\n\tvar faces = this.object.geometry.faces;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\n\n\t}\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.normalMatrix = new THREE.Matrix3();\n\n\tthis.update();\n\n};\n\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.FaceNormalsHelper.prototype.update = function () {\n\n\tvar vertices = this.geometry.vertices;\n\n\tvar object = this.object;\n\tvar objectVertices = object.geometry.vertices;\n\tvar objectFaces = object.geometry.faces;\n\tvar objectWorldMatrix = object.matrixWorld;\n\n\tobject.updateMatrixWorld( true );\n\n\tthis.normalMatrix.getNormalMatrix( objectWorldMatrix );\n\n\tfor ( var i = 0, i2 = 0, l = objectFaces.length; i < l; i ++, i2 += 2 ) {\n\n\t\tvar face = objectFaces[ i ];\n\n\t\tvertices[ i2 ].copy( objectVertices[ face.a ] )\n\t\t\t.add( objectVertices[ face.b ] )\n\t\t\t.add( objectVertices[ face.c ] )\n\t\t\t.divideScalar( 3 )\n\t\t\t.applyMatrix4( objectWorldMatrix );\n\n\t\tvertices[ i2 + 1 ].copy( face.normal )\n\t\t\t.applyMatrix3( this.normalMatrix )\n\t\t\t.normalize()\n\t\t\t.multiplyScalar( this.size )\n\t\t\t.add( vertices[ i2 ] );\n\n\t}\n\n\tthis.geometry.verticesNeedUpdate = true;\n\n\treturn this;\n\n};\n\n\n// File:src/extras/helpers/GridHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.GridHelper = function ( size, step ) {\n\n\tvar geometry = new THREE.Geometry();\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\tthis.color1 = new THREE.Color( 0x444444 );\n\tthis.color2 = new THREE.Color( 0x888888 );\n\n\tfor ( var i = - size; i <= size; i += step ) {\n\n\t\tgeometry.vertices.push(\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\n\t\t);\n\n\t\tvar color = i === 0 ? this.color1 : this.color2;\n\n\t\tgeometry.colors.push( color, color, color, color );\n\n\t}\n\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n};\n\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\n\n\tthis.color1.set( colorCenterLine );\n\tthis.color2.set( colorGrid );\n\n\tthis.geometry.colorsNeedUpdate = true;\n\n}\n\n// File:src/extras/helpers/HemisphereLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\n\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\n\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t}\n\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\n\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\n\tthis.add( this.lightSphere );\n\n\tthis.update();\n\n};\n\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\n\tthis.lightSphere.geometry.dispose();\n\tthis.lightSphere.material.dispose();\n};\n\nTHREE.HemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t}\n\n}();\n\n// File:src/extras/helpers/PointLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.PointLightHelper = function ( light, sphereSize ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n};\n\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.PointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n};\n\nTHREE.PointLightHelper.prototype.update = function () {\n\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n// File:src/extras/helpers/SkeletonHelper.js\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n */\n\nTHREE.SkeletonHelper = function ( object ) {\n\n\tthis.bones = this.getBoneList( object );\n\n\tvar geometry = new THREE.Geometry();\n\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\tvar bone = this.bones[ i ];\n\n\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\n\n\t\t}\n\n\t}\n\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\n\n\tthis.root = object;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n};\n\n\nTHREE.SkeletonHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\n\n\tvar boneList = [];\n\n\tif ( object instanceof THREE.Bone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n};\n\nTHREE.SkeletonHelper.prototype.update = function () {\n\n\tvar geometry = this.geometry;\n\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\n\n\tvar boneMatrix = new THREE.Matrix4();\n\n\tvar j = 0;\n\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\tvar bone = this.bones[ i ];\n\n\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\tj += 2;\n\n\t\t}\n\n\t}\n\n\tgeometry.verticesNeedUpdate = true;\n\n\tgeometry.computeBoundingSphere();\n\n};\n\n// File:src/extras/helpers/SpotLightHelper.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.SpotLightHelper = function ( light ) {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\n\n\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\n\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tthis.cone = new THREE.Mesh( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n};\n\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\nTHREE.SpotLightHelper.prototype.dispose = function () {\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n};\n\nTHREE.SpotLightHelper.prototype.update = function () {\n\n\tvar vector = new THREE.Vector3();\n\tvar vector2 = new THREE.Vector3();\n\n\treturn function () {\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t};\n\n}();\n\n// File:src/extras/helpers/VertexNormalsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\tvar geometry = new THREE.Geometry();\n\n\tvar vertices = object.geometry.vertices;\n\n\tvar faces = object.geometry.faces;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\n\n\t\t}\n\n\t}\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.normalMatrix = new THREE.Matrix3();\n\n\tthis.update();\n\n};\n\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\n\n\tvar v1 = new THREE.Vector3();\n\n\treturn function( object ) {\n\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar vertices = this.geometry.vertices;\n\n\t\tvar verts = this.object.geometry.vertices;\n\n\t\tvar faces = this.object.geometry.faces;\n\n\t\tvar worldMatrix = this.object.matrixWorld;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\n\t\t\t\tvar vertex = verts[ vertexId ];\n\n\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\n\n\t\t\t\tv1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\n\n\t\t\t\tv1.add( vertices[ idx ] );\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tvertices[ idx ].copy( v1 );\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.geometry.verticesNeedUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n}());\n\n// File:src/extras/helpers/VertexTangentsHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0x0000ff;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\tvar geometry = new THREE.Geometry();\n\n\tvar vertices = object.geometry.vertices;\n\n\tvar faces = object.geometry.faces;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\n\t\t}\n\n\t}\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n};\n\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\n\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\n\n\tvar v1 = new THREE.Vector3();\n\n\treturn function( object ) {\n\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tvar vertices = this.geometry.vertices;\n\n\t\tvar verts = this.object.geometry.vertices;\n\n\t\tvar faces = this.object.geometry.faces;\n\n\t\tvar worldMatrix = this.object.matrixWorld;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\n\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\n\t\t\t\tvar vertex = verts[ vertexId ];\n\n\t\t\t\tvar tangent = face.vertexTangents[ j ];\n\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\n\n\t\t\t\tv1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\n\n\t\t\t\tv1.add( vertices[ idx ] );\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tvertices[ idx ].copy( v1 );\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.geometry.verticesNeedUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n}());\n\n// File:src/extras/helpers/WireframeHelper.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.WireframeHelper = function ( object, hex ) {\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\tvar edge = [ 0, 0 ], hash = {};\n\tvar sortFunction = function ( a, b ) { return a - b };\n\n\tvar keys = [ 'a', 'b', 'c' ];\n\tvar geometry = new THREE.BufferGeometry();\n\n\tif ( object.geometry instanceof THREE.Geometry ) {\n\n\t\tvar vertices = object.geometry.vertices;\n\t\tvar faces = object.geometry.faces;\n\t\tvar numEdges = 0;\n\n\t\t// allocate maximal size\n\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j] ];\n\n\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t} else if ( object.geometry instanceof THREE.BufferGeometry ) {\n\n\t\tif ( object.geometry.attributes.index !== undefined ) { // Indexed BufferGeometry\n\n\t\t\tvar vertices = object.geometry.attributes.position.array;\n\t\t\tvar indices = object.geometry.attributes.index.array;\n\t\t\tvar drawcalls = object.geometry.drawcalls;\n\t\t\tvar numEdges = 0;\n\n\t\t\tif ( drawcalls.length === 0 ) {\n\n\t\t\t\tdrawcalls = [ { count : indices.length, index : 0, start : 0 } ];\n\n\t\t\t}\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\n\n\t\t\t\tvar start = drawcalls[ o ].start;\n\t\t\t\tvar count = drawcalls[ o ].count;\n\t\t\t\tvar index = drawcalls[ o ].index;\n\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge[ 0 ] = index + indices[ i + j ];\n\t\t\t\t\t\tedge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tvar index2 = 3 * edges[ 2 * i + j];\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index2 ];\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index2 + 1 ];\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t} else { // non-indexed BufferGeometry\n\n\t\t\tvar vertices = object.geometry.attributes.position.array;\n\t\t\tvar numEdges = vertices.length / 3;\n\t\t\tvar numTris = numEdges / 3;\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t}\n\n\t}\n\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n};\n\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\n\n// File:src/extras/objects/ImmediateRenderObject.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ImmediateRenderObject = function () {\n\n\tTHREE.Object3D.call( this );\n\n\tthis.render = function ( renderCallback ) {};\n\n};\n\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\n\n// File:src/extras/objects/MorphBlendMesh.js\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphBlendMesh = function( geometry, material ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.animationsMap = {};\n\tthis.animationsList = [];\n\n\t// prepare default animation\n\t// (all frames played together in 1 second)\n\n\tvar numFrames = this.geometry.morphTargets.length;\n\n\tvar name = \"__default\";\n\n\tvar startFrame = 0;\n\tvar endFrame = numFrames - 1;\n\n\tvar fps = numFrames / 1;\n\n\tthis.createAnimation( name, startFrame, endFrame, fps );\n\tthis.setAnimationWeight( name, 1 );\n\n};\n\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\n\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\tvar animation = {\n\n\t\tstartFrame: start,\n\t\tendFrame: end,\n\n\t\tlength: end - start + 1,\n\n\t\tfps: fps,\n\t\tduration: ( end - start ) / fps,\n\n\t\tlastFrame: 0,\n\t\tcurrentFrame: 0,\n\n\t\tactive: false,\n\n\t\ttime: 0,\n\t\tdirection: 1,\n\t\tweight: 1,\n\n\t\tdirectionBackwards: false,\n\t\tmirroredLoop: false\n\n\t};\n\n\tthis.animationsMap[ name ] = animation;\n\tthis.animationsList.push( animation );\n\n};\n\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\tvar pattern = /([a-z]+)_?(\\d+)/;\n\n\tvar firstAnimation, frameRanges = {};\n\n\tvar geometry = this.geometry;\n\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\tvar morph = geometry.morphTargets[ i ];\n\t\tvar chunks = morph.name.match( pattern );\n\n\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\tvar name = chunks[ 1 ];\n\t\t\tvar num = chunks[ 2 ];\n\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\tvar range = frameRanges[ name ];\n\n\t\t\tif ( i < range.start ) range.start = i;\n\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t}\n\n\t}\n\n\tfor ( var name in frameRanges ) {\n\n\t\tvar range = frameRanges[ name ];\n\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t}\n\n\tthis.firstAnimation = firstAnimation;\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.direction = 1;\n\t\tanimation.directionBackwards = false;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.direction = - 1;\n\t\tanimation.directionBackwards = true;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.fps = fps;\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.duration = duration;\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.weight = weight;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.time = time;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\tvar time = 0;\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\ttime = animation.time;\n\n\t}\n\n\treturn time;\n\n};\n\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\tvar duration = - 1;\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tduration = animation.duration;\n\n\t}\n\n\treturn duration;\n\n};\n\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.time = 0;\n\t\tanimation.active = true;\n\n\t} else {\n\n\t\tconsole.warn( \"animation[\" + name + \"] undefined\" );\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\tvar animation = this.animationsMap[ name ];\n\n\tif ( animation ) {\n\n\t\tanimation.active = false;\n\n\t}\n\n};\n\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\n\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\tvar animation = this.animationsList[ i ];\n\n\t\tif ( ! animation.active ) continue;\n\n\t\tvar frameTime = animation.duration / animation.length;\n\n\t\tanimation.time += animation.direction * delta;\n\n\t\tif ( animation.mirroredLoop ) {\n\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t}\n\n\t\tvar keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\tvar weight = animation.weight;\n\n\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\tanimation.currentFrame = keyframe;\n\n\t\t}\n\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t}\n\n};\n\n\n// Export the THREE object for **Node.js**, with\n// backwards-compatibility for the old `require()` API. If we're in\n// the browser, add `_` as a global object via a string identifier,\n// for Closure Compiler \"advanced\" mode.\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    exports = module.exports = THREE;\n  }\n  exports.THREE = THREE;\n} else {\n  this['THREE'] = THREE;\n}\n"]},"metadata":{},"sourceType":"script"}