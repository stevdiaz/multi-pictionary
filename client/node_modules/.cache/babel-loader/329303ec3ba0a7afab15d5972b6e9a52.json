{"ast":null,"code":"const appendScript = scriptToAppend => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = scriptToAppend;\n    script.async = true;\n    script.addEventListener('load', () => {\n      resolve();\n    });\n    script.addEventListener('error', () => {\n      reject();\n    });\n    document.body.appendChild(script);\n  });\n};\n\nconst leapScript = \"lib/leap.min.js\";\nconst leapPluginsScript = \"lib/leap-plugins.min.js\";\nexport const appendLeapScripts = () => {\n  return Promise.all([appendScript(leapScript), appendScript(leapPluginsScript)]);\n};","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/helpers/scriptHelper.js"],"names":["appendScript","scriptToAppend","Promise","resolve","reject","script","document","createElement","type","src","async","addEventListener","body","appendChild","leapScript","leapPluginsScript","appendLeapScripts","all"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,cAAD,IAAoB;AACrC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAaR,cAAb;AACAI,IAAAA,MAAM,CAACK,KAAP,GAAe,IAAf;AACAL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAClCR,MAAAA,OAAO;AACV,KAFD;AAGAE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACnCP,MAAAA,MAAM;AACT,KAFD;AAGAE,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACH,GAZM,CAAP;AAaH,CAdD;;AAgBA,MAAMS,UAAU,GAAG,iBAAnB;AACA,MAAMC,iBAAiB,GAAG,yBAA1B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAOd,OAAO,CAACe,GAAR,CAAY,CAACjB,YAAY,CAACc,UAAD,CAAb,EAA2Bd,YAAY,CAACe,iBAAD,CAAvC,CAAZ,CAAP;AACH,CAFM","sourcesContent":["const appendScript = (scriptToAppend) => {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.type = \"text/javascript\";\n        script.src = scriptToAppend;\n        script.async = true;\n        script.addEventListener('load', () => {\n            resolve();\n        });\n        script.addEventListener('error', () => {\n            reject();\n        });\n        document.body.appendChild(script);\n    });\n}\n\nconst leapScript = \"lib/leap.min.js\";\nconst leapPluginsScript = \"lib/leap-plugins.min.js\";\n\nexport const appendLeapScripts = () => {\n    return Promise.all([appendScript(leapScript), appendScript(leapPluginsScript)]);\n}"]},"metadata":{},"sourceType":"module"}