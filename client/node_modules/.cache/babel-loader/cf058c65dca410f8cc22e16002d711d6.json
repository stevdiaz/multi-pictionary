{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Cursor.js\";\nimport React, { Component } from 'react';\nimport './Cursor.css';\nimport Leap from 'leapjs';\nimport 'leapjs-plugins';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cursor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGrabbing: false,\n      isPointing: false,\n      position: {\n        x: 0,\n        y: 0\n      }\n    };\n    this.grabThreshold = 0.8;\n    this.flatThreshold = 0.3;\n  }\n\n  componentDidMount() {\n    // this.leapController = new Leap.Controller();\n    this.leapController.use('screenPosition', {\n      scale: 0.6,\n      positioning: 'absolute'\n    });\n    this.leapController.on('frame', frame => this.onLeapFrame(frame));\n    this.leapController.on('gesture', gesture => this.onLeapGesture(gesture));\n    this.leapController.connect();\n  }\n\n  componentDidUpdate() {}\n\n  onLeapFrame(frame) {\n    if (frame.hands.length > 0) {\n      const hand = frame.hands[0];\n      const handPosition = hand.screenPosition();\n      this.setState({\n        position: {\n          x: handPosition[0] + 200,\n          y: handPosition[1] + 300\n        }\n      });\n\n      if (hand.grabStrength > this.grabThreshold) {\n        if (!this.state.isGrabbing) {\n          this.setState({\n            isGrabbing: true\n          });\n        }\n\n        this.props.onHandGrabUpdate(true);\n      } else if (hand.grabStrength < this.flatThreshold) {\n        if (this.state.isGrabbing) {\n          this.setState({\n            isGrabbing: false\n          });\n        }\n\n        this.props.onHandGrabUpdate(false);\n      }\n\n      const isPointing = this.onlyIndexFingerExtended(hand);\n      this.setState({\n        isPointing: isPointing\n      });\n      this.props.onPointUpdate(isPointing, this.state.position);\n    }\n  }\n\n  onlyIndexFingerExtended(hand) {\n    return hand.indexFinger.extended && !hand.ringFinger.extended && !hand.pinky.extended && !hand.thumb.extended && !hand.middleFinger.extended;\n  }\n\n  onLeapGesture(gesture) {\n    console.log(gesture.type);\n  }\n\n  render() {\n    var className = 'Cursor-cursor';\n\n    if (this.state.isGrabbing) {\n      className += ' Cursor-cursorGrab';\n    } else if (this.state.isPointing) {\n      className += ' Cursor-cursorPoint';\n    } else {\n      className += ' Cursor-cursorNormal';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      style: {\n        left: `${this.state.position.x}px`,\n        top: `${this.state.position.y}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Cursor.js"],"names":["React","Component","Leap","Cursor","constructor","props","state","isGrabbing","isPointing","position","x","y","grabThreshold","flatThreshold","componentDidMount","leapController","use","scale","positioning","on","frame","onLeapFrame","gesture","onLeapGesture","connect","componentDidUpdate","hands","length","hand","handPosition","screenPosition","setState","grabStrength","onHandGrabUpdate","onlyIndexFingerExtended","onPointUpdate","indexFinger","extended","ringFinger","pinky","thumb","middleFinger","console","log","type","render","className","left","top"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Cursor.css';\n\nimport Leap from 'leapjs';\nimport 'leapjs-plugins'\n\nexport default class Cursor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isGrabbing: false,\n            isPointing: false,\n            position: {\n                x: 0,\n                y: 0,\n            },\n        };\n        this.grabThreshold = 0.8;\n        this.flatThreshold = 0.3;\n    }\n    componentDidMount() {\n        // this.leapController = new Leap.Controller();\n        this.leapController.use('screenPosition', {scale: 0.6, positioning: 'absolute'});\n        this.leapController.on('frame', (frame) => this.onLeapFrame(frame));\n        this.leapController.on('gesture', (gesture) => this.onLeapGesture(gesture));\n        this.leapController.connect();\n    }\n    componentDidUpdate() {\n\n    }\n    onLeapFrame(frame) {\n        if (frame.hands.length > 0) {\n            const hand = frame.hands[0];\n            const handPosition = hand.screenPosition();\n            this.setState({position: {x: handPosition[0] + 200, y: handPosition[1] + 300}});\n            if (hand.grabStrength > this.grabThreshold) {\n                if (!this.state.isGrabbing) {\n                    this.setState({\n                        isGrabbing: true,\n                    });\n                }\n                this.props.onHandGrabUpdate(true);\n            } else if (hand.grabStrength < this.flatThreshold) {\n                if (this.state.isGrabbing) {\n                    this.setState({\n                        isGrabbing: false,\n                    });\n                }\n                this.props.onHandGrabUpdate(false);\n            }\n            const isPointing = this.onlyIndexFingerExtended(hand);\n            this.setState({\n                isPointing: isPointing,\n            });\n            this.props.onPointUpdate(isPointing, this.state.position);\n        }\n    }\n    onlyIndexFingerExtended(hand) {\n        return (hand.indexFinger.extended && !hand.ringFinger.extended && !hand.pinky.extended && !hand.thumb.extended && !hand.middleFinger.extended);\n    }\n    onLeapGesture(gesture) {\n        console.log(gesture.type);\n    }\n    render() {\n        var className = 'Cursor-cursor';\n        if (this.state.isGrabbing) {\n            className += ' Cursor-cursorGrab';\n        } else if (this.state.isPointing) {\n            className += ' Cursor-cursorPoint';\n        } else {\n            className += ' Cursor-cursorNormal';\n        }\n        return (\n            <div className={className} style={{left: `${this.state.position.x}px`, top: `${this.state.position.y}px`}}/>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}