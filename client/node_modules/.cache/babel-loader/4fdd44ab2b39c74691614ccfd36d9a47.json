{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Drawer.js\";\nimport React, { Component } from 'react';\nimport './Drawer.css';\nimport Canvas from './Canvas';\nimport DrawCard from './DrawCard';\nimport DrawHelper from './DrawHelper';\nimport { drawStates } from '../helpers/constants';\nimport { setupSpeech } from '../helpers/speechHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Drawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawState: drawStates.choosingState,\n      isDrawing: false\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  updateIsDrawing(isDrawing) {\n    if (this.state.drawState === drawStates.choosingState) {\n      // transitioning from choosing to drawing, set up speech\n      setupSpeech(transcript => this.processSpeech(transcript));\n    }\n\n    this.setState({\n      drawState: drawStates.drawingState,\n      isDrawing: isDrawing\n    });\n  }\n\n  processSpeech(transcript) {\n    console.log(transcript);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Drawer-container\",\n      children: [/*#__PURE__*/_jsxDEV(DrawCard, {\n        swipeObject: this.props.swipeObject,\n        isDrawing: this.state.isDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        isIndexPoint: this.props.isIndexPoint,\n        handPos: this.props.handPos,\n        isCircular: this.props.isCircular,\n        onStartDraw: () => this.updateIsDrawing(true),\n        onEndDraw: () => this.updateIsDrawing(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawHelper, {\n        drawState: this.state.drawState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Drawer.js"],"names":["React","Component","Canvas","DrawCard","DrawHelper","drawStates","setupSpeech","Drawer","constructor","props","state","drawState","choosingState","isDrawing","componentDidMount","componentDidUpdate","updateIsDrawing","transcript","processSpeech","setState","drawingState","console","log","render","swipeObject","isIndexPoint","handPos","isCircular"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,eAAe,MAAMC,MAAN,SAAqBP,KAAK,CAACC,SAA3B,CAAqC;AAChDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEN,UAAU,CAACO,aADb;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,eAAe,CAACH,SAAD,EAAY;AACvB,QAAI,KAAKH,KAAL,CAAWC,SAAX,KAAyBN,UAAU,CAACO,aAAxC,EAAuD;AACnD;AACAN,MAAAA,WAAW,CAAEW,UAAD,IAAgB,KAAKC,aAAL,CAAmBD,UAAnB,CAAjB,CAAX;AACH;;AACD,SAAKE,QAAL,CAAc;AACVR,MAAAA,SAAS,EAAEN,UAAU,CAACe,YADZ;AAEVP,MAAAA,SAAS,EAAEA;AAFD,KAAd;AAIH;;AACDK,EAAAA,aAAa,CAACD,UAAD,EAAa;AACtBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACH;;AACDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWe,WAAlC;AAA+C,QAAA,SAAS,EAAE,KAAKd,KAAL,CAAWG;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWgB,YAAjC;AACQ,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiB,OAD5B;AAEQ,QAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWkB,UAF/B;AAGQ,QAAA,WAAW,EAAE,MAAM,KAAKX,eAAL,CAAqB,IAArB,CAH3B;AAIQ,QAAA,SAAS,EAAE,MAAM,KAAKA,eAAL,CAAqB,KAArB;AAJzB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAvC+C","sourcesContent":["import React, { Component } from 'react';\nimport './Drawer.css';\n\nimport Canvas from './Canvas';\nimport DrawCard from './DrawCard';\nimport DrawHelper from './DrawHelper';\n\nimport { drawStates } from '../helpers/constants';\nimport { setupSpeech } from '../helpers/speechHelper';\n\nexport default class Drawer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drawState: drawStates.choosingState,\n            isDrawing: false,\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate() {\n    \n    }\n    updateIsDrawing(isDrawing) {\n        if (this.state.drawState === drawStates.choosingState) {\n            // transitioning from choosing to drawing, set up speech\n            setupSpeech((transcript) => this.processSpeech(transcript));\n        }\n        this.setState({\n            drawState: drawStates.drawingState,\n            isDrawing: isDrawing,\n        });\n    }\n    processSpeech(transcript) {\n        console.log(transcript);\n    }\n    render() {\n        return (\n            <div className='Drawer-container'>\n                <DrawCard swipeObject={this.props.swipeObject} isDrawing={this.state.isDrawing}/>\n                <Canvas isIndexPoint={this.props.isIndexPoint} \n                        handPos={this.props.handPos} \n                        isCircular={this.props.isCircular}\n                        onStartDraw={() => this.updateIsDrawing(true)} \n                        onEndDraw={() => this.updateIsDrawing(false)} />\n                <DrawHelper drawState={this.state.drawState} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}