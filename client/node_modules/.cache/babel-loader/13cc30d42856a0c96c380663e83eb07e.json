{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/ThickPalette.js\";\nimport React, { Component } from 'react';\nimport './ThickPalette.css';\nimport { thickness, defaultThickness } from '../helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ThickPalette extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedThickness: defaultThickness\n    };\n    this.sizeForThickness = {\n      small: '50px',\n      medium: '70px',\n      large: '90px',\n      xLarge: '110px'\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isGrabbing && !prevProps.isGrabbing) {\n      this.onHandGrab(this.props.handPos);\n    }\n  }\n\n  onHandGrab(handPos) {\n    Object.keys(thickness).forEach(thicknessValue => {\n      const intersects = this.doesIntersect(handPos, document.getElementById(thicknessValue).getBoundingClientRect());\n\n      if (intersects && this.state.selectedThickness !== thickness[thicknessValue]) {\n        this.setState({\n          selectedThickness: thickness[thicknessValue]\n        }, () => this.props.onSelectThickness(this.state.selectedThickness));\n      }\n    });\n  }\n\n  doesIntersect(handPos, rectangle) {\n    return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom;\n  }\n\n  render() {\n    const thicknessDivs = Object.keys(thickness).map(thicknessValue => {\n      const size = this.sizeForThickness[thicknessValue];\n      const className = 'ThickPalette-thickness' + (this.state.selectedThickness === thickness[thicknessValue] ? ' ThickPalette-thicknessSelected' : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        id: thicknessValue,\n        style: {\n          width: size,\n          height: size\n        }\n      }, thicknessValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ThickPalette-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ThickPalette-title\",\n        children: \"Thickness:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ThickPalette-column\",\n        children: thicknessDivs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/ThickPalette.js"],"names":["React","Component","thickness","defaultThickness","ThickPalette","constructor","props","state","selectedThickness","sizeForThickness","small","medium","large","xLarge","componentDidMount","componentDidUpdate","prevProps","isGrabbing","onHandGrab","handPos","Object","keys","forEach","thicknessValue","intersects","doesIntersect","document","getElementById","getBoundingClientRect","setState","onSelectThickness","rectangle","left","x","right","top","y","bottom","render","thicknessDivs","map","size","className","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './ThickPalette.css';\n\nimport {thickness, defaultThickness} from '../helpers/constants';\n\nexport default class ThickPalette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedThickness: defaultThickness,\n        };\n        this.sizeForThickness = {\n            small : '50px',\n            medium : '70px',\n            large : '90px',\n            xLarge : '110px',\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate() {\n\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.isGrabbing && !prevProps.isGrabbing) {\n            this.onHandGrab(this.props.handPos);\n        }\n    }\n    onHandGrab(handPos) {\n        Object.keys(thickness).forEach(thicknessValue => {\n            const intersects = this.doesIntersect(handPos, document.getElementById(thicknessValue).getBoundingClientRect());\n            if (intersects && this.state.selectedThickness !== thickness[thicknessValue]) {\n                this.setState({\n                    selectedThickness: thickness[thicknessValue],\n                }, () => this.props.onSelectThickness(this.state.selectedThickness));\n            }\n        })\n    }\n    doesIntersect(handPos, rectangle) {\n        return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom; \n    }\n    render() {\n        const thicknessDivs = Object.keys(thickness).map(thicknessValue => {\n            const size = this.sizeForThickness[thicknessValue];\n            const className = 'ThickPalette-thickness' + (this.state.selectedThickness === thickness[thicknessValue] ? ' ThickPalette-thicknessSelected' : '');\n            return (\n                <div className={className} id={thicknessValue} key={thicknessValue} style={{width: size, height: size}} />\n            )\n        });\n        return (\n            <div className='ThickPalette-container'>\n                <div className='ThickPalette-title'>\n                    Thickness:\n                </div>\n                <div className='ThickPalette-column'>\n                    {thicknessDivs}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}