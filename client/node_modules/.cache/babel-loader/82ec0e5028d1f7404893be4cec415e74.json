{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/components/ColorPalette.js\";\nimport React, { Component } from 'react';\nimport './ColorPalette.css';\nimport { colors, defaultColor } from '../helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ColorPalette extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: defaultColor\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isGrabbing && !prevProps.isGrabbing) {\n      this.onHandGrab(this.props.handPos);\n    }\n  }\n\n  onHandGrab(handPos) {\n    Object.keys(colors).forEach(color => {\n      const intersects = this.doesIntersect(handPos, document.getElementById(color).getBoundingClientRect());\n\n      if (intersects && this.state.selectedColor !== colors[color]) {\n        this.setState({\n          selectedColor: colors[color]\n        }, () => this.props.onSelectColor(this.state.selectedColor, color));\n      }\n    });\n  }\n\n  doesIntersect(handPos, rectangle) {\n    return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom;\n  }\n\n  render() {\n    const colorDivs = Object.keys(colors).map(color => {\n      let className = 'ColorPalette-color';\n\n      if (colors[color] === this.state.selectedColor) {\n        if (this.state.selectedColor === colors.green) {\n          className += ' ColorPalette-colorSelectedGreen';\n        } else {\n          className += ' ColorPalette-colorSelected';\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        id: color,\n        style: {\n          backgroundColor: colors[color]\n        }\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    });\n    const colorRows = colorDivs.filter((color, index) => index % 2 === 0).map((firsColor, index) => {\n      const secondColor = colorDivs[2 * index + 1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-row\",\n        children: [firsColor, secondColor]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ColorPalette-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-title\",\n        children: \"Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorPalette-column\",\n        children: colorRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/components/ColorPalette.js"],"names":["React","Component","colors","defaultColor","ColorPalette","constructor","props","state","selectedColor","componentDidMount","componentDidUpdate","prevProps","isGrabbing","onHandGrab","handPos","Object","keys","forEach","color","intersects","doesIntersect","document","getElementById","getBoundingClientRect","setState","onSelectColor","rectangle","left","x","right","top","y","bottom","render","colorDivs","map","className","green","backgroundColor","colorRows","filter","index","firsColor","secondColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AAEA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,sBAAnC;;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACC,SAAjC,CAA2C;AACtDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAEL;AADN,KAAb;AAGH;;AACDM,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKL,KAAL,CAAWM,UAAX,IAAyB,CAACD,SAAS,CAACC,UAAxC,EAAoD;AAChD,WAAKC,UAAL,CAAgB,KAAKP,KAAL,CAAWQ,OAA3B;AACH;AACJ;;AACDD,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,OAApB,CAA4BC,KAAK,IAAI;AACjC,YAAMC,UAAU,GAAG,KAAKC,aAAL,CAAmBN,OAAnB,EAA4BO,QAAQ,CAACC,cAAT,CAAwBJ,KAAxB,EAA+BK,qBAA/B,EAA5B,CAAnB;;AACA,UAAIJ,UAAU,IAAI,KAAKZ,KAAL,CAAWC,aAAX,KAA6BN,MAAM,CAACgB,KAAD,CAArD,EAA8D;AAC1D,aAAKM,QAAL,CAAc;AACVhB,UAAAA,aAAa,EAAEN,MAAM,CAACgB,KAAD;AADX,SAAd,EAEG,MAAM,KAAKZ,KAAL,CAAWmB,aAAX,CAAyB,KAAKlB,KAAL,CAAWC,aAApC,EAAmDU,KAAnD,CAFT;AAGH;AACJ,KAPD;AAQH;;AACDE,EAAAA,aAAa,CAACN,OAAD,EAAUY,SAAV,EAAqB;AAC9B,WAAOA,SAAS,CAACC,IAAV,IAAkBb,OAAO,CAACc,CAA1B,IAA+Bd,OAAO,CAACc,CAAR,IAAaF,SAAS,CAACG,KAAtD,IAA+DH,SAAS,CAACI,GAAV,IAAiBhB,OAAO,CAACiB,CAAxF,IAA6FjB,OAAO,CAACiB,CAAR,IAAaL,SAAS,CAACM,MAA3H;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAGnB,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBiC,GAApB,CAAwBjB,KAAK,IAAI;AAC/C,UAAIkB,SAAS,GAAG,oBAAhB;;AACA,UAAIlC,MAAM,CAACgB,KAAD,CAAN,KAAkB,KAAKX,KAAL,CAAWC,aAAjC,EAAgD;AAC5C,YAAI,KAAKD,KAAL,CAAWC,aAAX,KAA6BN,MAAM,CAACmC,KAAxC,EAA+C;AAC3CD,UAAAA,SAAS,IAAI,kCAAb;AACH,SAFD,MAEO;AACHA,UAAAA,SAAS,IAAI,6BAAb;AACH;AACJ;;AACD,0BACI;AAAK,QAAA,SAAS,EAAEA,SAAhB;AAA2B,QAAA,EAAE,EAAElB,KAA/B;AAAkD,QAAA,KAAK,EAAE;AAACoB,UAAAA,eAAe,EAAEpC,MAAM,CAACgB,KAAD;AAAxB;AAAzD,SAA2CA,KAA3C;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAZiB,CAAlB;AAaA,UAAMqB,SAAS,GAAGL,SAAS,CAACM,MAAV,CAAiB,CAACtB,KAAD,EAAQuB,KAAR,KAAkBA,KAAK,GAAG,CAAR,KAAc,CAAjD,EAAoDN,GAApD,CAAwD,CAACO,SAAD,EAAYD,KAAZ,KAAsB;AAC5F,YAAME,WAAW,GAAGT,SAAS,CAAC,IAAEO,KAAF,GAAQ,CAAT,CAA7B;AACA,0BAAQ;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACHC,SADG,EAEHC,WAFG;AAAA,SAAuCF,KAAvC;AAAA;AAAA;AAAA;AAAA,cAAR;AAIH,KANiB,CAAlB;AAOA,wBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBACKF;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA3DqD","sourcesContent":["import React, { Component } from 'react';\nimport './ColorPalette.css';\n\nimport {colors, defaultColor} from '../helpers/constants';\n\nexport default class ColorPalette extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedColor: defaultColor,\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.isGrabbing && !prevProps.isGrabbing) {\n            this.onHandGrab(this.props.handPos);\n        }\n    }\n    onHandGrab(handPos) {\n        Object.keys(colors).forEach(color => {\n            const intersects = this.doesIntersect(handPos, document.getElementById(color).getBoundingClientRect());\n            if (intersects && this.state.selectedColor !== colors[color]) {\n                this.setState({\n                    selectedColor: colors[color],\n                }, () => this.props.onSelectColor(this.state.selectedColor, color));\n            }\n        })\n    }\n    doesIntersect(handPos, rectangle) {\n        return rectangle.left <= handPos.x && handPos.x <= rectangle.right && rectangle.top <= handPos.y && handPos.y <= rectangle.bottom; \n    }\n    render() {\n        const colorDivs = Object.keys(colors).map(color => {\n            let className = 'ColorPalette-color';\n            if (colors[color] === this.state.selectedColor) {\n                if (this.state.selectedColor === colors.green) {\n                    className += ' ColorPalette-colorSelectedGreen'\n                } else {\n                    className += ' ColorPalette-colorSelected';\n                }\n            }\n            return (\n                <div className={className} id={color} key={color} style={{backgroundColor: colors[color]}}/>\n            );\n        });\n        const colorRows = colorDivs.filter((color, index) => index % 2 === 0).map((firsColor, index) => {\n            const secondColor = colorDivs[2*index+1];\n            return (<div className='ColorPalette-row' key={index}>\n                {firsColor}\n                {secondColor}\n            </div>);\n        });\n        return (\n            <div className='ColorPalette-container'>\n                <div className='ColorPalette-title'>\n                    Colors:\n                </div>\n                <div className='ColorPalette-column'>\n                    {colorRows}\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}