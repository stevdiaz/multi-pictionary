{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\nimport Cursor from './components/Cursor';\nimport Entry from './components/Entry';\nimport Canvas from './components/Canvas';\nimport Drawer from './components/Drawer';\nimport ColorPalette from './components/ColorPalette';\nimport JoinCreate from './components/JoinCreate';\nimport WaitingRoom from './components/WaitingRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didTransitionToDraw: false,\n      isIndexPoint: false,\n      handPos: {\n        x: 0,\n        y: 0\n      },\n      isGrabbing: false,\n      isCircular: false,\n      swipeObject: {\n        isSwipe: false,\n        isRight: false\n      }\n    };\n    this.socket = socketIOClient();\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  onPointUpdate(isIndexPoint, handPos) {\n    this.setState({\n      isIndexPoint: isIndexPoint,\n      handPos: handPos\n    });\n  }\n\n  onHandGrabUpdate(isGrabbing) {\n    this.setState({\n      isGrabbing: isGrabbing\n    });\n  }\n\n  onCircularUpdate(isCircular) {\n    this.setState({\n      isCircular: isCircular\n    });\n  }\n\n  onSwipeUpdate(swipeObject) {\n    this.setState({\n      swipeObject: swipeObject\n    });\n  }\n\n  render() {\n    let content = /*#__PURE__*/_jsxDEV(Entry, {\n      handPos: this.state.handPos,\n      isGrabbing: this.state.isGrabbing,\n      socket: this.socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 20\n    }, this);\n\n    if (this.state.isGrabbing && !this.state.didTransitionToDraw) {\n      this.setState({\n        didTransitionToDraw: true\n      });\n    }\n\n    if (this.state.didTransitionToDraw) {\n      content = /*#__PURE__*/_jsxDEV(Drawer, {\n        isIndexPoint: this.state.isIndexPoint,\n        handPos: this.state.handPos,\n        swipeObject: this.state.swipeObject,\n        isGrabbing: this.state.isGrabbing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this);\n    }\n\n    content = /*#__PURE__*/_jsxDEV(WaitingRoom, {\n      roomName: 'test',\n      handPos: this.state.handPos,\n      isGrabbing: this.state.isGrabbing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Cursor, {\n        onHandGrabUpdate: isGrabbing => this.onHandGrabUpdate(isGrabbing),\n        onPointUpdate: (isIndexPoint, handPos) => this.onPointUpdate(isIndexPoint, handPos),\n        onCircularUpdate: isCircular => this.onCircularUpdate(isCircular),\n        onSwipeUpdate: swipeObject => this.onSwipeUpdate(swipeObject)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/client/src/App.js"],"names":["React","Component","socketIOClient","Cursor","Entry","Canvas","Drawer","ColorPalette","JoinCreate","WaitingRoom","App","constructor","props","state","didTransitionToDraw","isIndexPoint","handPos","x","y","isGrabbing","isCircular","swipeObject","isSwipe","isRight","socket","componentDidMount","componentDidUpdate","onPointUpdate","setState","onHandGrabUpdate","onCircularUpdate","onSwipeUpdate","render","content"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\n\nimport Cursor from './components/Cursor';\nimport Entry from './components/Entry';\nimport Canvas from './components/Canvas';\nimport Drawer from './components/Drawer';\nimport ColorPalette from './components/ColorPalette';\nimport JoinCreate from './components/JoinCreate';\nimport WaitingRoom from './components/WaitingRoom';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didTransitionToDraw: false,\n      isIndexPoint: false,\n      handPos: {x: 0, y: 0},\n      isGrabbing: false,\n      isCircular: false,\n      swipeObject: {\n        isSwipe: false,\n        isRight: false,\n      },\n    };\n    this.socket = socketIOClient();\n  }\n\n  componentDidMount() {\n  \n  }\n  componentDidUpdate() {\n\n  }\n  onPointUpdate(isIndexPoint, handPos) {\n    this.setState({\n      isIndexPoint: isIndexPoint,\n      handPos: handPos,\n    });\n  }\n  onHandGrabUpdate(isGrabbing) {\n    this.setState({\n      isGrabbing: isGrabbing,\n    });\n  }\n  onCircularUpdate(isCircular) {\n    this.setState({\n      isCircular: isCircular,\n    });\n  }\n  onSwipeUpdate(swipeObject) {\n    this.setState({\n      swipeObject: swipeObject,\n    });\n  }\n  render() {\n    let content = (<Entry handPos={this.state.handPos} isGrabbing={this.state.isGrabbing} socket={this.socket}/>);\n    if (this.state.isGrabbing && !this.state.didTransitionToDraw) {\n      this.setState({\n        didTransitionToDraw: true,\n      });\n    }\n    if (this.state.didTransitionToDraw) {\n      content = (<Drawer isIndexPoint={this.state.isIndexPoint} \n                          handPos={this.state.handPos} \n                          swipeObject={this.state.swipeObject}\n                          isGrabbing={this.state.isGrabbing}/>);\n    }\n    content = (<WaitingRoom roomName={'test'} handPos={this.state.handPos} isGrabbing={this.state.isGrabbing} />)\n    return (\n      <div>\n        <Cursor onHandGrabUpdate={(isGrabbing) => this.onHandGrabUpdate(isGrabbing)} \n                onPointUpdate={(isIndexPoint, handPos) => this.onPointUpdate(isIndexPoint, handPos)}\n                onCircularUpdate={(isCircular) => this.onCircularUpdate(isCircular)}\n                onSwipeUpdate={(swipeObject) => this.onSwipeUpdate(swipeObject)}/>\n        {content}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}