{"ast":null,"code":"var _jsxFileName = \"/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Drawer.js\";\nimport React, { Component } from 'react';\nimport './Drawer.css';\nimport CanvasSpeechHandler from './CanvasSpeechHandler';\nimport DrawCard from './DrawCard';\nimport DrawHelper from './DrawHelper';\nimport ColorPalette from './ColorPalette';\nimport { drawStates, colors, defaultColor } from '../helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Drawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawState: drawStates.choosingState,\n      isDrawing: false,\n      selectedColor: defaultColor\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  updateIsDrawing(isDrawing) {\n    this.setState({\n      drawState: drawStates.drawingState,\n      isDrawing: isDrawing\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Drawer-container\",\n      children: [/*#__PURE__*/_jsxDEV(DrawCard, {\n        swipeObject: this.props.swipeObject,\n        isDrawing: this.state.isDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Drawer-row\",\n        children: [/*#__PURE__*/_jsxDEV(ColorPalette, {\n          handPos: this.props.handPos,\n          isGrabbing: this.isGrabbing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CanvasSpeechHandler, {\n          isIndexPoint: this.props.isIndexPoint,\n          handPos: this.props.handPos,\n          isCircular: this.props.isCircular,\n          onStartDraw: () => this.updateIsDrawing(true),\n          onEndDraw: () => this.updateIsDrawing(false),\n          selectedColor: this.state.selectedColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawHelper, {\n        drawState: this.state.drawState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/stevdiaz/Desktop/MIT SPRING 2021/6835/6835Final/pic/src/components/Drawer.js"],"names":["React","Component","CanvasSpeechHandler","DrawCard","DrawHelper","ColorPalette","drawStates","colors","defaultColor","Drawer","constructor","props","state","drawState","choosingState","isDrawing","selectedColor","componentDidMount","componentDidUpdate","updateIsDrawing","setState","drawingState","render","swipeObject","handPos","isGrabbing","isIndexPoint","isCircular"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,QAAiD,sBAAjD;;AAEA,eAAe,MAAMC,MAAN,SAAqBT,KAAK,CAACC,SAA3B,CAAqC;AAChDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAEP,UAAU,CAACQ,aADb;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,aAAa,EAAER;AAHN,KAAb;AAKH;;AACDS,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,eAAe,CAACJ,SAAD,EAAY;AACvB,SAAKK,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAEP,UAAU,CAACe,YADZ;AAEVN,MAAAA,SAAS,EAAEA;AAFD,KAAd;AAIH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWY,WAAlC;AAA+C,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWG;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWa,OAAlC;AAA2C,UAAA,UAAU,EAAE,KAAKC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,mBAAD;AAAqB,UAAA,YAAY,EAAE,KAAKd,KAAL,CAAWe,YAA9C;AACI,UAAA,OAAO,EAAE,KAAKf,KAAL,CAAWa,OADxB;AAEI,UAAA,UAAU,EAAE,KAAKb,KAAL,CAAWgB,UAF3B;AAGI,UAAA,WAAW,EAAE,MAAM,KAAKR,eAAL,CAAqB,IAArB,CAHvB;AAII,UAAA,SAAS,EAAE,MAAM,KAAKA,eAAL,CAAqB,KAArB,CAJrB;AAKI,UAAA,aAAa,EAAE,KAAKP,KAAL,CAAWI;AAL9B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AArC+C","sourcesContent":["import React, { Component } from 'react';\nimport './Drawer.css';\n\nimport CanvasSpeechHandler from './CanvasSpeechHandler';\nimport DrawCard from './DrawCard';\nimport DrawHelper from './DrawHelper';\nimport ColorPalette from './ColorPalette';\n\nimport { drawStates, colors, defaultColor } from '../helpers/constants';\n\nexport default class Drawer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            drawState: drawStates.choosingState,\n            isDrawing: false,\n            selectedColor: defaultColor,\n        };\n    }\n    componentDidMount() {\n\n    }\n    componentDidUpdate() {\n    \n    }\n    updateIsDrawing(isDrawing) {\n        this.setState({\n            drawState: drawStates.drawingState,\n            isDrawing: isDrawing,\n        });\n    }\n    render() {\n        return (\n            <div className='Drawer-container'>\n                <DrawCard swipeObject={this.props.swipeObject} isDrawing={this.state.isDrawing}/>\n                <div className='Drawer-row'>\n                    <ColorPalette handPos={this.props.handPos} isGrabbing={this.isGrabbing} />\n                    <CanvasSpeechHandler isIndexPoint={this.props.isIndexPoint} \n                        handPos={this.props.handPos} \n                        isCircular={this.props.isCircular}\n                        onStartDraw={() => this.updateIsDrawing(true)} \n                        onEndDraw={() => this.updateIsDrawing(false)}\n                        selectedColor={this.state.selectedColor} />\n                </div>\n                <DrawHelper drawState={this.state.drawState} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}